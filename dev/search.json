[{"path":"https://bbotk.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Becker. Maintainer, author. Jakob Richter. Author. Michel Lang. Author. Bernd Bischl. Author. Martin Binder. Author. Olaf Mersmann. Contributor.","code":""},{"path":"https://bbotk.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker M, Richter J, Lang M, Bischl B, Binder M (2025). bbotk: Black-Box Optimization Toolkit. R package version 1.5.0.9000, https://bbotk.mlr-org.com.","code":"@Manual{,   title = {bbotk: Black-Box Optimization Toolkit},   author = {Marc Becker and Jakob Richter and Michel Lang and Bernd Bischl and Martin Binder},   year = {2025},   note = {R package version 1.5.0.9000},   url = {https://bbotk.mlr-org.com}, }"},{"path":"https://bbotk.mlr-org.com/dev/index.html","id":"bbotk---black-box-optimization-toolkit","dir":"","previous_headings":"","what":"Black-Box Optimization Toolkit","title":"Black-Box Optimization Toolkit","text":"Package website: release | dev bbotk black-box optimization framework R. features highly configurable search spaces via paradox package optimizes every user-defined objective function. package includes several optimization algorithms e.g. Random Search, Grid Search, Iterated Racing, Bayesian Optimization (mlr3mbo) Hyperband (mlr3hyperband). bbotk base package mlr3tuning, mlr3fselect miesmuschel.","code":""},{"path":"https://bbotk.mlr-org.com/dev/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Black-Box Optimization Toolkit","text":"several sections black-box optimization mlr3book. Often sections tuning also relevant general black-box optimization. Getting started black-box optimization. overview optimizers tuners can found website. Learn log transformations search space. advanced search space transformations. Run multi-objective optimization. mlr3viz package can used visualize optimization process. Quick optimization bb_optimize function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Black-Box Optimization Toolkit","text":"Install latest release CRAN. Install development version GitHub.","code":"install.packages(\"bbotk\") pak::pkg_install(\"mlr-org/bbotk\")"},{"path":"https://bbotk.mlr-org.com/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Black-Box Optimization Toolkit","text":"","code":"# define the objective function fun = function(xs) {   - (xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + 10 }  # set domain domain = ps(   x1 = p_dbl(-10, 10),   x2 = p_dbl(-5, 5) )  # set codomain codomain = ps(   y = p_dbl(tags = \"maximize\") )  # create objective objective = ObjectiveRFun$new(   fun = fun,   domain = domain,   codomain = codomain,   properties = \"deterministic\" )  # initialize instance instance = oi(   objective = objective,   terminator = trm(\"evals\", n_evals = 20) )  # load optimizer optimizer = opt(\"gensa\")  # trigger optimization optimizer$optimize(instance) ##    x1 x2  x_domain  y ## 1:  2 -3 <list[2]> 10 # best performing configuration instance$result ##    x1 x2  x_domain  y ## 1:  2 -3 <list[2]> 10 # all evaluated configuration as.data.table(instance$archive) ##            x1        x2          y           timestamp batch_nr x_domain_x1 x_domain_x2 ##  1: -4.689827 -1.278761 -37.716445 2024-08-13 17:52:54        1   -4.689827   -1.278761 ##  2: -5.930364 -4.400474 -54.851999 2024-08-13 17:52:54        2   -5.930364   -4.400474 ##  3:  7.170817 -1.519948 -18.927907 2024-08-13 17:52:54        3    7.170817   -1.519948 ##  4:  2.045200 -1.519948   7.807403 2024-08-13 17:52:54        4    2.045200   -1.519948 ##  5:  2.045200 -2.064742   9.123250 2024-08-13 17:52:54        5    2.045200   -2.064742 ## ---                                                                                     ## 16:  2.000000 -3.000000  10.000000 2024-08-13 17:52:54       16    2.000000   -3.000000 ## 17:  2.000001 -3.000000  10.000000 2024-08-13 17:52:54       17    2.000001   -3.000000 ## 18:  1.999999 -3.000000  10.000000 2024-08-13 17:52:54       18    1.999999   -3.000000 ## 19:  2.000000 -2.999999  10.000000 2024-08-13 17:52:54       19    2.000000   -2.999999 ## 20:  2.000000 -3.000001  10.000000 2024-08-13 17:52:54       20    2.000000   -3.000001"},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Storage — Archive","title":"Data Storage — Archive","text":"`Archive“ class stores evaluated points performance scores","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Storage — Archive","text":"Archive abstract class implements base functionality archive must provide.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Data Storage — Archive","text":"search_space (paradox::ParamSet) Specification search space Optimizer. codomain (Codomain) Codomain objective function. start_time (POSIXct) Time stamp optimization started. time set Optimizer. check_values (logical(1)) Determines points results checked validity.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data Storage — Archive","text":"label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). cols_x (character()) Column names search space parameters. cols_y (character()) Column names codomain target parameters.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data Storage — Archive","text":"Archive$new() Archive$format() Archive$print() Archive$clear() Archive$help() Archive$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data Storage — Archive","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage — Archive","text":"","code":"Archive$new(   search_space,   codomain,   check_values = FALSE,   label = NA_character_,   man = NA_character_ )"},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage — Archive","text":"search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. codomain (paradox::ParamSet) Specifies codomain function. importantly tags output \"Parameter\" define whether minimized maximized.  default minimize component. check_values (logical(1)) x-values added archive checked validity? Search space logged archive. label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Data Storage — Archive","text":"Helper print outputs.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage — Archive","text":"","code":"Archive$format(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage — Archive","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Data Storage — Archive","text":"Printer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage — Archive","text":"","code":"Archive$print()"},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage — Archive","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Data Storage — Archive","text":"Clear evaluation results archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage — Archive","text":"","code":"Archive$clear()"},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Data Storage — Archive","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage — Archive","text":"","code":"Archive$help()"},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data Storage — Archive","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Storage — Archive","text":"","code":"Archive$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Archive.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Storage — Archive","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":null,"dir":"Reference","previous_headings":"","what":"Rush Data Storage — ArchiveAsync","title":"Rush Data Storage — ArchiveAsync","text":"ArchiveAsync stores evaluated points performance scores rush::Rush data base.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 Methods","title":"Rush Data Storage — ArchiveAsync","text":".data.table(archive) ArchiveAsync -> data.table::data.table() Returns tabular view performed function calls Objective. x_domain column unnested separate columns.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Rush Data Storage — ArchiveAsync","text":"bbotk::Archive -> ArchiveAsync","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Rush Data Storage — ArchiveAsync","text":"rush (Rush) Rush controller parallel optimization.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Rush Data Storage — ArchiveAsync","text":"data (data.table::data.table) Data table finished points. queued_data (data.table::data.table) Data table queued points. running_data (data.table::data.table) Data table running points. finished_data (data.table::data.table) Data table finished points. failed_data (data.table::data.table) Data table failed points. n_queued (integer(1)) Number queued points. n_running (integer(1)) Number running points. n_finished (integer(1)) Number finished points. n_failed (integer(1)) Number failed points. n_evals (integer(1)) Number evaluations stored archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Rush Data Storage — ArchiveAsync","text":"bbotk::Archive$format() bbotk::Archive$help() bbotk::Archive$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Rush Data Storage — ArchiveAsync","text":"ArchiveAsync$new() ArchiveAsync$push_points() ArchiveAsync$pop_point() ArchiveAsync$push_running_point() ArchiveAsync$push_result() ArchiveAsync$push_failed_point() ArchiveAsync$data_with_state() ArchiveAsync$best() ArchiveAsync$nds_selection() ArchiveAsync$clear() ArchiveAsync$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Rush Data Storage — ArchiveAsync","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$new(search_space, codomain, check_values = FALSE, rush)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. codomain (paradox::ParamSet) Specifies codomain function. importantly tags output \"Parameter\" define whether minimized maximized.  default minimize component. check_values (logical(1)) points evaluation results checked validity? rush (Rush) rush instance supplied, tuning runs without batches.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-push-points-","dir":"Reference","previous_headings":"","what":"Method push_points()","title":"Rush Data Storage — ArchiveAsync","text":"Push queued points archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$push_points(xss)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"xss (list named list()) List named lists point values.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-pop-point-","dir":"Reference","previous_headings":"","what":"Method pop_point()","title":"Rush Data Storage — ArchiveAsync","text":"Pop point queue.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$pop_point()"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-push-running-point-","dir":"Reference","previous_headings":"","what":"Method push_running_point()","title":"Rush Data Storage — ArchiveAsync","text":"Push running point archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$push_running_point(xs, extra = NULL)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"xs (named list) Named list point values. extra (list()) Named list additional information.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-push-result-","dir":"Reference","previous_headings":"","what":"Method push_result()","title":"Rush Data Storage — ArchiveAsync","text":"Push result archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$push_result(key, ys, x_domain, extra = NULL)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"key (character()) Key point. ys (list()) Named list results. x_domain (list()) Named list transformed point values. extra (list()) Named list additional information.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-push-failed-point-","dir":"Reference","previous_headings":"","what":"Method push_failed_point()","title":"Rush Data Storage — ArchiveAsync","text":"Push failed point archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$push_failed_point(key, message)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"key (character()) Key point. message (character()) Error message.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-data-with-state-","dir":"Reference","previous_headings":"","what":"Method data_with_state()","title":"Rush Data Storage — ArchiveAsync","text":"Fetch points specific state.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$data_with_state(   fields = c(\"xs\", \"ys\", \"xs_extra\", \"worker_extra\", \"ys_extra\", \"condition\"),   states = c(\"queued\", \"running\", \"finished\", \"failed\"),   reset_cache = FALSE )"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"fields (character()) Fields fetch. Defaults c(\"xs\", \"ys\", \"xs_extra\", \"worker_extra\", \"ys_extra\"). states (character()) States tasks fetched. Defaults c(\"queued\", \"running\", \"finished\", \"failed\"). reset_cache (logical(1)) Whether reset cache finished points.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-best-","dir":"Reference","previous_headings":"","what":"Method best()","title":"Rush Data Storage — ArchiveAsync","text":"Returns best scoring evaluation(s). single-crit optimization, solution minimizes / maximizes objective function. multi-crit optimization, Pareto set / front.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$best(n_select = 1, ties_method = \"first\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"n_select (integer(1L)) Amount points select. Ignored multi-crit optimization. ties_method (character(1L)) Method break ties multiple points score. Either \"first\" (default) \"random\". Ignored multi-crit optimization. n_select > 1L, tie method ignored first point returned.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Rush Data Storage — ArchiveAsync","text":"data.table::data.table()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-nds-selection-","dir":"Reference","previous_headings":"","what":"Method nds_selection()","title":"Rush Data Storage — ArchiveAsync","text":"Calculate best points w.r.t. non dominated sorting hypervolume contribution.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$nds_selection(n_select = 1, ref_point = NULL)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"n_select (integer(1L)) Amount points select. ref_point (numeric()) Reference point hypervolume.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Rush Data Storage — ArchiveAsync","text":"data.table::data.table()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Rush Data Storage — ArchiveAsync","text":"Clear evaluation results archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$clear()"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Rush Data Storage — ArchiveAsync","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Rush Data Storage — ArchiveAsync","text":"","code":"ArchiveAsync$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsync.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rush Data Storage — ArchiveAsync","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":null,"dir":"Reference","previous_headings":"","what":"Frozen Rush Data Storage — ArchiveAsyncFrozen","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Freezes Redis data base ArchiveAsync  data.table::data.table(). points can added archive data can accessed analyzed. Useful Redis data base permanently available. Use callback bbotk.async_freeze_archive freeze archive optimization finished.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 Methods","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":".data.table(archive)ArchiveAsync -> data.table::data.table() Returns tabular view performed function calls Objective. x_domain column unnested separate columns.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"bbotk::Archive -> bbotk::ArchiveAsync -> ArchiveAsyncFrozen","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"data (data.table::data.table) Data table finished points. queued_data (data.table::data.table) Data table queued points. running_data (data.table::data.table) Data table running points. finished_data (data.table::data.table) Data table finished points. failed_data (data.table::data.table) Data table failed points. n_queued (integer(1)) Number queued points. n_running (integer(1)) Number running points. n_finished (integer(1)) Number finished points. n_failed (integer(1)) Number failed points. n_evals (integer(1)) Number evaluations stored archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"bbotk::Archive$format() bbotk::Archive$help() bbotk::Archive$print() bbotk::ArchiveAsync$best() bbotk::ArchiveAsync$nds_selection()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"ArchiveAsyncFrozen$new() ArchiveAsyncFrozen$push_points() ArchiveAsyncFrozen$pop_point() ArchiveAsyncFrozen$push_running_point() ArchiveAsyncFrozen$push_result() ArchiveAsyncFrozen$push_failed_point() ArchiveAsyncFrozen$data_with_state() ArchiveAsyncFrozen$clear() ArchiveAsyncFrozen$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$new(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"archive (ArchiveAsync) archive freeze.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-push-points-","dir":"Reference","previous_headings":"","what":"Method push_points()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Push queued points archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$push_points(xss)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"xss (list named list()) List named lists point values.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-pop-point-","dir":"Reference","previous_headings":"","what":"Method pop_point()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Pop point queue.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$pop_point()"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-push-running-point-","dir":"Reference","previous_headings":"","what":"Method push_running_point()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Push running point archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$push_running_point(xs, extra = NULL)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"xs (named list) Named list point values. extra (list()) Named list additional information.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-push-result-","dir":"Reference","previous_headings":"","what":"Method push_result()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Push result archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$push_result(key, ys, x_domain, extra = NULL)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"key (character()) Key point. ys (list()) Named list results. x_domain (list()) Named list transformed point values. extra (list()) Named list additional information.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-push-failed-point-","dir":"Reference","previous_headings":"","what":"Method push_failed_point()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Push failed point archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$push_failed_point(key, message)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"key (character()) Key point. message (character()) Error message.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-data-with-state-","dir":"Reference","previous_headings":"","what":"Method data_with_state()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Fetch points specific state.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$data_with_state(   fields = c(\"xs\", \"ys\", \"xs_extra\", \"worker_extra\", \"ys_extra\", \"condition\"),   states = c(\"queued\", \"running\", \"finished\", \"failed\"),   reset_cache = FALSE )"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"fields (character()) Fields fetch. Defaults c(\"xs\", \"ys\", \"xs_extra\", \"worker_extra\", \"ys_extra\"). states (character()) States tasks fetched. Defaults c(\"queued\", \"running\", \"finished\", \"failed\"). reset_cache (logical(1)) Whether reset cache finished points.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"Clear evaluation results archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$clear()"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"","code":"ArchiveAsyncFrozen$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveAsyncFrozen.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frozen Rush Data Storage — ArchiveAsyncFrozen","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Table Storage — ArchiveBatch","title":"Data Table Storage — ArchiveBatch","text":"ArchiveBatch stores evaluated points performance scores data.table::data.table().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 Methods","title":"Data Table Storage — ArchiveBatch","text":".data.table(archive) ArchiveBatch -> data.table::data.table() Returns tabular view performed function calls Objective. x_domain column unnested separate columns.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Data Table Storage — ArchiveBatch","text":"bbotk::Archive -> ArchiveBatch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Data Table Storage — ArchiveBatch","text":"data (data.table::data.table) Contains performed Objective function calls. data_extra (named list) Data created specific Optimizers relate individual function evaluation can therefore held $data. Every optimizer create refer entry list, named class().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Data Table Storage — ArchiveBatch","text":"n_evals (integer(1)) Number evaluations stored archive. n_batch (integer(1)) Number batches stored archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Data Table Storage — ArchiveBatch","text":"bbotk::Archive$format() bbotk::Archive$help() bbotk::Archive$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Data Table Storage — ArchiveBatch","text":"ArchiveBatch$new() ArchiveBatch$add_evals() ArchiveBatch$best() ArchiveBatch$nds_selection() ArchiveBatch$clear() ArchiveBatch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Data Table Storage — ArchiveBatch","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Table Storage — ArchiveBatch","text":"","code":"ArchiveBatch$new(search_space, codomain, check_values = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Table Storage — ArchiveBatch","text":"search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. codomain (paradox::ParamSet) Specifies codomain function. importantly tags output \"Parameter\" define whether minimized maximized.  default minimize component. check_values (logical(1)) x-values added archive checked validity? Search space logged archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"method-add-evals-","dir":"Reference","previous_headings":"","what":"Method add_evals()","title":"Data Table Storage — ArchiveBatch","text":"Adds function evaluations archive table.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Table Storage — ArchiveBatch","text":"","code":"ArchiveBatch$add_evals(xdt, xss_trafoed = NULL, ydt)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Table Storage — ArchiveBatch","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns. xss_trafoed (list()) Transformed point(s) domain space. ydt (data.table::data.table()) Optimal outcome.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"method-best-","dir":"Reference","previous_headings":"","what":"Method best()","title":"Data Table Storage — ArchiveBatch","text":"Returns best scoring evaluation(s). single-crit optimization, solution minimizes / maximizes objective function. multi-crit optimization, Pareto set / front.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Table Storage — ArchiveBatch","text":"","code":"ArchiveBatch$best(batch = NULL, n_select = 1L, ties_method = \"first\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Table Storage — ArchiveBatch","text":"batch (integer()) batch number(s) limit best results . Default batches. n_select (integer(1L)) Amount points select. Ignored multi-crit optimization. ties_method (character(1L)) Method break ties multiple points score. Either \"first\" (default) \"random\". Ignored multi-crit optimization. n_select > 1L, tie method ignored first point returned.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Data Table Storage — ArchiveBatch","text":"data.table::data.table()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"method-nds-selection-","dir":"Reference","previous_headings":"","what":"Method nds_selection()","title":"Data Table Storage — ArchiveBatch","text":"Calculate best points w.r.t. non dominated sorting hypervolume contribution.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Table Storage — ArchiveBatch","text":"","code":"ArchiveBatch$nds_selection(batch = NULL, n_select = 1, ref_point = NULL)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Table Storage — ArchiveBatch","text":"batch (integer()) batch number(s) limit best points . Default batches. n_select (integer(1L)) Amount points select. ref_point (numeric()) Reference point hypervolume.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Data Table Storage — ArchiveBatch","text":"data.table::data.table()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Data Table Storage — ArchiveBatch","text":"Clear evaluation results archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Table Storage — ArchiveBatch","text":"","code":"ArchiveBatch$clear()"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Data Table Storage — ArchiveBatch","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Table Storage — ArchiveBatch","text":"","code":"ArchiveBatch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ArchiveBatch.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Table Storage — ArchiveBatch","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Asynchronous Optimization Callback — CallbackAsync","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"Specialized mlr3misc::Callback asynchronous optimization. Callbacks allow customize behavior processes bbotk. callback_async() function creates CallbackAsync. Predefined callbacks stored dictionary mlr_callbacks can retrieved clbk(). information optimization callbacks see callback_async().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"mlr3misc::Callback -> CallbackAsync","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"on_optimization_begin (function()) Stage called beginning optimization main process. Called Optimizer$optimize(). on_worker_begin (function()) Stage called beginning optimization worker. Called worker loop. on_optimizer_before_eval (function()) Stage called optimizer proposes points. Called OptimInstance$.eval_point(). on_optimizer_after_eval (function()) Stage called points evaluated. Called OptimInstance$.eval_point(). on_worker_end (function()) Stage called end optimization worker. Called worker loop. on_result_begin (function()) Stage called results written. Called OptimInstance$assign_result(). on_result_end (function()) Stage called results written. Called OptimInstance$assign_result(). on_optimization_end (function()) Stage called end optimization main process. Called Optimizer$optimize().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"mlr3misc::Callback$call() mlr3misc::Callback$format() mlr3misc::Callback$help() mlr3misc::Callback$initialize() mlr3misc::Callback$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"CallbackAsync$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"","code":"CallbackAsync$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackAsync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Asynchronous Optimization Callback — CallbackAsync","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Batch Optimization Callback — CallbackBatch","title":"Create Batch Optimization Callback — CallbackBatch","text":"Specialized mlr3misc::Callback batch optimization. Callbacks allow customize behavior processes bbotk. callback_batch() function creates CallbackBatch. Predefined callbacks stored dictionary mlr_callbacks can retrieved clbk(). information optimization callbacks see callback_batch().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Create Batch Optimization Callback — CallbackBatch","text":"mlr3misc::Callback -> CallbackBatch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Create Batch Optimization Callback — CallbackBatch","text":"on_optimization_begin (function()) Stage called beginning optimization. Called Optimizer$optimize(). on_optimizer_before_eval (function()) Stage called optimizer proposes points. Called OptimInstance$eval_batch(). on_optimizer_after_eval (function()) Stage called points evaluated. Called OptimInstance$eval_batch(). on_result_begin (function()) Stage called results written. Called OptimInstance$assign_result(). on_result_end (function()) Stage called results written. Called OptimInstance$assign_result(). on_optimization_end (function()) Stage called end optimization. Called Optimizer$optimize().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Create Batch Optimization Callback — CallbackBatch","text":"mlr3misc::Callback$call() mlr3misc::Callback$format() mlr3misc::Callback$help() mlr3misc::Callback$initialize() mlr3misc::Callback$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Create Batch Optimization Callback — CallbackBatch","text":"CallbackBatch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Create Batch Optimization Callback — CallbackBatch","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Batch Optimization Callback — CallbackBatch","text":"","code":"CallbackBatch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Batch Optimization Callback — CallbackBatch","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/CallbackBatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Batch Optimization Callback — CallbackBatch","text":"","code":"# write archive to disk callback_batch(\"bbotk.backup\",   on_optimization_end = function(callback, context) {     saveRDS(context$instance$archive, \"archive.rds\")   } ) #> <CallbackBatch:bbotk.backup> #> * Active Stages: on_optimization_end"},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":null,"dir":"Reference","previous_headings":"","what":"Codomain of Function — Codomain","title":"Codomain of Function — Codomain","text":"paradox::ParamSet defining codomain function. parameter set must contain least one target parameter tagged \"minimize\" \"maximize\". codomain may contain extra parameters ignored calling Archive methods $best(), $nds_selection() $cols_y. class usually constructed internally paradox::ParamSet Objective initialized.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Codomain of Function — Codomain","text":"paradox::ParamSet -> Codomain","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Codomain of Function — Codomain","text":"is_target (named logical()) Position TRUE target parameters. target_length (integer()) Returns number target parameters. target_ids (character()) IDs contained target parameters. target_tags (named list() character()) Tags target parameters. maximization_to_minimization (integer()) Returns numeric vector values -1 1. Multiply outcome maximization problem turn minimization problem. direction (integer()) Returns 1 minimization -1 maximization. codomain contains multiple parameters integer vector returned. Multiply outcome maximization problem turn minimization problem.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Codomain of Function — Codomain","text":"paradox::ParamSet$add_dep() paradox::ParamSet$aggr_internal_tuned_values() paradox::ParamSet$assert() paradox::ParamSet$assert_dt() paradox::ParamSet$check() paradox::ParamSet$check_dependencies() paradox::ParamSet$check_dt() paradox::ParamSet$convert_internal_search_space() paradox::ParamSet$disable_internal_tuning() paradox::ParamSet$flatten() paradox::ParamSet$format() paradox::ParamSet$get_domain() paradox::ParamSet$get_values() paradox::ParamSet$ids() paradox::ParamSet$print() paradox::ParamSet$qunif() paradox::ParamSet$search_space() paradox::ParamSet$set_values() paradox::ParamSet$subset() paradox::ParamSet$subspaces() paradox::ParamSet$test() paradox::ParamSet$test_constraint() paradox::ParamSet$test_constraint_dt() paradox::ParamSet$test_dt() paradox::ParamSet$trafo()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Codomain of Function — Codomain","text":"Codomain$new() Codomain$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Codomain of Function — Codomain","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Codomain of Function — Codomain","text":"","code":"Codomain$new(params)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Codomain of Function — Codomain","text":"params (list()) Named list initialize codomain. argument analogous paradox::ParamSet's $initialize() params argument.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Codomain of Function — Codomain","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Codomain of Function — Codomain","text":"","code":"Codomain$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Codomain of Function — Codomain","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Codomain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Codomain of Function — Codomain","text":"","code":"# define objective function fun = function(xs) {   c(y = -(xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + 10) }  # set domain domain = ps(   x1 = p_dbl(-10, 10),   x2 = p_dbl(-5, 5) )  # set codomain codomain = ps(   y = p_dbl(tags = \"maximize\"),   time = p_dbl() )  # create Objective object objective = ObjectiveRFun$new(   fun = fun,   domain = domain,   codomain = codomain,   properties = \"deterministic\" )"},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":null,"dir":"Reference","previous_headings":"","what":"Asynchronous Optimization Context — ContextAsync","title":"Asynchronous Optimization Context — ContextAsync","text":"CallbackAsync accesses modifies data optimization via ContextAsync. See section active bindings list modifiable objects. See callback_async() list stages access ContextAsync.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Asynchronous Optimization Context — ContextAsync","text":"Changes $instance $optimizer stages executed workers reflected main process.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Asynchronous Optimization Context — ContextAsync","text":"mlr3misc::Context -> ContextAsync","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Asynchronous Optimization Context — ContextAsync","text":"instance (OptimInstance). optimizer (Optimizer).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Asynchronous Optimization Context — ContextAsync","text":"xs (list()) point evaluated instance$.eval_point(). xs_trafoed (list()) transformed point evaluated instance$.eval_point(). extra (list()) Additional information point evaluated instance$.eval_point(). ys (list()) result evaluation instance$.eval_point(). result_xdt (data.table::data.table) xdt passed instance$assign_result(). result_y (numeric(1)) y passed instance$assign_result(). available single criterion optimization. result_ydt (data.table::data.table) ydt passed instance$assign_result(). available multi criterion optimization. result_extra (data.table::data.table) Additional information result passed instance$assign_result(). result (data.table::data.table) result optimization instance$assign_result().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Asynchronous Optimization Context — ContextAsync","text":"mlr3misc::Context$format() mlr3misc::Context$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Asynchronous Optimization Context — ContextAsync","text":"ContextAsync$new() ContextAsync$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Asynchronous Optimization Context — ContextAsync","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization Context — ContextAsync","text":"","code":"ContextAsync$new(inst, optimizer)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimization Context — ContextAsync","text":"inst (OptimInstance). optimizer (Optimizer).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Asynchronous Optimization Context — ContextAsync","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization Context — ContextAsync","text":"","code":"ContextAsync$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextAsync.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimization Context — ContextAsync","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Optimization Context — ContextBatch","title":"Batch Optimization Context — ContextBatch","text":"CallbackBatch accesses modifies data optimization via ContextBatch. See section active bindings list modifiable objects. See callback_batch() list stages ContextBatch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Batch Optimization Context — ContextBatch","text":"mlr3misc::Context -> ContextBatch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Batch Optimization Context — ContextBatch","text":"instance (OptimInstance). optimizer (Optimizer).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Batch Optimization Context — ContextBatch","text":"xdt (data.table::data.table) points latest batch instance$eval_batch(). Contains values search space .e. transformations yet applied. result_xdt (data.table::data.table) xdt passed instance$assign_result(). result_y (numeric(1)) y passed instance$assign_result(). available single criterion optimization. result_ydt (data.table::data.table) ydt passed instance$assign_result(). available multi criterion optimization. result_extra (data.table::data.table) Additional information result passed instance$assign_result(). result (data.table::data.table) result optimization instance$assign_result().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Batch Optimization Context — ContextBatch","text":"mlr3misc::Context$format() mlr3misc::Context$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Batch Optimization Context — ContextBatch","text":"ContextBatch$new() ContextBatch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Batch Optimization Context — ContextBatch","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Optimization Context — ContextBatch","text":"","code":"ContextBatch$new(inst, optimizer)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Optimization Context — ContextBatch","text":"inst (OptimInstance). optimizer (Optimizer).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Batch Optimization Context — ContextBatch","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Optimization Context — ContextBatch","text":"","code":"ContextBatch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ContextBatch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Optimization Context — ContextBatch","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective Function with Domain and Codomain — Objective","title":"Objective Function with Domain and Codomain — Objective","text":"Objective class describes black-box objective function maps arbitrary domain numerical codomain.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Objective Function with Domain and Codomain — Objective","text":"Objective objects can following properties: \"noisy\", \"deterministic\", \"single-crit\" \"multi-crit\".","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Objective Function with Domain and Codomain — Objective","text":"callbacks (list mlr3misc::Callback) Callbacks applied optimization. context (ContextBatch) Stores context callbacks. id (character(1))). properties (character()). domain (paradox::ParamSet) Specifies domain function, hence input parameters, types ranges. codomain (paradox::ParamSet) Specifies codomain function, hence feasible values. constants (paradox::ParamSet). Changeable constants parameters subject tuning can stored accessed . Set constant values passed $.eval() $.eval_many() named arguments. check_values (logical(1))","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Objective Function with Domain and Codomain — Objective","text":"label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). xdim (integer(1)) Dimension domain. ydim (integer(1)) Dimension codomain. packages (character()) Set required packages.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Objective Function with Domain and Codomain — Objective","text":"Objective$new() Objective$format() Objective$print() Objective$eval() Objective$eval_many() Objective$eval_dt() Objective$help() Objective$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Objective Function with Domain and Codomain — Objective","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$new(   id = \"f\",   properties = character(),   domain,   codomain = ps(y = p_dbl(tags = \"minimize\")),   constants = ps(),   check_values = TRUE,   label = NA_character_,   man = NA_character_ )"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Function with Domain and Codomain — Objective","text":"id (character(1)). properties (character()). domain (paradox::ParamSet) Specifies domain function. paradox::ParamSet describe possible input parameters objective function. includes id, types possible range. codomain (paradox::ParamSet) Specifies codomain function. importantly tags output \"Parameter\" define whether minimized maximized.  default minimize component. constants (paradox::ParamSet) Changeable constants parameters subject tuning can stored accessed . check_values (logical(1)) points evaluation results checked validity? label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Objective Function with Domain and Codomain — Objective","text":"Helper print outputs.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$format(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Function with Domain and Codomain — Objective","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Objective Function with Domain and Codomain — Objective","text":"Print method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$print()"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Objective Function with Domain and Codomain — Objective","text":"character().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-eval-","dir":"Reference","previous_headings":"","what":"Method eval()","title":"Objective Function with Domain and Codomain — Objective","text":"Evaluates single input value objective function. check_values = TRUE, validity point well validity result checked.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$eval(xs)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Function with Domain and Codomain — Objective","text":"xs (list()) list contains single x value, e.g. list(x1 = 1, x2 = 2).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Objective Function with Domain and Codomain — Objective","text":"list() contains result evaluation, e.g. list(y = 1). list can also contain additional named entries stored archive called OptimInstance. extra entries referred extras.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-eval-many-","dir":"Reference","previous_headings":"","what":"Method eval_many()","title":"Objective Function with Domain and Codomain — Objective","text":"Evaluates multiple input values objective function. check_values = TRUE, validity points well validity results checked. bbotk take care parallelization. function make use parallel computing, implemented deriving class overwriting function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$eval_many(xss)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Function with Domain and Codomain — Objective","text":"xss (list()) list lists contains multiple x values, e.g. list(list(x1 = 1, x2 = 2), list(x1 = 3, x2 = 4)).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Objective Function with Domain and Codomain — Objective","text":"data.table::data.table()] contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g.  data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4). may also contain additional columns stored archive called OptimInstance. extra columns referred extras.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-eval-dt-","dir":"Reference","previous_headings":"","what":"Method eval_dt()","title":"Objective Function with Domain and Codomain — Objective","text":"Evaluates multiple input values objective function","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$eval_dt(xdt)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Function with Domain and Codomain — Objective","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Objective Function with Domain and Codomain — Objective","text":"data.table::data.table()] contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g.  data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Objective Function with Domain and Codomain — Objective","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$help()"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Objective Function with Domain and Codomain — Objective","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function with Domain and Codomain — Objective","text":"","code":"Objective$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Objective.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Function with Domain and Codomain — Objective","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective interface with custom R function — ObjectiveRFun","title":"Objective interface with custom R function — ObjectiveRFun","text":"Objective interface user can pass custom R function expects list input. return function unnamed, named ids codomain.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Objective interface with custom R function — ObjectiveRFun","text":"bbotk::Objective -> ObjectiveRFun","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Objective interface with custom R function — ObjectiveRFun","text":"fun (function) Objective function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Objective interface with custom R function — ObjectiveRFun","text":"bbotk::Objective$eval_dt() bbotk::Objective$eval_many() bbotk::Objective$format() bbotk::Objective$help() bbotk::Objective$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Objective interface with custom R function — ObjectiveRFun","text":"ObjectiveRFun$new() ObjectiveRFun$eval() ObjectiveRFun$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Objective interface with custom R function — ObjectiveRFun","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective interface with custom R function — ObjectiveRFun","text":"","code":"ObjectiveRFun$new(   fun,   domain,   codomain = NULL,   id = \"function\",   properties = character(),   constants = ps(),   check_values = TRUE )"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective interface with custom R function — ObjectiveRFun","text":"fun (function) R function encodes objective expects list input single point (e.g. list(x1 = 1, x2 = 2)) returns result either numeric vector list (e.g. list(y = 3)). domain (paradox::ParamSet) Specifies domain function. paradox::ParamSet describe possible input parameters objective function. includes id, types possible range. codomain (paradox::ParamSet) Specifies codomain function. importantly tags output \"Parameter\" define whether minimized maximized.  default minimize component. id (character(1)). properties (character()). constants (paradox::ParamSet) Changeable constants parameters subject tuning can stored accessed . check_values (logical(1)) points evaluation results checked validity?","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"method-eval-","dir":"Reference","previous_headings":"","what":"Method eval()","title":"Objective interface with custom R function — ObjectiveRFun","text":"Evaluates input value(s) objective function. Calls R function supplied user.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective interface with custom R function — ObjectiveRFun","text":"","code":"ObjectiveRFun$eval(xs)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective interface with custom R function — ObjectiveRFun","text":"xs Input values.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Objective interface with custom R function — ObjectiveRFun","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective interface with custom R function — ObjectiveRFun","text":"","code":"ObjectiveRFun$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective interface with custom R function — ObjectiveRFun","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objective interface with custom R function — ObjectiveRFun","text":"","code":"# define objective function fun = function(xs) {   -(xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + 10 }  # set domain domain = ps(   x1 = p_dbl(-10, 10),   x2 = p_dbl(-5, 5) )  # set codomain codomain = ps(y = p_dbl(tags = \"maximize\"))  # create Objective object obfun = ObjectiveRFun$new(   fun = fun,   domain = domain,   codomain = codomain,   properties = \"deterministic\" )"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective interface for basic R functions. — ObjectiveRFunDt","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"Objective interface user can pass R function works data.table().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"bbotk::Objective -> ObjectiveRFunDt","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"fun (function) Objective function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"bbotk::Objective$eval() bbotk::Objective$format() bbotk::Objective$help() bbotk::Objective$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"ObjectiveRFunDt$new() ObjectiveRFunDt$eval_many() ObjectiveRFunDt$eval_dt() ObjectiveRFunDt$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"","code":"ObjectiveRFunDt$new(   fun,   domain,   codomain = NULL,   id = \"function\",   properties = character(),   constants = ps(),   check_values = TRUE )"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"fun (function) R function encodes objective expects data.table() input whereas point represented one row. domain (paradox::ParamSet) Specifies domain function. paradox::ParamSet describe possible input parameters objective function. includes id, types possible range. codomain (paradox::ParamSet) Specifies codomain function. importantly tags output \"Parameter\" define whether minimized maximized.  default minimize component. id (character(1)). properties (character()). constants (paradox::ParamSet) Changeable constants parameters subject tuning can stored accessed . check_values (logical(1)) points evaluation results checked validity?","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"method-eval-many-","dir":"Reference","previous_headings":"","what":"Method eval_many()","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"Evaluates multiple input values received list, converted data.table() objective function. Missing columns xss filled NAs xdt.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"","code":"ObjectiveRFunDt$eval_many(xss)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"xss (list()) list lists contains multiple x values, e.g. list(list(x1 = 1, x2 = 2), list(x1 = 3, x2 = 4)).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"data.table::data.table() contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g. data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"method-eval-dt-","dir":"Reference","previous_headings":"","what":"Method eval_dt()","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"Evaluates multiple input values objective function supplied user.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"","code":"ObjectiveRFunDt$eval_dt(xdt)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"data.table::data.table()] contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g. data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"","code":"ObjectiveRFunDt$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunDt.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective interface for basic R functions. — ObjectiveRFunDt","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective Interface with Custom R Function — ObjectiveRFunMany","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"Objective interface user can pass custom R function expects list configurations input. return function unnamed, named ids codomain.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"bbotk::Objective -> ObjectiveRFunMany","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"fun (function) Objective function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"bbotk::Objective$eval() bbotk::Objective$eval_dt() bbotk::Objective$format() bbotk::Objective$help() bbotk::Objective$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"ObjectiveRFunMany$new() ObjectiveRFunMany$eval_many() ObjectiveRFunMany$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"","code":"ObjectiveRFunMany$new(   fun,   domain,   codomain = NULL,   id = \"function\",   properties = character(),   constants = ps(),   check_values = TRUE )"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"fun (function) R function encodes objective expects list lists contains multiple x values, e.g. list(list(x1 = 1, x2 = 2), list(x1 = 3, x2 = 4)). function must return data.table::data.table() contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g.  data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4). domain (paradox::ParamSet) Specifies domain function. paradox::ParamSet describe possible input parameters objective function. includes id, types possible range. codomain (paradox::ParamSet) Specifies codomain function. importantly tags output \"Parameter\" define whether minimized maximized.  default minimize component. id (character(1)). properties (character()). constants (paradox::ParamSet) Changeable constants parameters subject tuning can stored accessed . check_values (logical(1)) points evaluation results checked validity?","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"method-eval-many-","dir":"Reference","previous_headings":"","what":"Method eval_many()","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"Evaluates input value(s) objective function. Calls R function supplied user.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"","code":"ObjectiveRFunMany$eval_many(xss)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"xss (list()) list lists contains multiple x values, e.g. list(list(x1 = 1, x2 = 2), list(x1 = 3, x2 = 4)).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"data.table::data.table() contains one y-column single-criteria functions multiple y-columns multi-criteria functions, e.g.  data.table(y = 1:2) data.table(y1 = 1:2, y2 = 3:4). may also contain additional columns stored archive called OptimInstance. extra columns referred extras.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"","code":"ObjectiveRFunMany$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/ObjectiveRFunMany.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objective Interface with Custom R Function — ObjectiveRFunMany","text":"","code":"# define objective function fun = function(xss) {   res = lapply(xss, function(xs) -(xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + 10)   data.table(y = as.numeric(res)) }  # set domain domain = ps(   x1 = p_dbl(-10, 10),   x2 = p_dbl(-5, 5) )  # set codomain codomain = ps(y = p_dbl(tags = \"maximize\"))  # create Objective object obfun = ObjectiveRFunMany$new(   fun = fun,   domain = domain,   codomain = codomain,   properties = \"deterministic\" )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization Instance — OptimInstance","title":"Optimization Instance — OptimInstance","text":"OptimInstance specifies optimization problem Optimizer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimization Instance — OptimInstance","text":"OptimInstance abstract base class implements base functionality instance must provide. Optimizer writes final result .result field using $assign_result() method. .result stores data.table::data.table consisting x values search space, (transformed) x values domain space y values codomain space Objective. user can access results active bindings (see ).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Optimization Instance — OptimInstance","text":"objective (Objective) Objective function instance. search_space (paradox::ParamSet) Specification search space Optimizer. terminator Terminator Termination criterion optimization. archive (Archive) Contains performed function calls Objective. progressor (progressor()) Stores progressor function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Optimization Instance — OptimInstance","text":"label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). result (data.table::data.table) Get result result_x_search_space (data.table::data.table) x part result search space. is_terminated (logical(1)).","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization Instance — OptimInstance","text":"OptimInstance$new() OptimInstance$format() OptimInstance$print() OptimInstance$assign_result() OptimInstance$clear() OptimInstance$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization Instance — OptimInstance","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance — OptimInstance","text":"","code":"OptimInstance$new(   objective,   search_space = NULL,   terminator,   check_values = TRUE,   callbacks = NULL,   archive = NULL,   label = NA_character_,   man = NA_character_ )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance — OptimInstance","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. archive (Archive). label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Optimization Instance — OptimInstance","text":"Helper print outputs.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance — OptimInstance","text":"","code":"OptimInstance$format(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance — OptimInstance","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Optimization Instance — OptimInstance","text":"Printer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance — OptimInstance","text":"","code":"OptimInstance$print(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance — OptimInstance","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"method-assign-result-","dir":"Reference","previous_headings":"","what":"Method assign_result()","title":"Optimization Instance — OptimInstance","text":"Optimizer object writes best found point estimated performance value . internal use.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance — OptimInstance","text":"","code":"OptimInstance$assign_result(xdt, y, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance — OptimInstance","text":"xdt (data.table::data.table()) x values data.table::data.table() one row. Contains value search space OptimInstance object. Can contain additional columns extra information. y (numeric(1)) Optimal outcome. ... () ignored.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Optimization Instance — OptimInstance","text":"Reset terminator clear evaluation results archive results.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance — OptimInstance","text":"","code":"OptimInstance$clear()"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization Instance — OptimInstance","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance — OptimInstance","text":"","code":"OptimInstance$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstance.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance — OptimInstance","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"OptimInstanceAsync specifies optimization problem OptimizerAsync. function oi_async() creates OptimInstanceAsyncSingleCrit OptimInstanceAsyncMultiCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"OptimInstanceAsync abstract base class implements base functionality instance must provide.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"bbotk::OptimInstance -> OptimInstanceAsync","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"rush (Rush) Rush controller parallel optimization.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"bbotk::OptimInstance$assign_result() bbotk::OptimInstance$format()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"OptimInstanceAsync$new() OptimInstanceAsync$print() OptimInstanceAsync$clear() OptimInstanceAsync$reconnect() OptimInstanceAsync$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"","code":"OptimInstanceAsync$new(   objective,   search_space = NULL,   terminator,   check_values = FALSE,   callbacks = NULL,   archive = NULL,   rush = NULL,   label = NA_character_,   man = NA_character_ )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. archive (Archive). rush (Rush) rush instance supplied, tuning runs without batches. label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"Printer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"","code":"OptimInstanceAsync$print(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"Reset terminator clear evaluation results archive results.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"","code":"OptimInstanceAsync$clear()"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"method-reconnect-","dir":"Reference","previous_headings":"","what":"Method reconnect()","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"Reconnect Redis. connection breaks rush::Rush saved disk. Call method reconnect loading object.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"","code":"OptimInstanceAsync$reconnect()"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"","code":"OptimInstanceAsync$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsync.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance for Asynchronous Optimization — OptimInstanceAsync","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"OptimInstanceAsyncMultiCrit specifies optimization problem OptimizerAsync. function oi_async() creates OptimInstanceAsyncMultiCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceAsync -> OptimInstanceAsyncMultiCrit","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"result_x_domain (list()) (transformed) x part result domain space objective. result_y (numeric(1)) Optimal outcome.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"bbotk::OptimInstance$format() bbotk::OptimInstanceAsync$clear() bbotk::OptimInstanceAsync$print() bbotk::OptimInstanceAsync$reconnect()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"OptimInstanceAsyncMultiCrit$new() OptimInstanceAsyncMultiCrit$assign_result() OptimInstanceAsyncMultiCrit$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"","code":"OptimInstanceAsyncMultiCrit$new(   objective,   search_space = NULL,   terminator,   check_values = FALSE,   callbacks = NULL,   archive = NULL,   rush = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. archive (Archive). rush (Rush) rush instance supplied, tuning runs without batches.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"method-assign-result-","dir":"Reference","previous_headings":"","what":"Method assign_result()","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"OptimizerAsync writes best found points estimated performance values (probably Pareto set / front). internal use.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"","code":"OptimInstanceAsyncMultiCrit$assign_result(xdt, ydt, extra = NULL, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns. ydt (numeric(1)) Optimal outcomes, e.g. Pareto front. extra (data.table::data.table()) Additional information. ... () ignored.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"","code":"OptimInstanceAsyncMultiCrit$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncMultiCrit.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncMultiCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"OptimInstanceAsyncSingleCrit specifies optimization problem OptimizerAsync. function oi_async() creates OptimInstanceAsyncSingleCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceAsync -> OptimInstanceAsyncSingleCrit","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"result_x_domain (list()) (transformed) x part result domain space objective. result_y (numeric()) Optimal outcome.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"bbotk::OptimInstance$format() bbotk::OptimInstanceAsync$clear() bbotk::OptimInstanceAsync$print() bbotk::OptimInstanceAsync$reconnect()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"OptimInstanceAsyncSingleCrit$new() OptimInstanceAsyncSingleCrit$assign_result() OptimInstanceAsyncSingleCrit$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"","code":"OptimInstanceAsyncSingleCrit$new(   objective,   search_space = NULL,   terminator,   check_values = FALSE,   callbacks = NULL,   archive = NULL,   rush = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. archive (Archive). rush (Rush) rush instance supplied, tuning runs without batches.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"method-assign-result-","dir":"Reference","previous_headings":"","what":"Method assign_result()","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"OptimizerAsync object writes best found point estimated performance value . internal use.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"","code":"OptimInstanceAsyncSingleCrit$assign_result(xdt, y, extra = NULL, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns. y (numeric(1)) Optimal outcome. extra (data.table::data.table()) Additional information. ... () ignored.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"","code":"OptimInstanceAsyncSingleCrit$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceAsyncSingleCrit.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Asynchronous Optimization — OptimInstanceAsyncSingleCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization Instance for Batch Optimization — OptimInstanceBatch","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"OptimInstanceBatch specifies optimization problem OptimizerBatch. function oi() creates OptimInstanceAsyncSingleCrit OptimInstanceAsyncMultiCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"bbotk::OptimInstance -> OptimInstanceBatch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"objective_multiplicator (integer()).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"result (data.table::data.table) Get result result_x_search_space (data.table::data.table) x part result search space. result_x_domain (list()) (transformed) x part result domain space objective. result_y (numeric()) Optimal outcome. is_terminated (logical(1)).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"bbotk::OptimInstance$assign_result() bbotk::OptimInstance$clear() bbotk::OptimInstance$format() bbotk::OptimInstance$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"OptimInstanceBatch$new() OptimInstanceBatch$eval_batch() OptimInstanceBatch$objective_function() OptimInstanceBatch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"","code":"OptimInstanceBatch$new(   objective,   search_space = NULL,   terminator,   check_values = TRUE,   callbacks = NULL,   archive = NULL,   label = NA_character_,   man = NA_character_ )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. archive (Archive). label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"method-eval-batch-","dir":"Reference","previous_headings":"","what":"Method eval_batch()","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"Evaluates input values xdt calling Objective. Applies possible transformations input values writes results Archive. batch-evaluation, Terminator checked, positive, exception class terminated_error raised. function internally called Optimizer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"","code":"OptimInstanceBatch$eval_batch(xdt)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"xdt (data.table::data.table()) x values data.table() one point per row. Contains value search space OptimInstance object. Can contain additional columns extra information.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"method-objective-function-","dir":"Reference","previous_headings":"","what":"Method objective_function()","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"Evaluates (untransformed) points numeric values. Returns numeric scalar single-crit numeric vector multi-crit. return value(s) negated measure maximized. Internally, $eval_batch() called single row. function serves objective function optimizers numeric spaces - always minimized.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"","code":"OptimInstanceBatch$objective_function(x)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"x (numeric()) Untransformed points.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"Objective value numeric(1), negated maximization problems.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"","code":"OptimInstanceBatch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatch.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization Instance for Batch Optimization — OptimInstanceBatch","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"OptimInstanceBatchMultiCrit specifies optimization problem OptimizerBatch. function oi() creates OptimInstanceBatchMultiCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceBatch -> OptimInstanceBatchMultiCrit","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"result_x_domain (list()) (transformed) x part result domain space objective. result_y (numeric(1)) Optimal outcome.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"bbotk::OptimInstance$clear() bbotk::OptimInstance$format() bbotk::OptimInstance$print() bbotk::OptimInstanceBatch$eval_batch() bbotk::OptimInstanceBatch$objective_function()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"OptimInstanceBatchMultiCrit$new() OptimInstanceBatchMultiCrit$assign_result() OptimInstanceBatchMultiCrit$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"","code":"OptimInstanceBatchMultiCrit$new(   objective,   search_space = NULL,   terminator,   check_values = TRUE,   callbacks = NULL,   archive = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"method-assign-result-","dir":"Reference","previous_headings":"","what":"Method assign_result()","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"Optimizer object writes best found points estimated performance values (probably Pareto set / front). internal use.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"","code":"OptimInstanceBatchMultiCrit$assign_result(xdt, ydt, extra = NULL, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns. ydt (data.table::data.table()) Optimal outcome. extra (data.table::data.table()) Additional information. ... () ignored.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"","code":"OptimInstanceBatchMultiCrit$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchMultiCrit.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceBatchMultiCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"OptimInstanceBatchSingleCrit specifies optimization problem OptimizerBatch. function oi() creates OptimInstanceBatchSingleCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceBatch -> OptimInstanceBatchSingleCrit","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"bbotk::OptimInstance$clear() bbotk::OptimInstance$format() bbotk::OptimInstance$print() bbotk::OptimInstanceBatch$eval_batch() bbotk::OptimInstanceBatch$objective_function()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"OptimInstanceBatchSingleCrit$new() OptimInstanceBatchSingleCrit$assign_result() OptimInstanceBatchSingleCrit$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"","code":"OptimInstanceBatchSingleCrit$new(   objective,   search_space = NULL,   terminator,   check_values = TRUE,   callbacks = NULL,   archive = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"method-assign-result-","dir":"Reference","previous_headings":"","what":"Method assign_result()","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"Optimizer object writes best found point estimated performance value . internal use.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"","code":"OptimInstanceBatchSingleCrit$assign_result(xdt, y, extra = NULL, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns. y (numeric(1)) Optimal outcome. extra (data.table::data.table()) Additional information. ... () ignored.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"","code":"OptimInstanceBatchSingleCrit$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceBatchSingleCrit.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceBatchSingleCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"OptimInstanceMultiCrit deprecated class now wrapper around OptimInstanceBatchMultiCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceBatch -> bbotk::OptimInstanceBatchMultiCrit -> OptimInstanceMultiCrit","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"bbotk::OptimInstance$clear() bbotk::OptimInstance$format() bbotk::OptimInstance$print() bbotk::OptimInstanceBatch$eval_batch() bbotk::OptimInstanceBatch$objective_function() bbotk::OptimInstanceBatchMultiCrit$assign_result()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"OptimInstanceMultiCrit$new() OptimInstanceMultiCrit$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"","code":"OptimInstanceMultiCrit$new(   objective,   search_space = NULL,   terminator,   keep_evals = \"all\",   check_values = TRUE,   callbacks = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. keep_evals (character(1)) Keep best evaluations archive? check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"","code":"OptimInstanceMultiCrit$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceMultiCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi Criteria Optimization Instance for Batch Optimization — OptimInstanceMultiCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"OptimInstanceSingleCrit deprecated class now wrapper around OptimInstanceBatchSingleCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"bbotk::OptimInstance -> bbotk::OptimInstanceBatch -> bbotk::OptimInstanceBatchSingleCrit -> OptimInstanceSingleCrit","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"bbotk::OptimInstance$clear() bbotk::OptimInstance$format() bbotk::OptimInstance$print() bbotk::OptimInstanceBatch$eval_batch() bbotk::OptimInstanceBatch$objective_function() bbotk::OptimInstanceBatchSingleCrit$assign_result()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"OptimInstanceSingleCrit$new() OptimInstanceSingleCrit$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"","code":"OptimInstanceSingleCrit$new(   objective,   search_space = NULL,   terminator,   keep_evals = \"all\",   check_values = TRUE,   callbacks = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. keep_evals (character(1)) Keep best evaluations archive? check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"","code":"OptimInstanceSingleCrit$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimInstanceSingleCrit.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Criterion Optimization Instance for Batch Optimization — OptimInstanceSingleCrit","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimizer — Optimizer","title":"Optimizer — Optimizer","text":"Optimizer implements optimization algorithm.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimizer — Optimizer","text":"Optimizer abstract base class implements base functionality optimizer must provide. Optimizer object describes optimization strategy. Optimizer object must write result $assign_result() method OptimInstance end order store best point estimated performance vector.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimizer — Optimizer","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Optimizer — Optimizer","text":"id (character(1)) Identifier object. Used tables, plot text output.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Optimizer — Optimizer","text":"param_set paradox::ParamSet Set control parameters. label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). param_classes (character()) Supported parameter classes optimizer can optimize, given paradox::ParamSet $class field. properties (character()) Set properties optimizer. Must subset bbotk_reflections$optimizer_properties. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace().","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimizer — Optimizer","text":"Optimizer$new() Optimizer$format() Optimizer$print() Optimizer$help() Optimizer$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimizer — Optimizer","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimizer — Optimizer","text":"","code":"Optimizer$new(   id = \"optimizer\",   param_set,   param_classes,   properties,   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimizer — Optimizer","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set control parameters. param_classes (character()) Supported parameter classes optimizer can optimize, given paradox::ParamSet $class field. properties (character()) Set properties optimizer. Must subset bbotk_reflections$optimizer_properties. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Optimizer — Optimizer","text":"Helper print outputs.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimizer — Optimizer","text":"","code":"Optimizer$format(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimizer — Optimizer","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Optimizer — Optimizer","text":"Print method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimizer — Optimizer","text":"","code":"Optimizer$print()"},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Optimizer — Optimizer","text":"(character()).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"method-help-","dir":"Reference","previous_headings":"","what":"Method help()","title":"Optimizer — Optimizer","text":"Opens corresponding help page referenced field $man.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimizer — Optimizer","text":"","code":"Optimizer$help()"},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimizer — Optimizer","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimizer — Optimizer","text":"","code":"Optimizer$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Optimizer.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimizer — Optimizer","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":null,"dir":"Reference","previous_headings":"","what":"Asynchronous Optimizer — OptimizerAsync","title":"Asynchronous Optimizer — OptimizerAsync","text":"OptimizerAsync implements asynchronous optimization algorithm. optimization performed asynchronously set workers.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Asynchronous Optimizer — OptimizerAsync","text":"OptimizerAsync abstract base class asynchronous optimizers. provides basic structure asynchronous optimization algorithms. public method $optimize() main entry point optimization runs main process. method starts optimization process starting workers pushing necessary objects workers. Optionally, set points can created, e.g. initial design, pushed workers. private method $.optimize() actual optimization algorithm runs workers. Usually, method proposes new points, evaluates , updates archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Asynchronous Optimizer — OptimizerAsync","text":"bbotk::Optimizer -> OptimizerAsync","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Asynchronous Optimizer — OptimizerAsync","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$initialize() bbotk::Optimizer$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Asynchronous Optimizer — OptimizerAsync","text":"OptimizerAsync$optimize() OptimizerAsync$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"Asynchronous Optimizer — OptimizerAsync","text":"Performs optimization OptimInstanceAsyncSingleCrit OptimInstanceAsyncMultiCrit termination. single evaluations written ArchiveAsync. result written instance object.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimizer — OptimizerAsync","text":"","code":"OptimizerAsync$optimize(inst)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimizer — OptimizerAsync","text":"inst (OptimInstanceAsyncSingleCrit | OptimInstanceAsyncMultiCrit).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Asynchronous Optimizer — OptimizerAsync","text":"data.table::data.table()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Asynchronous Optimizer — OptimizerAsync","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimizer — OptimizerAsync","text":"","code":"OptimizerAsync$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerAsync.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimizer — OptimizerAsync","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Optimizer — OptimizerBatch","title":"Batch Optimizer — OptimizerBatch","text":"Abstract OptimizerBatch class implements base functionality OptimizerBatch subclass must provide. OptimizerBatch object describes optimization strategy. OptimizerBatch object must write result $assign_result() method OptimInstance end order store best point estimated performance vector.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Batch Optimizer — OptimizerBatch","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Batch Optimizer — OptimizerBatch","text":"bbotk::Optimizer -> OptimizerBatch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Batch Optimizer — OptimizerBatch","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$initialize() bbotk::Optimizer$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Batch Optimizer — OptimizerBatch","text":"OptimizerBatch$optimize() OptimizerBatch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"Batch Optimizer — OptimizerBatch","text":"Performs optimization writes optimization result OptimInstanceBatch. optimization result returned complete optimization path stored ArchiveBatch OptimInstanceBatch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Optimizer — OptimizerBatch","text":"","code":"OptimizerBatch$optimize(inst)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Optimizer — OptimizerBatch","text":"inst (OptimInstanceBatch).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Batch Optimizer — OptimizerBatch","text":"data.table::data.table.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Batch Optimizer — OptimizerBatch","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Optimizer — OptimizerBatch","text":"","code":"OptimizerBatch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/OptimizerBatch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Optimizer — OptimizerBatch","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":null,"dir":"Reference","previous_headings":"","what":"Progressor — Progressor","title":"Progressor — Progressor","text":"Wraps progressr::progressor() function stores current progress.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Progressor — Progressor","text":"progressor (progressr::progressor()). max_steps (integer(1)). current_steps (integer(1)). unit (character(1)).","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Progressor — Progressor","text":"Progressor$new() Progressor$update() Progressor$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Progressor — Progressor","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressor — Progressor","text":"","code":"Progressor$new(progressor, unit)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressor — Progressor","text":"progressor (progressr::progressor()) Progressor function. unit (character(1)) Unit progress.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"Progressor — Progressor","text":"Updates progressr::progressor() current steps.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressor — Progressor","text":"","code":"Progressor$update(terminator, archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressor — Progressor","text":"terminator (Terminator). archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Progressor — Progressor","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressor — Progressor","text":"","code":"Progressor$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Progressor.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressor — Progressor","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Terminator Class — Terminator","title":"Abstract Terminator Class — Terminator","text":"Abstract Terminator class implements base functionality terminator must provide. terminator object determines stop optimization. Termination optimization works follows: Evaluations instance performed batches. batch evaluation, Terminator checked, positive, stop. optimization algorithm might decide produce points, even might decide smaller batch last evaluation. Therefore following note seems order: definitely possible execute fine-grained control termination, many optimization algorithms can specify exactly stop, might happen even many evaluations performed, especially multiple points evaluated single batch (c.f. batch size parameter many optimization algorithms). advised check size returned archive, particular benchmarking multiple optimization algorithms.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"technical-details","dir":"Reference","previous_headings":"","what":"Technical details","title":"Abstract Terminator Class — Terminator","text":"Terminator subclasses can overwrite .status() support progress bars via package progressr. method must return maximum number steps (max_steps) currently achieved number steps (current_steps) named integer vector.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Terminator Class — Terminator","text":"id (character(1)) Identifier object. Used tables, plot text output.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract Terminator Class — Terminator","text":"param_set paradox::ParamSet Set control parameters. label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). properties (character()) Set properties terminator. Must subset bbotk_reflections$terminator_properties. unit (character()) Unit steps.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Terminator Class — Terminator","text":"Terminator$new() Terminator$format() Terminator$print() Terminator$status() Terminator$remaining_time() Terminator$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Terminator Class — Terminator","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Terminator Class — Terminator","text":"","code":"Terminator$new(   id,   param_set = ps(),   properties = character(),   unit = \"percent\",   label = NA_character_,   man = NA_character_ )"},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Terminator Class — Terminator","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set control parameters. properties (character()) Set properties terminator. Must subset bbotk_reflections$terminator_properties. unit (character()) Unit steps. label (character(1)) Label object. Can used tables, plot text output instead ID. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Abstract Terminator Class — Terminator","text":"Helper print outputs.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Terminator Class — Terminator","text":"","code":"Terminator$format(with_params = FALSE, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Terminator Class — Terminator","text":"with_params (logical(1)) Add parameter values format string. ... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Abstract Terminator Class — Terminator","text":"Printer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Terminator Class — Terminator","text":"","code":"Terminator$print(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Terminator Class — Terminator","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"method-status-","dir":"Reference","previous_headings":"","what":"Method status()","title":"Abstract Terminator Class — Terminator","text":"Returns many progression steps made (current_steps) amount steps needed termination (max_steps).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Terminator Class — Terminator","text":"","code":"Terminator$status(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Terminator Class — Terminator","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Terminator Class — Terminator","text":"named integer(2).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"method-remaining-time-","dir":"Reference","previous_headings":"","what":"Method remaining_time()","title":"Abstract Terminator Class — Terminator","text":"Returns remaining runtime seconds. terminator time-based, reaming runtime Inf.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Terminator Class — Terminator","text":"","code":"Terminator$remaining_time(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Terminator Class — Terminator","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Terminator Class — Terminator","text":"integer(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Terminator Class — Terminator","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Terminator Class — Terminator","text":"","code":"Terminator$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/Terminator.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Terminator Class — Terminator","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/as_terminator.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Terminator — as_terminator","title":"Convert to a Terminator — as_terminator","text":"Convert object Terminator list Terminator.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/as_terminator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Terminator — as_terminator","text":"","code":"as_terminator(x, ...)  # S3 method for class 'Terminator' as_terminator(x, clone = FALSE, ...)  as_terminators(x, ...)  # Default S3 method as_terminators(x, ...)  # S3 method for class 'list' as_terminators(x, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/as_terminator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Terminator — as_terminator","text":"x () Object convert. ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/assign_result_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Assign Result Function — assign_result_default","title":"Default Assign Result Function — assign_result_default","text":"Used internally Optimizer. default way determine result simply obtaining best performing result archive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/assign_result_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Assign Result Function — assign_result_default","text":"","code":"assign_result_default(inst)"},{"path":"https://bbotk.mlr-org.com/dev/reference/assign_result_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Assign Result Function — assign_result_default","text":"inst OptimInstance","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bb_optimize.html","id":null,"dir":"Reference","previous_headings":"","what":"Black-Box Optimization — bb_optimize","title":"Black-Box Optimization — bb_optimize","text":"function optimizes function Objective given method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bb_optimize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Black-Box Optimization — bb_optimize","text":"","code":"bb_optimize(   x,   method = \"random_search\",   max_evals = 1000,   max_time = NULL,   ... )  # S3 method for class '`function`' bb_optimize(   x,   method = \"random_search\",   max_evals = 1000,   max_time = NULL,   lower = NULL,   upper = NULL,   maximize = FALSE,   ... )  # S3 method for class 'Objective' bb_optimize(   x,   method = \"random_search\",   max_evals = 1000,   max_time = NULL,   search_space = NULL,   ... )"},{"path":"https://bbotk.mlr-org.com/dev/reference/bb_optimize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Black-Box Optimization — bb_optimize","text":"x (function | Objective). method (character(1) | Optimizer) Key retrieve optimizer mlr_optimizers dictionary Optimizer. max_evals (integer(1)) Number allowed evaluations. max_time (integer(1)) Maximum allowed time seconds. ... (named list()) Named arguments passed objective function. Ignored Objective optimized. lower (numeric()) Lower bounds parameters. named, names used create domain. upper (numeric()) Upper bounds parameters. maximize (logical()) Logical vector used create codomain e.g. c(TRUE, FALSE) -> ps(y1 = p_dbl(tags = \"maximize\"), y2 = pd_dbl(tags = \"minimize\")). named, names used create codomain. search_space (paradox::ParamSet).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bb_optimize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Black-Box Optimization — bb_optimize","text":"list \"par\" - Best found parameters \"value\" - Optimal outcome \"instance\" - OptimInstanceBatchSingleCrit | OptimInstanceBatchMultiCrit","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bb_optimize.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Black-Box Optimization — bb_optimize","text":"max_evals max_time NULL, TerminatorNone used. useful Optimizer can terminate . given, TerminatorCombo created optimization stops time evaluation budget exhausted.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bb_optimize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Black-Box Optimization — bb_optimize","text":"","code":"# function and bounds fun = function(xs) {   -(xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + 10 }  bb_optimize(fun, lower = c(-10, -5), upper = c(10, 5), max_evals = 10) #> $par #>           x1      x2 #>        <num>   <num> #> 1: -8.384997 3.34333 #>  #> $value #>       y1  #> -138.086  #>  #> $instance #>  #> ── <OptimInstanceBatchSingleCrit> ────────────────────────────────────────────── #> • State: Optimized #> • Objective: <ObjectiveRFun> #> • Search Space: #>        id    class lower upper nlevels #>    <char>   <char> <num> <num>   <num> #> 1:     x1 ParamDbl   -10    10     Inf #> 2:     x2 ParamDbl    -5     5     Inf #> • Terminator: <TerminatorEvals> (n_evals=10, k=0) #> • Result: #>           x1      x2       y1 #>        <num>   <num>    <num> #> 1: -8.384997 3.34333 -138.086 #> • Archive: #>        y1     x1    x2 x_domain_x1 x_domain_x2 #>     <num>  <num> <num>       <num>       <num> #>  1:  -138  -8.38   3.3       -8.38         3.3 #>  2:    10   2.02  -3.4        2.02        -3.4 #>  3:  -138  -9.85  -0.3       -9.85        -0.3 #>  4:     5  -0.04  -2.1       -0.04        -2.1 #>  5:   -30   4.66   2.7        4.66         2.7 #>  6:   -20   7.49  -3.3        7.49        -3.3 #>  7:  -119  -9.32  -1.8       -9.32        -1.8 #>  8:    -6  -1.95  -3.0       -1.95        -3.0 #>  9:    -7  -1.93  -4.4       -1.93        -4.4 #> 10:   -68  -2.23   4.8       -2.23         4.8 #>   # function and constant fun = function(xs, c) {   -(xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + c }  bb_optimize(fun, lower = c(-10, -5), upper = c(10, 5), max_evals = 10, c = 1) #> $par #>           x1        x2 #>        <num>     <num> #> 1: -8.971074 0.3021246 #>  #> $value #>        y1  #> -130.2685  #>  #> $instance #>  #> ── <OptimInstanceBatchSingleCrit> ────────────────────────────────────────────── #> • State: Optimized #> • Objective: <ObjectiveRFun> #> • Search Space: #>        id    class lower upper nlevels #>    <char>   <char> <num> <num>   <num> #> 1:     x1 ParamDbl   -10    10     Inf #> 2:     x2 ParamDbl    -5     5     Inf #> • Terminator: <TerminatorEvals> (n_evals=10, k=0) #> • Result: #>           x1        x2        y1 #>        <num>     <num>     <num> #> 1: -8.971074 0.3021246 -130.2685 #> • Archive: #>        y1    x1    x2 x_domain_x1 x_domain_x2 #>     <num> <num> <num>       <num>       <num> #>  1:    -6   4.7 -3.04         4.7       -3.04 #>  2:   -86   9.6  2.42         9.6        2.42 #>  3:  -130  -9.0  0.30        -9.0        0.30 #>  4:   -27   3.9  1.89         3.9        1.89 #>  5:  -128  -9.4 -2.74        -9.4       -2.74 #>  6:   -54  -4.0  1.36        -4.0        1.36 #>  7:   -10  -0.4 -0.68        -0.4       -0.68 #>  8:   -60   4.1  4.49         4.1        4.49 #>  9:   -69  -6.4 -2.83        -6.4       -2.83 #> 10:   -11   3.6 -0.01         3.6       -0.01 #>   # objective fun = function(xs) {   c(z = -(xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + 10) }  # define domain and codomain using a `ParamSet` from paradox domain = ps(x1 = p_dbl(-10, 10), x2 = p_dbl(-5, 5)) codomain = ps(z = p_dbl(tags = \"minimize\")) objective = ObjectiveRFun$new(fun, domain, codomain)  bb_optimize(objective, method = \"random_search\", max_evals = 10) #> $par #>           x1       x2 #>        <num>    <num> #> 1: -8.079517 2.656002 #>  #> $value #>        z  #> -123.587  #>  #> $instance #>  #> ── <OptimInstanceBatchSingleCrit> ────────────────────────────────────────────── #> • State: Optimized #> • Objective: <ObjectiveRFun> #> • Search Space: #>        id    class lower upper nlevels #>    <char>   <char> <num> <num>   <num> #> 1:     x1 ParamDbl   -10    10     Inf #> 2:     x2 ParamDbl    -5     5     Inf #> • Terminator: <TerminatorEvals> (n_evals=10, k=0) #> • Result: #>           x1       x2        z #>        <num>    <num>    <num> #> 1: -8.079517 2.656002 -123.587 #> • Archive: #>         z    x1    x2 x_domain_x1 x_domain_x2 #>     <num> <num> <num>       <num>       <num> #>  1:  -124  -8.1   2.7        -8.1         2.7 #>  2:   -64   5.4   4.9         5.4         4.9 #>  3:   -48   9.4  -1.1         9.4        -1.1 #>  4:     1  -0.8  -1.8        -0.8        -1.8 #>  5:   -73  -6.5   0.3        -6.5         0.3 #>  6:   -28  -0.1   2.8        -0.1         2.8 #>  7:   -79  -5.9   2.1        -5.9         2.1 #>  8:  -107  -8.7  -1.5        -8.7        -1.5 #>  9:   -11   6.5  -2.3         6.5        -2.3 #> 10:     8   1.4  -1.6         1.4        -1.6 #>"},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bbotk: Black-Box Optimization Toolkit — bbotk-package","title":"bbotk: Black-Box Optimization Toolkit — bbotk-package","text":"Features highly configurable search spaces via 'paradox' package optimizes every user-defined objective function. package includes several optimization algorithms e.g. Random Search, Iterated Racing, Bayesian Optimization ('mlr3mbo') Hyperband ('mlr3hyperband'). bbotk base package 'mlr3tuning', 'mlr3fselect' 'miesmuschel'.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bbotk: Black-Box Optimization Toolkit — bbotk-package","text":"Maintainer: Marc Becker marcbecker@posteo.de (ORCID) Authors: Jakob Richter jakob1richter@gmail.com (ORCID) Michel Lang michellang@gmail.com (ORCID) Bernd Bischl bernd_bischl@gmx.net (ORCID) Martin Binder martin.binder@mail.com contributors: Olaf Mersmann olafm@statistik.tu-dortmund.de [contributor]","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk.async_freeze_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"Freeze Archive Callback — bbotk.async_freeze_archive","title":"Freeze Archive Callback — bbotk.async_freeze_archive","text":"CallbackAsync freezes ArchiveAsync ArchiveAsyncFrozen optimization finished.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk.async_freeze_archive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Freeze Archive Callback — bbotk.async_freeze_archive","text":"","code":"clbk(\"bbotk.async_freeze_archive\") #> <CallbackAsync:bbotk.async_freeze_archive>: Archive Freeze Callback #> * Active Stages: on_optimization_end"},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk.backup.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup Archive Callback — bbotk.backup","title":"Backup Archive Callback — bbotk.backup","text":"CallbackBatch writes Archive batch disk.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk.backup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backup Archive Callback — bbotk.backup","text":"","code":"clbk(\"bbotk.backup\", path = \"backup.rds\") #> <CallbackBatch:bbotk.backup>: Backup Archive Callback #> * Active Stages: on_optimizer_after_eval, on_optimization_begin"},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_assertions.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertion for bbotk objects — bbotk_assertions","title":"Assertion for bbotk objects — bbotk_assertions","text":"assertion functions ensure right class attribute, optionally additional properties. Additionally, following compound assertions implemented: assert_terminable(terminator, instance) (Terminator, OptimInstance) -> NULL Checks terminator applicable optimization. assert_instance_properties(optimizer, instance) (Optimizer, OptimInstance) -> NULL Checks instance applicable optimizer. assertion fails, exception raised. Otherwise, input object returned invisibly.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_assertions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertion for bbotk objects — bbotk_assertions","text":"","code":"assert_terminator(terminator, instance = NULL, null_ok = FALSE)  assert_terminators(terminators)  assert_terminable(terminator, instance)  assert_set(x, empty = TRUE, .var.name = vname(x))  assert_optimizer(optimizer, null_ok = FALSE)  assert_optimizer_async(optimizer, null_ok = FALSE)  assert_optimizer_batch(optimizer, null_ok = FALSE)  assert_instance(inst, null_ok = FALSE)  assert_instance_batch(inst, null_ok = FALSE)  assert_instance_async(inst, null_ok = FALSE)  assert_instance_properties(optimizer, inst)  assert_archive(archive, null_ok = FALSE)  assert_archive_async(archive, null_ok = FALSE)  assert_archive_batch(archive, null_ok = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_assertions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertion for bbotk objects — bbotk_assertions","text":"terminator (Terminator). instance (OptimInstance). null_ok (logical(1)) NULL valid value? terminators (list Terminator). x () empty (logical(1)) .var.name (character(1)) optimizer (Optimizer). inst (OptimInstanceAsync) archive (ArchiveBatch).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_reflections.html","id":null,"dir":"Reference","previous_headings":"","what":"Reflections for bbotk — bbotk_reflections","title":"Reflections for bbotk — bbotk_reflections","text":"Environment stores various information allow objects examine introspect structure properties (c.f. Reflections). environment modified third-party packages. following objects set bbotk: optimizer_properties (character()) Properties optimizer, e.g. \"dependencies\". objective_properties (character()) Properties objective, e.g. \"noisy\".","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_reflections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reflections for bbotk — bbotk_reflections","text":"","code":"bbotk_reflections"},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_reflections.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reflections for bbotk — bbotk_reflections","text":"environment.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_reflections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reflections for bbotk — bbotk_reflections","text":"","code":"ls.str(bbotk_reflections) #> objective_properties :  chr [1:4] \"noisy\" \"single-crit\" \"multi-crit\" \"deterministic\" #> optimizer_properties :  chr [1:4] \"dependencies\" \"single-crit\" \"multi-crit\" \"async\" #> terminator_properties :  chr [1:2] \"single-crit\" \"multi-crit\""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_worker_loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Worker loop for Rush — bbotk_worker_loop","title":"Worker loop for Rush — bbotk_worker_loop","text":"Loop run workers. Pops task queue evaluates objective function. Pushes results back data base.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_worker_loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Worker loop for Rush — bbotk_worker_loop","text":"","code":"bbotk_worker_loop(rush, optimizer, instance)"},{"path":"https://bbotk.mlr-org.com/dev/reference/bbotk_worker_loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Worker loop for Rush — bbotk_worker_loop","text":"rush (Rush) rush instance supplied, tuning runs without batches. optimizer OptimizerAsync. instance OptimInstanceAsync.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/branin.html","id":null,"dir":"Reference","previous_headings":"","what":"Branin Function — branin","title":"Branin Function — branin","text":"Classic 2-D Branin function noise branin(x1, x2, noise) Branin function fidelity parameter branin_wu(x1, x2, fidelity).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/branin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Branin Function — branin","text":"","code":"branin(x1, x2, noise = 0)  branin_wu(x1, x2, fidelity)"},{"path":"https://bbotk.mlr-org.com/dev/reference/branin.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Branin Function — branin","text":"Wu J, Toscano-Palmerin S, Frazier PI, Wilson AG (2019). “Practical Multi-fidelity Bayesian Optimization Hyperparameter Tuning.” 1903.04703.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/branin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Branin Function — branin","text":"x1 (numeric()). x2 (numeric()). noise (numeric()). fidelity (numeric()).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/branin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Branin Function — branin","text":"numeric()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/branin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Branin Function — branin","text":"","code":"branin(x1 = 12, x2 = 2, noise = 0.05) #> [1] 30.38063 branin_wu(x1 = 12, x2 = 2, fidelity = 1) #> [1] 30.38063"},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_async.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Asynchronous Optimization Callback — callback_async","title":"Create Asynchronous Optimization Callback — callback_async","text":"Function create CallbackAsync. Optimization callbacks can called different stages optimization process. stages prefixed on_*.   See also section parameters information stages. optimization callback works ContextAsync.","code":"Start Optimization      - on_optimization_begin     Start Worker          - on_worker_begin            Start Optimization on Worker              - on_optimizer_before_eval              - on_optimizer_after_eval            End Optimization on Worker          - on_worker_end     End Worker      - on_result_begin      - on_result_end      - on_optimization_end End Optimization"},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_async.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Asynchronous Optimization Callback — callback_async","text":"","code":"callback_async(   id,   label = NA_character_,   man = NA_character_,   on_optimization_begin = NULL,   on_worker_begin = NULL,   on_optimizer_before_eval = NULL,   on_optimizer_after_eval = NULL,   on_worker_end = NULL,   on_result_begin = NULL,   on_result_end = NULL,   on_result = NULL,   on_optimization_end = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_async.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Asynchronous Optimization Callback — callback_async","text":"id (character(1)) Identifier new instance. label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). on_optimization_begin (function()) Stage called beginning optimization main process. Called Optimizer$optimize(). functions must two arguments named callback context. on_worker_begin (function()) Stage called beginning optimization worker. Called worker loop. functions must two arguments named callback context. on_optimizer_before_eval (function()) Stage called optimizer proposes points. Called OptimInstance$.eval_point(). functions must two arguments named callback context. argument instance$.eval_point(xs) xs_trafoed extra available context. xs xs_trafoed instance$.eval_queue() available context. on_optimizer_after_eval (function()) Stage called points evaluated. Called OptimInstance$.eval_point(). functions must two arguments named callback context. outcome y available context. on_worker_end (function()) Stage called end optimization worker. Called worker loop. functions must two arguments named callback context. on_result_begin (function()) Stage called result written. Called OptimInstance$assign_result(). functions must two arguments named callback context. arguments $.assign_result(xdt, y, extra) available context. on_result_end (function()) Stage called result written. Called OptimInstance$assign_result(). functions must two arguments named callback context. final result instance$result available context. on_result (function()) Deprecated. Use on_result_end instead. Stage called result written. Called OptimInstance$assign_result(). functions must two arguments named callback context. on_optimization_end (function()) Stage called end optimization main process. Called Optimizer$optimize(). functions must two arguments named callback context.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_async.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Asynchronous Optimization Callback — callback_async","text":"callback can write data state ($state), e.g. settings affect callback . ContextAsync allows modify instance, archive, optimizer final result.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Batch Optimization Callback — callback_batch","title":"Create Batch Optimization Callback — callback_batch","text":"Function create CallbackBatch. Optimization callbacks can called different stages optimization process. stages prefixed on_*.   See also section parameters information stages. optimization callback works ContextBatch.","code":"Start Optimization      - on_optimization_begin     Start Optimizer Batch          - on_optimizer_before_eval          - on_optimizer_after_eval     End Optimizer Batch      - on_result_begin      - on_result_end      - on_optimization_end End Optimization"},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Batch Optimization Callback — callback_batch","text":"","code":"callback_batch(   id,   label = NA_character_,   man = NA_character_,   on_optimization_begin = NULL,   on_optimizer_before_eval = NULL,   on_optimizer_after_eval = NULL,   on_result_begin = NULL,   on_result_end = NULL,   on_result = NULL,   on_optimization_end = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Batch Optimization Callback — callback_batch","text":"id (character(1)) Identifier new instance. label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). on_optimization_begin (function()) Stage called beginning optimization. Called Optimizer$optimize(). functions must two arguments named callback context. on_optimizer_before_eval (function()) Stage called optimizer proposes points. Called OptimInstance$eval_batch(). functions must two arguments named callback context. argument $eval_batch(xdt) available context. on_optimizer_after_eval (function()) Stage called points evaluated. Called OptimInstance$eval_batch(). functions must two arguments named callback context. new points outcomes instance$archive available context. on_result_begin (function()) Stage called result written instance. Called OptimInstance$assign_result(). functions must two arguments named callback context. arguments $assign_result(xdt, y, extra) available context. on_result_end (function()) Stage called result written instance. Called OptimInstance$assign_result(). functions must two arguments named callback context. final result instance$result available context. on_result (function()) Deprecated. Use on_result_end instead. Stage called result written. Called OptimInstance$assign_result(). functions must two arguments named callback context. on_optimization_end (function()) Stage called end optimization. Called Optimizer$optimize(). functions must two arguments named callback context.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Batch Optimization Callback — callback_batch","text":"callback can write data state ($state), e.g. settings affect callback . ContextBatch allows modify instance, archive, optimizer final result.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/callback_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Batch Optimization Callback — callback_batch","text":"","code":"# write archive to disk callback_batch(\"bbotk.backup\",   on_optimization_end = function(callback, context) {     saveRDS(context$instance$archive, \"archive.rds\")   } ) #> <CallbackBatch:bbotk.backup> #> * Active Stages: on_optimization_end"},{"path":"https://bbotk.mlr-org.com/dev/reference/is_dominated.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate which points are dominated — is_dominated","title":"Calculate which points are dominated — is_dominated","text":"Returns points set dominated another point set.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/is_dominated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate which points are dominated — is_dominated","text":"","code":"is_dominated(ymat)"},{"path":"https://bbotk.mlr-org.com/dev/reference/is_dominated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate which points are dominated — is_dominated","text":"ymat (matrix())  numeric matrix. column (!) contains one point.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Optimizer — mlr_optimizers","title":"Dictionary of Optimizer — mlr_optimizers","text":"simple mlr3misc::Dictionary storing objects class Optimizer. optimizer associated help page, see mlr_optimizer_[id]. dictionary can get populated additional optimizer add-packages. convenient way retrieve construct optimizer, see opt()/opts().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Optimizer — mlr_optimizers","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Optimizer — mlr_optimizers","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of Optimizer — mlr_optimizers","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() fields \"key\", \"label\", \"param_classes\", \"properties\" \"packages\" columns. objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Optimizer — mlr_optimizers","text":"","code":"as.data.table(mlr_optimizers) #> Key: <key> #>                     key                                           label #>                  <char>                                          <char> #>  1: async_design_points                      Asynchronous Design Points #>  2:   async_grid_search                        Asynchronous Grid Search #>  3: async_random_search                      Asynchronous Random Search #>  4:               chain          Chain Multiple Optimizers Sequentially #>  5:               cmaes Covariance Matrix Adaptation Evolution Strategy #>  6:       design_points                                   Design Points #>  7:        focus_search                                    Focus Search #>  8:               gensa                 Generalized Simulated Annealing #>  9:         grid_search                                     Grid Search #> 10:               irace                                 Iterated Racing #> 11:        local_search                                    Local Search #> 12:              nloptr                         Non-linear Optimization #> 13:       random_search                                   Random Search #>                                    param_classes #>                                           <list> #>  1: ParamLgl,ParamInt,ParamDbl,ParamFct,ParamUty #>  2:          ParamLgl,ParamInt,ParamDbl,ParamFct #>  3:          ParamLgl,ParamInt,ParamDbl,ParamFct #>  4:          ParamLgl,ParamInt,ParamDbl,ParamFct #>  5:                                     ParamDbl #>  6: ParamLgl,ParamInt,ParamDbl,ParamFct,ParamUty #>  7:          ParamLgl,ParamInt,ParamDbl,ParamFct #>  8:                                     ParamDbl #>  9:          ParamLgl,ParamInt,ParamDbl,ParamFct #> 10:          ParamDbl,ParamInt,ParamFct,ParamLgl #> 11:          ParamLgl,ParamInt,ParamDbl,ParamFct #> 12:                                     ParamDbl #> 13:          ParamLgl,ParamInt,ParamDbl,ParamFct #>                                    properties     packages #>                                        <list>       <list> #>  1: dependencies,single-crit,multi-crit,async   bbotk,rush #>  2: dependencies,single-crit,multi-crit,async   bbotk,rush #>  3: dependencies,single-crit,multi-crit,async   bbotk,rush #>  4:       dependencies,single-crit,multi-crit        bbotk #>  5:                               single-crit bbotk,adagio #>  6:       dependencies,single-crit,multi-crit        bbotk #>  7:                  dependencies,single-crit        bbotk #>  8:                               single-crit  bbotk,GenSA #>  9:       dependencies,single-crit,multi-crit        bbotk #> 10:                  dependencies,single-crit  bbotk,irace #> 11:                  dependencies,single-crit        bbotk #> 12:                               single-crit bbotk,nloptr #> 13:       dependencies,single-crit,multi-crit        bbotk mlr_optimizers$get(\"random_search\") #>  #> ── <OptimizerBatchRandomSearch> - Random Search ──────────────────────────────── #> • Parameters: batch_size=1 #> • Parameter classes: <ParamLgl>, <ParamInt>, <ParamDbl>, and <ParamFct> #> • Properties: dependencies, single-crit, and multi-crit #> • Packages: bbotk opt(\"random_search\") #>  #> ── <OptimizerBatchRandomSearch> - Random Search ──────────────────────────────── #> • Parameters: batch_size=1 #> • Parameter classes: <ParamLgl>, <ParamInt>, <ParamDbl>, and <ParamFct> #> • Properties: dependencies, single-crit, and multi-crit #> • Packages: bbotk"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"OptimizerAsyncDesignPoints class implements optimization w.r.t. fixed design points. simply search set points fully specified ser.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"async_design_points\") opt(\"async_design_points\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"design data.table::data.table Design points try search, one per row.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"bbotk::Optimizer -> bbotk::OptimizerAsync -> OptimizerAsyncDesignPoints","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"OptimizerAsyncDesignPoints$new() OptimizerAsyncDesignPoints$optimize() OptimizerAsyncDesignPoints$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"","code":"OptimizerAsyncDesignPoints$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"Starts asynchronous optimization.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"","code":"OptimizerAsyncDesignPoints$optimize(inst)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"inst (OptimInstance).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"data.table::data.table.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"","code":"OptimizerAsyncDesignPoints$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_design_points.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimization via Design Points — mlr_optimizers_async_design_points","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"OptimizerAsyncGridSearch class implements grid search. grid constructed Cartesian product discretized values per parameter, see paradox::generate_design_grid(). points grid evaluated random order.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"Bergstra J, Bengio Y (2012). “Random Search Hyper-Parameter Optimization.” Journal Machine Learning Research, 13(10), 281–305. https://jmlr.csail.mit.edu/papers/v13/bergstra12a.html.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"async_grid_search\") opt(\"async_grid_search\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"batch_size integer(1) Maximum number points try batch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"bbotk::Optimizer -> bbotk::OptimizerAsync -> OptimizerAsyncGridSearch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"OptimizerAsyncGridSearch$new() OptimizerAsyncGridSearch$optimize() OptimizerAsyncGridSearch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"","code":"OptimizerAsyncGridSearch$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"Starts asynchronous optimization.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"","code":"OptimizerAsyncGridSearch$optimize(inst)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"inst (OptimInstance).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"data.table::data.table.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"","code":"OptimizerAsyncGridSearch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_grid_search.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimization via Grid Search — mlr_optimizers_async_grid_search","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"OptimizerAsyncRandomSearch class implements simple Random Search.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"Bergstra J, Bengio Y (2012). “Random Search Hyper-Parameter Optimization.” Journal Machine Learning Research, 13(10), 281–305. https://jmlr.csail.mit.edu/papers/v13/bergstra12a.html.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"async_random_search\") opt(\"async_random_search\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"bbotk::Optimizer -> bbotk::OptimizerAsync -> OptimizerAsyncRandomSearch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerAsync$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"OptimizerAsyncRandomSearch$new() OptimizerAsyncRandomSearch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"","code":"OptimizerAsyncRandomSearch$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"","code":"OptimizerAsyncRandomSearch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_async_random_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous Optimization via Random Search — mlr_optimizers_async_random_search","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Optimizers Sequentially — mlr_optimizers_chain","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"OptimizerBatchChain allows run multiple OptimizerBatch sequentially. OptimizerBatch (optional) additional Terminator can specified construction. original Terminator OptimInstanceBatch guards optimization process whole, additional Terminators guard individual OptimizerBatch. optimization process works follows: first OptimizerBatch run OptimInstanceBatch relying TerminatorCombo original Terminator OptimInstanceBatch (optional) additional Terminator passed construction. TerminatorCombo indicates termination (usually via additional Terminator), second OptimizerBatch run. continues optimizers unless original Terminator OptimInstanceBatch indicates termination. OptimizerBatchChain can also used random restarts Optimizer (applicable) setting Terminator OptimInstanceBatch TerminatorNone setting identical additional Terminators construction.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"chain\") opt(\"chain\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"Parameters inherited individual OptimizerBatch collected paradox::ParamSetCollection (set_ids potentially postfixed via _1, _2, ..., OptimizerBatch used multiple times).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchChain","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"OptimizerBatchChain$new() OptimizerBatchChain$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"","code":"OptimizerBatchChain$new(   optimizers,   terminators = rep(list(NULL), length(optimizers)) )"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"optimizers (list Optimizers). terminators (list Terminators | NULL).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"","code":"OptimizerBatchChain$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_chain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Optimizers Sequentially — mlr_optimizers_chain","text":"","code":"library(paradox)  domain = ps(x = p_dbl(lower = -1, upper = 1))  search_space = ps(x = p_dbl(lower = -1, upper = 1))  codomain = ps(y = p_dbl(tags = \"minimize\"))  objective_function = function(xs) {  list(y = as.numeric(xs)^2) }  objective = ObjectiveRFun$new(  fun = objective_function,  domain = domain,  codomain = codomain )  terminator = trm(\"evals\", n_evals = 10)  # run optimizers sequentially instance = OptimInstanceBatchSingleCrit$new(  objective = objective,  search_space = search_space,  terminator = terminator )  optimizer = opt(\"chain\",  optimizers = list(opt(\"random_search\"), opt(\"grid_search\")),  terminators = list(trm(\"evals\", n_evals = 5), trm(\"evals\", n_evals = 5)) )  optimizer$optimize(instance) #>             x  x_domain          y #>         <num>    <list>      <num> #> 1: 0.08496082 <list[1]> 0.00721834  # random restarts instance = OptimInstanceBatchSingleCrit$new(  objective = objective,  search_space = search_space,  terminator = trm(\"none\") ) optimizer = opt(\"chain\",  optimizers = list(opt(\"gensa\"), opt(\"gensa\")),  terminators = list(trm(\"evals\", n_evals = 10), trm(\"evals\", n_evals = 10)) ) optimizer$optimize(instance) #>                x  x_domain            y #>            <num>    <list>        <num> #> 1: -3.266831e-13 <list[1]> 1.067219e-25"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"OptimizerBatchCmaes class implements CMA-ES. Calls adagio::pureCMAES() package adagio. algorithm typically applied search space dimensions three fifty. Lower search space dimensions might crash.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"cmaes\") opt(\"cmaes\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"sigma numeric(1) start_values character(1) Create random start values based center search space? latter case, center parameters trafo applied. meaning control parameters, see adagio::pureCMAES(). Note removed control parameters refer termination algorithm terminators allow obtain behavior.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchCmaes","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"OptimizerBatchCmaes$new() OptimizerBatchCmaes$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"","code":"OptimizerBatchCmaes$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"","code":"OptimizerBatchCmaes$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_cmaes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Covariance Matrix Adaptation Evolution Strategy — mlr_optimizers_cmaes","text":"","code":"if (requireNamespace(\"adagio\")) {   search_space = domain = ps(     x1 = p_dbl(-10, 10),     x2 = p_dbl(-5, 5)   )    codomain = ps(y = p_dbl(tags = \"maximize\"))    objective_function = function(xs) {     c(y = -(xs[[1]] - 2)^2 - (xs[[2]] + 3)^2 + 10)   }    objective = ObjectiveRFun$new(     fun = objective_function,     domain = domain,     codomain = codomain)    instance = OptimInstanceBatchSingleCrit$new(     objective = objective,     search_space = search_space,     terminator = trm(\"evals\", n_evals = 10))    optimizer = opt(\"cmaes\")    # modifies the instance by reference   optimizer$optimize(instance)    # returns best scoring evaluation   instance$result    # allows access of data.table of full path of all evaluations   as.data.table(instance$archive$data) } #>             x1         x2           y  x_domain           timestamp batch_nr #>          <num>      <num>       <num>    <list>              <POSc>    <int> #>  1: -10.000000 -3.4852274 -134.235446 <list[2]> 2025-05-19 12:44:25        1 #>  2:   4.462792 -1.7927417    2.477185 <list[2]> 2025-05-19 12:44:25        2 #>  3:   3.996612  1.3335799  -12.766374 <list[2]> 2025-05-19 12:44:25        3 #>  4:   3.192703 -2.1698473    7.888305 <list[2]> 2025-05-19 12:44:25        4 #>  5:  -1.368575  3.7848878  -47.381999 <list[2]> 2025-05-19 12:44:25        5 #>  6:   4.026872  5.0000000  -58.108210 <list[2]> 2025-05-19 12:44:25        6 #>  7:  -7.555327  2.4121352 -110.595477 <list[2]> 2025-05-19 12:44:25        7 #>  8:  -5.200698 -0.4365754  -48.421200 <list[2]> 2025-05-19 12:44:25        8 #>  9:  -5.635132 -5.0000000  -52.295237 <list[2]> 2025-05-19 12:44:25        9 #> 10:   5.779773 -5.0000000   -8.286682 <list[2]> 2025-05-19 12:44:25       10"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Design Points — mlr_optimizers_design_points","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"OptimizerBatchDesignPoints class implements optimization w.r.t. fixed design points. simply search set points fully specified user. points design evaluated order given. order support general termination criteria parallelization, evaluate points batch-fashion size batch_size. Larger batches mean can parallelize , smaller batches imply fine-grained checking termination criteria.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"design_points\") opt(\"design_points\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"batch_size integer(1) Maximum number configurations try batch. design data.table::data.table Design points try search, one per row.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchDesignPoints","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"OptimizerBatchDesignPoints$new() OptimizerBatchDesignPoints$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"","code":"OptimizerBatchDesignPoints$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"","code":"OptimizerBatchDesignPoints$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_design_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Design Points — mlr_optimizers_design_points","text":"","code":"library(data.table) search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))  codomain = ps(y = p_dbl(tags = \"minimize\"))  objective_function = function(xs) {   list(y = as.numeric(xs)^2) }  objective = ObjectiveRFun$new(   fun = objective_function,   domain = domain,   codomain = codomain)  instance = OptimInstanceBatchSingleCrit$new(   objective = objective,   search_space = search_space,   terminator = trm(\"evals\", n_evals = 10))  design = data.table(x = c(0, 1))  optimizer = opt(\"design_points\", design = design)  # Modifies the instance by reference optimizer$optimize(instance) #>        x  x_domain     y #>    <num>    <list> <num> #> 1:     0 <list[1]>     0  # Returns best scoring evaluation instance$result #>        x  x_domain     y #>    <num>    <list> <num> #> 1:     0 <list[1]>     0  # Allows access of data.table of full path of all evaluations as.data.table(instance$archive) #>        x     y           timestamp batch_nr x_domain_x #>    <num> <num>              <POSc>    <int>      <num> #> 1:     0     0 2025-05-19 12:44:26        1          0 #> 2:     1     1 2025-05-19 12:44:26        2          1"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Focus Search — mlr_optimizers_focus_search","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"OptimizerBatchFocusSearch class implements Focus Search. Focus Search starts evaluating n_points drawn uniformly random. 1 maxit batches, n_points drawn uniformly random best value batch outperforms previous best value batches evaluated far, search space shrinked around new best point prior next batch sampled evaluated. details shrinking, see shrink_ps. Depending Terminator procedure simply restarts maxit reached.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"focus_search\") opt(\"focus_search\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"n_points integer(1) Number points evaluate random search batch. maxit integer(1) Number random search batches run.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchFocusSearch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"OptimizerBatchFocusSearch$new() OptimizerBatchFocusSearch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"","code":"OptimizerBatchFocusSearch$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"","code":"OptimizerBatchFocusSearch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_focus_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Focus Search — mlr_optimizers_focus_search","text":"","code":"search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))  codomain = ps(y = p_dbl(tags = \"minimize\"))  objective_function = function(xs) {   list(y = as.numeric(xs)^2) }  objective = ObjectiveRFun$new(  fun = objective_function,  domain = domain,  codomain = codomain)  instance = OptimInstanceBatchSingleCrit$new(  objective = objective,  search_space = search_space,  terminator = trm(\"evals\", n_evals = 10))   optimizer = opt(\"focus_search\")  # modifies the instance by reference optimizer$optimize(instance) #>              x  x_domain            y #>          <num>    <list>        <num> #> 1: -0.03039435 <list[1]> 0.0009238167  # returns best scoring evaluation instance$result #>              x  x_domain            y #>          <num>    <list>        <num> #> 1: -0.03039435 <list[1]> 0.0009238167  # allows access of data.table of full path of all evaluations as.data.table(instance$archive$data) #>                x            y  x_domain           timestamp batch_nr #>            <num>        <num>    <list>              <POSc>    <int> #>   1:  0.85309290 0.7277674905 <list[1]> 2025-05-19 12:44:27        1 #>   2:  0.10475519 0.0109736497 <list[1]> 2025-05-19 12:44:27        1 #>   3:  0.15413139 0.0237564850 <list[1]> 2025-05-19 12:44:27        1 #>   4:  0.37489549 0.1405466293 <list[1]> 2025-05-19 12:44:27        1 #>   5: -0.51056354 0.2606751291 <list[1]> 2025-05-19 12:44:27        1 #>   6: -0.91076568 0.8294941298 <list[1]> 2025-05-19 12:44:27        1 #>   7:  0.81970911 0.6719230305 <list[1]> 2025-05-19 12:44:27        1 #>   8: -0.85863756 0.7372584621 <list[1]> 2025-05-19 12:44:27        1 #>   9:  0.99378295 0.9876045454 <list[1]> 2025-05-19 12:44:27        1 #>  10:  0.22370483 0.0500438532 <list[1]> 2025-05-19 12:44:27        1 #>  11: -0.65488231 0.4288708381 <list[1]> 2025-05-19 12:44:27        1 #>  12:  0.81888193 0.6705676158 <list[1]> 2025-05-19 12:44:27        1 #>  13: -0.92509767 0.8558056920 <list[1]> 2025-05-19 12:44:27        1 #>  14:  0.18710758 0.0350092468 <list[1]> 2025-05-19 12:44:27        1 #>  15: -0.52604489 0.2767232266 <list[1]> 2025-05-19 12:44:27        1 #>  16:  0.81259453 0.6603098758 <list[1]> 2025-05-19 12:44:27        1 #>  17:  0.63774597 0.4067199198 <list[1]> 2025-05-19 12:44:27        1 #>  18:  0.39965871 0.1597270880 <list[1]> 2025-05-19 12:44:27        1 #>  19: -0.55999934 0.3135992626 <list[1]> 2025-05-19 12:44:27        1 #>  20:  0.45598188 0.2079194719 <list[1]> 2025-05-19 12:44:27        1 #>  21: -0.56583108 0.3201648059 <list[1]> 2025-05-19 12:44:27        1 #>  22: -0.08753960 0.0076631822 <list[1]> 2025-05-19 12:44:27        1 #>  23: -0.33440048 0.1118236833 <list[1]> 2025-05-19 12:44:27        1 #>  24:  0.13670534 0.0186883492 <list[1]> 2025-05-19 12:44:27        1 #>  25: -0.49558855 0.2456080112 <list[1]> 2025-05-19 12:44:27        1 #>  26: -0.07197287 0.0051800935 <list[1]> 2025-05-19 12:44:27        1 #>  27:  0.83532101 0.6977611961 <list[1]> 2025-05-19 12:44:27        1 #>  28:  0.94568844 0.8943266176 <list[1]> 2025-05-19 12:44:27        1 #>  29:  0.63816489 0.4072544310 <list[1]> 2025-05-19 12:44:27        1 #>  30:  0.80584760 0.6493903486 <list[1]> 2025-05-19 12:44:27        1 #>  31:  0.16273209 0.0264817325 <list[1]> 2025-05-19 12:44:27        1 #>  32:  0.54601696 0.2981345231 <list[1]> 2025-05-19 12:44:27        1 #>  33:  0.99024605 0.9805872452 <list[1]> 2025-05-19 12:44:27        1 #>  34:  0.42194250 0.1780354729 <list[1]> 2025-05-19 12:44:27        1 #>  35: -0.57011481 0.3250308950 <list[1]> 2025-05-19 12:44:27        1 #>  36: -0.41648474 0.1734595387 <list[1]> 2025-05-19 12:44:27        1 #>  37:  0.44351946 0.1967095102 <list[1]> 2025-05-19 12:44:27        1 #>  38:  0.73323141 0.5376282957 <list[1]> 2025-05-19 12:44:27        1 #>  39: -0.52309379 0.2736271100 <list[1]> 2025-05-19 12:44:27        1 #>  40: -0.99100738 0.9820956350 <list[1]> 2025-05-19 12:44:27        1 #>  41:  0.88703293 0.7868274161 <list[1]> 2025-05-19 12:44:27        1 #>  42: -0.12372560 0.0153080239 <list[1]> 2025-05-19 12:44:27        1 #>  43:  0.50120666 0.2512081125 <list[1]> 2025-05-19 12:44:27        1 #>  44:  0.33563153 0.1126485232 <list[1]> 2025-05-19 12:44:27        1 #>  45: -0.18405360 0.0338757266 <list[1]> 2025-05-19 12:44:27        1 #>  46: -0.29750237 0.0885076602 <list[1]> 2025-05-19 12:44:27        1 #>  47:  0.47618312 0.2267503666 <list[1]> 2025-05-19 12:44:27        1 #>  48:  0.32857099 0.1079588926 <list[1]> 2025-05-19 12:44:27        1 #>  49: -0.82955060 0.6881541974 <list[1]> 2025-05-19 12:44:27        1 #>  50:  0.71226431 0.5073204521 <list[1]> 2025-05-19 12:44:27        1 #>  51: -0.84603336 0.7157724405 <list[1]> 2025-05-19 12:44:27        1 #>  52:  0.70568961 0.4979978210 <list[1]> 2025-05-19 12:44:27        1 #>  53: -0.78730608 0.6198508608 <list[1]> 2025-05-19 12:44:27        1 #>  54: -0.03039435 0.0009238167 <list[1]> 2025-05-19 12:44:27        1 #>  55: -0.50556178 0.2555927126 <list[1]> 2025-05-19 12:44:27        1 #>  56:  0.37313842 0.1392322814 <list[1]> 2025-05-19 12:44:27        1 #>  57: -0.67275360 0.4525974112 <list[1]> 2025-05-19 12:44:27        1 #>  58:  0.90564960 0.8202011973 <list[1]> 2025-05-19 12:44:27        1 #>  59: -0.35629090 0.1269432039 <list[1]> 2025-05-19 12:44:27        1 #>  60: -0.27693177 0.0766912033 <list[1]> 2025-05-19 12:44:27        1 #>  61:  0.77544683 0.6013177939 <list[1]> 2025-05-19 12:44:27        1 #>  62:  0.65602884 0.4303738331 <list[1]> 2025-05-19 12:44:27        1 #>  63: -0.79868708 0.6379010591 <list[1]> 2025-05-19 12:44:27        1 #>  64:  0.81210316 0.6595115352 <list[1]> 2025-05-19 12:44:27        1 #>  65:  0.54546073 0.2975274068 <list[1]> 2025-05-19 12:44:27        1 #>  66: -0.23325866 0.0544096020 <list[1]> 2025-05-19 12:44:27        1 #>  67:  0.99930491 0.9986103119 <list[1]> 2025-05-19 12:44:27        1 #>  68: -0.30140190 0.0908431071 <list[1]> 2025-05-19 12:44:27        1 #>  69:  0.89463653 0.8003745249 <list[1]> 2025-05-19 12:44:27        1 #>  70: -0.56780005 0.3223968943 <list[1]> 2025-05-19 12:44:27        1 #>  71: -0.93581458 0.8757489324 <list[1]> 2025-05-19 12:44:27        1 #>  72: -0.70936831 0.5032034038 <list[1]> 2025-05-19 12:44:27        1 #>  73:  0.70876778 0.5023517602 <list[1]> 2025-05-19 12:44:27        1 #>  74: -0.57370138 0.3291332711 <list[1]> 2025-05-19 12:44:27        1 #>  75: -0.57937852 0.3356794739 <list[1]> 2025-05-19 12:44:27        1 #>  76: -0.92095862 0.8481647798 <list[1]> 2025-05-19 12:44:27        1 #>  77:  0.88954961 0.7912985024 <list[1]> 2025-05-19 12:44:27        1 #>  78: -0.51014403 0.2602469263 <list[1]> 2025-05-19 12:44:27        1 #>  79:  0.56224514 0.3161195931 <list[1]> 2025-05-19 12:44:27        1 #>  80: -0.42352566 0.1793739877 <list[1]> 2025-05-19 12:44:27        1 #>  81:  0.75071582 0.5635742433 <list[1]> 2025-05-19 12:44:27        1 #>  82: -0.40849981 0.1668720962 <list[1]> 2025-05-19 12:44:27        1 #>  83:  0.96705082 0.9351872806 <list[1]> 2025-05-19 12:44:27        1 #>  84:  0.17967511 0.0322831462 <list[1]> 2025-05-19 12:44:27        1 #>  85:  0.51831676 0.2686522634 <list[1]> 2025-05-19 12:44:27        1 #>  86:  0.67215061 0.4517864450 <list[1]> 2025-05-19 12:44:27        1 #>  87:  0.52563894 0.2762962946 <list[1]> 2025-05-19 12:44:27        1 #>  88: -0.16546015 0.0273770604 <list[1]> 2025-05-19 12:44:27        1 #>  89: -0.72385032 0.5239592832 <list[1]> 2025-05-19 12:44:27        1 #>  90: -0.83831008 0.7027637850 <list[1]> 2025-05-19 12:44:27        1 #>  91:  0.31196525 0.0973223186 <list[1]> 2025-05-19 12:44:27        1 #>  92:  0.20400772 0.0416191491 <list[1]> 2025-05-19 12:44:27        1 #>  93:  0.31399166 0.0985907621 <list[1]> 2025-05-19 12:44:27        1 #>  94: -0.34136567 0.1165305225 <list[1]> 2025-05-19 12:44:27        1 #>  95:  0.95894844 0.9195821122 <list[1]> 2025-05-19 12:44:27        1 #>  96:  0.43037227 0.1852202894 <list[1]> 2025-05-19 12:44:27        1 #>  97:  0.74526061 0.5554133765 <list[1]> 2025-05-19 12:44:27        1 #>  98:  0.96656749 0.9342527204 <list[1]> 2025-05-19 12:44:27        1 #>  99: -0.56287401 0.3168271557 <list[1]> 2025-05-19 12:44:27        1 #> 100:  0.32906013 0.1082805681 <list[1]> 2025-05-19 12:44:27        1 #>                x            y  x_domain           timestamp batch_nr"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"OptimizerBatchGenSA class implements generalized simulated annealing. Calls GenSA::GenSA() package GenSA.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"Tsallis C, Stariolo DA (1996). “Generalized simulated annealing.” Physica : Statistical Mechanics Applications, 233(1-2), 395–406. doi:10.1016/s0378-4371(96)00271-3 . Xiang Y, Gubian S, Suomela B, Hoeng J (2013). “Generalized Simulated Annealing Global Optimization: GenSA Package.” R Journal, 5(1), 13. doi:10.32614/rj-2013-002 .","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"gensa\") opt(\"gensa\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"smooth logical(1) temperature numeric(1) acceptance.param numeric(1) verbose logical(1) trace.mat logical(1) meaning control parameters, see GenSA::GenSA(). Note removed control parameters refer termination algorithm terminators allow obtain behavior. contrast GenSA::GenSA() defaults, set trace.mat = FALSE. Note GenSA::GenSA() uses smooth = TRUE default. case using optimizer Hyperparameter Optimization may want set smooth = FALSE.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchGenSA","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"OptimizerBatchGenSA$new() OptimizerBatchGenSA$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"","code":"OptimizerBatchGenSA$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"","code":"OptimizerBatchGenSA$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_gensa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Generalized Simulated Annealing — mlr_optimizers_gensa","text":"","code":"if (requireNamespace(\"GenSA\")) {    search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))    codomain = ps(y = p_dbl(tags = \"minimize\"))    objective_function = function(xs) {     list(y = as.numeric(xs)^2)   }    objective = ObjectiveRFun$new(     fun = objective_function,     domain = domain,     codomain = codomain)    instance = OptimInstanceBatchSingleCrit$new(     objective = objective,     search_space = search_space,     terminator = trm(\"evals\", n_evals = 10))    optimizer = opt(\"gensa\")    # Modifies the instance by reference   optimizer$optimize(instance)    # Returns best scoring evaluation   instance$result    # Allows access of data.table of full path of all evaluations   as.data.table(instance$archive$data) } #>                 x            y  x_domain           timestamp batch_nr #>             <num>        <num>    <list>              <POSc>    <int> #>  1:  3.721262e-01 1.384779e-01 <list[1]> 2025-05-19 12:44:27        1 #>  2: -8.684110e-01 7.541377e-01 <list[1]> 2025-05-19 12:44:27        2 #>  3: -4.340169e-02 1.883707e-03 <list[1]> 2025-05-19 12:44:28        3 #>  4: -4.340169e-02 1.883707e-03 <list[1]> 2025-05-19 12:44:28        4 #>  5: -4.340069e-02 1.883620e-03 <list[1]> 2025-05-19 12:44:28        5 #>  6: -4.340269e-02 1.883794e-03 <list[1]> 2025-05-19 12:44:28        6 #>  7:  4.340169e-02 1.883707e-03 <list[1]> 2025-05-19 12:44:28        7 #>  8:  4.340269e-02 1.883794e-03 <list[1]> 2025-05-19 12:44:28        8 #>  9:  4.340069e-02 1.883620e-03 <list[1]> 2025-05-19 12:44:28        9 #> 10:  4.718448e-16 2.226375e-31 <list[1]> 2025-05-19 12:44:28       10"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Grid Search — mlr_optimizers_grid_search","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"OptimizerBatchGridSearch class implements grid search. grid constructed Cartesian product discretized values per parameter, see paradox::generate_design_grid(). points grid evaluated random order. order support general termination criteria parallelization, evaluate points batch-fashion size batch_size. Larger batches mean can parallelize , smaller batches imply fine-grained checking termination criteria.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"grid_search\") opt(\"grid_search\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"resolution integer(1) Resolution grid, see paradox::generate_design_grid(). param_resolutions named integer() Resolution per parameter, named parameter ID, see paradox::generate_design_grid(). batch_size integer(1) Maximum number points try batch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchGridSearch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"OptimizerBatchGridSearch$new() OptimizerBatchGridSearch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"","code":"OptimizerBatchGridSearch$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"","code":"OptimizerBatchGridSearch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_grid_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Grid Search — mlr_optimizers_grid_search","text":"","code":"search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))  codomain = ps(y = p_dbl(tags = \"minimize\"))  objective_function = function(xs) {   list(y = as.numeric(xs)^2) }  objective = ObjectiveRFun$new(  fun = objective_function,  domain = domain,  codomain = codomain)  instance = OptimInstanceBatchSingleCrit$new(  objective = objective,  search_space = search_space,  terminator = trm(\"evals\", n_evals = 10))   optimizer = opt(\"grid_search\")  # modifies the instance by reference optimizer$optimize(instance) #>            x  x_domain          y #>        <num>    <list>      <num> #> 1: 0.1111111 <list[1]> 0.01234568  # returns best scoring evaluation instance$result #>            x  x_domain          y #>        <num>    <list>      <num> #> 1: 0.1111111 <list[1]> 0.01234568  # allows access of data.table of full path of all evaluations as.data.table(instance$archive$data) #>              x          y  x_domain           timestamp batch_nr #>          <num>      <num>    <list>              <POSc>    <int> #>  1:  0.1111111 0.01234568 <list[1]> 2025-05-19 12:44:28        1 #>  2: -0.3333333 0.11111111 <list[1]> 2025-05-19 12:44:28        2 #>  3: -0.7777778 0.60493827 <list[1]> 2025-05-19 12:44:28        3 #>  4:  0.7777778 0.60493827 <list[1]> 2025-05-19 12:44:28        4 #>  5:  0.5555556 0.30864198 <list[1]> 2025-05-19 12:44:28        5 #>  6:  0.3333333 0.11111111 <list[1]> 2025-05-19 12:44:28        6 #>  7: -1.0000000 1.00000000 <list[1]> 2025-05-19 12:44:28        7 #>  8:  1.0000000 1.00000000 <list[1]> 2025-05-19 12:44:28        8 #>  9: -0.1111111 0.01234568 <list[1]> 2025-05-19 12:44:28        9 #> 10: -0.5555556 0.30864198 <list[1]> 2025-05-19 12:44:28       10"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Iterated Racing — mlr_optimizers_irace","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"OptimizerBatchIrace class implements iterated racing. Calls irace::irace() package irace.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"Lopez-Ibanez M, Dubois-Lacoste J, Caceres LP, Birattari M, Stuetzle T (2016). “irace package: Iterated racing automatic algorithm configuration.” Operations Research Perspectives, 3, 43–58. doi:10.1016/j.orp.2016.09.002 .","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"instances list() list instances configurations executed . targetRunnerParallel function() function executes objective function specific parameter configuration instance. default function provided, see section \"Target Runner Instances\". meaning parameters, see irace::defaultScenario(). Note removed control parameters refer termination algorithm. Use TerminatorEvals instead. terminators work OptimizerBatchIrace. contrast irace::defaultScenario(), set digits = 15. represents double parameters higher precision avoids rounding errors.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"target-runner-and-instances","dir":"Reference","previous_headings":"","what":"Target Runner and Instances","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"irace package uses targetRunner script R function evaluate configuration particular instance. Usually necessary specify targetRunner function using OptimizerBatchIrace. default function used forwards several configurations instances user defined objective function. usually, user defined function xs, xss xdt parameter depending used Objective class. irace, function needs additional instances parameter.","code":"fun = function(xs, instances) {  # function to evaluate configuration in `xs` on instance `instances` }"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"archive","dir":"Reference","previous_headings":"","what":"Archive","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"Archive holds following additional columns: \"race\" (integer(1)) Race iteration. \"step\" (integer(1)) Step number race. \"instance\" (integer(1)) Identifies instances across races steps. \"configuration\" (integer(1)) Identifies configurations across races steps.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"result","dir":"Reference","previous_headings":"","what":"Result","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"optimization result (instance$result) best performing elite final race. reported performance average performance estimated used instances.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"irace\") opt(\"irace\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchIrace","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"OptimizerBatchIrace$new() OptimizerBatchIrace$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"","code":"OptimizerBatchIrace$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"","code":"OptimizerBatchIrace$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_irace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Iterated Racing — mlr_optimizers_irace","text":"","code":"# runtime of the example is too long # \\donttest{  library(data.table)  search_space = domain = ps(   x1 = p_dbl(-5, 10),   x2 = p_dbl(0, 15) )  codomain = ps(y = p_dbl(tags = \"minimize\"))  # branin function with noise # the noise generates different instances of the branin function # the noise values are passed via the `instances` parameter fun = function(xdt, instances) {   ys = branin(xdt[[\"x1\"]], xdt[[\"x2\"]], noise = as.numeric(instances))   data.table(y = ys) }  # define objective with instances as a constant objective = ObjectiveRFunDt$new(  fun = fun,  domain = domain,  codomain = codomain,  constants = ps(instances = p_uty()))  instance = OptimInstanceBatchSingleCrit$new(   objective = objective,   search_space = search_space,   terminator = trm(\"evals\", n_evals = 96))  # create instances of branin function instances = rnorm(10, mean = 0, sd = 0.1)  # load optimizer irace and set branin instances optimizer = opt(\"irace\", instances = instances)  # modifies the instance by reference optimizer$optimize(instance) #> # 2025-05-19 12:44:29 UTC: Initialization #> # Elitist race #> # Elitist new instances: 1 #> # Elitist limit: 2 #> # nbIterations: 3 #> # minNbSurvival: 3 #> # nbParameters: 2 #> # seed: 2011091433 #> # confidence level: 0.95 #> # budget: 96 #> # mu: 5 #> # deterministic: FALSE #>  #> # 2025-05-19 12:44:30 UTC: Iteration 1 of 3 #> # experimentsUsed: 0 #> # remainingBudget: 96 #> # currentBudget: 32 #> # nbConfigurations: 5 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded. #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          1|          5|          2|     16.54517279|          5|00:00:00|   NA|  NA|    NA| #> |x|          2|          5|          2|     16.54517279|         10|00:00:00|+1.00|1.00|0.0000| #> |x|          3|          5|          2|     16.54517279|         15|00:00:00|+1.00|1.00|0.0000| #> |x|          4|          5|          2|     16.54517279|         20|00:00:00|+1.00|1.00|0.0000| #> |-|          5|          1|          2|     16.54517279|         25|00:00:00|   NA|  NA|    NA| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best-so-far configuration:           2    mean value:      16.54517279 #> Description of the best-so-far configuration: #>   .ID.               x1               x2 .PARENT. #> 2    2 7.21608519554138 2.15154692530632       NA #>  #> # 2025-05-19 12:44:30 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>                 x1               x2 #> 2 7.21608519554138 2.15154692530632 #> # 2025-05-19 12:44:30 UTC: Iteration 2 of 3 #> # experimentsUsed: 25 #> # remainingBudget: 71 #> # currentBudget: 35 #> # nbConfigurations: 5 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded. #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          6|          5|          6|     4.104613811|          5|00:00:00|   NA|  NA|    NA| #> |x|          5|          5|          6|     4.104613811|          9|00:00:00|+1.00|1.00|0.0000| #> |x|          1|          5|          6|     4.104613811|         13|00:00:00|+1.00|1.00|0.0000| #> |x|          2|          5|          6|     4.104613811|         17|00:00:00|+1.00|1.00|0.0000| #> |-|          3|          2|          6|     4.104613811|         21|00:00:00|+1.00|1.00|0.0000| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best configuration for the instances in this race: 6 #> Best-so-far configuration:           2    mean value:      16.54517279 #> Description of the best-so-far configuration: #>   .ID.               x1               x2 .PARENT. #> 2    2 7.21608519554138 2.15154692530632       NA #>  #> # 2025-05-19 12:44:30 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>                 x1                x2 #> 2 7.21608519554138 2.151546925306320 #> 6 9.12606399995485 0.423063351400879 #> # 2025-05-19 12:44:30 UTC: Iteration 3 of 3 #> # experimentsUsed: 46 #> # remainingBudget: 50 #> # currentBudget: 50 #> # nbConfigurations: 7 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded. #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          7|          7|         11|    0.7360248612|          7|00:00:00|   NA|  NA|    NA| #> |x|          2|          7|         11|    0.7360248612|         12|00:00:00|+1.00|1.00|0.0000| #> |x|          6|          7|         11|    0.7360248612|         17|00:00:00|+1.00|1.00|0.0000| #> |x|          1|          7|         11|    0.7360248612|         22|00:00:00|+1.00|1.00|0.0000| #> |-|          5|          3|         11|    0.7360248612|         27|00:00:00|+1.00|1.00|0.0000| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best configuration for the instances in this race: 11 #> Best-so-far configuration:           2    mean value:      16.54517279 #> Description of the best-so-far configuration: #>   .ID.               x1               x2 .PARENT. #> 2    2 7.21608519554138 2.15154692530632       NA #>  #> # 2025-05-19 12:44:30 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>                  x1                x2 #> 2  7.21608519554138 2.151546925306320 #> 6  9.12606399995485 0.423063351400879 #> 11 9.26569520132867 1.878363370490038 #> # 2025-05-19 12:44:30 UTC: Iteration 4 of 4 #> # experimentsUsed: 73 #> # remainingBudget: 23 #> # currentBudget: 23 #> # nbConfigurations: 4 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded. #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          8|          4|         11|    0.7360248612|          4|00:00:00|   NA|  NA|    NA| #> |x|          7|          4|         11|    0.7360248612|          5|00:00:00|+1.00|1.00|0.0000| #> |x|          6|          4|         11|    0.7360248612|          6|00:00:00|+1.00|1.00|0.0000| #> |x|          4|          4|         11|    0.7360248612|          9|00:00:00|+1.00|1.00|0.0000| #> |-|          5|          3|         11|    0.7360248612|         10|00:00:00|+1.00|1.00|0.0000| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best configuration for the instances in this race: 11 #> Best-so-far configuration:           6    mean value:      4.104613811 #> Description of the best-so-far configuration: #>   .ID.               x1                x2 .PARENT. #> 6    6 9.12606399995485 0.423063351400879        2 #>  #> # 2025-05-19 12:44:31 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>                  x1                x2 #> 6  9.12606399995485 0.423063351400879 #> 2  7.21608519554138 2.151546925306320 #> 11 9.26569520132867 1.878363370490038 #> # 2025-05-19 12:44:31 UTC: Iteration 5 of 5 #> # experimentsUsed: 83 #> # remainingBudget: 13 #> # currentBudget: 13 #> # nbConfigurations: 4 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded. #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          7|          4|         11|    0.7360248612|          1|00:00:00|   NA|  NA|    NA| #> |x|          3|          4|         11|    0.7360248612|          3|00:00:00|+1.00|1.00|0.0000| #> |x|          5|          4|         11|    0.7360248612|          4|00:00:00|+1.00|1.00|0.0000| #> |x|          6|          4|         11|    0.7360248612|          5|00:00:00|+1.00|1.00|0.0000| #> |-|          2|          3|         11|    0.7360248612|          6|00:00:00|+1.00|1.00|0.0000| #> |.|          4|          3|         11|    0.7360248612|          6|00:00:00|+1.00|1.00|0.0000| #> |.|          8|          3|         11|    0.7360248612|          6|00:00:00|+1.00|1.00|0.0000| #> |.|          1|          3|         11|    0.7360248612|          6|00:00:00|+1.00|1.00|0.0000| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best-so-far configuration:          11    mean value:     0.7360248612 #> Description of the best-so-far configuration: #>    .ID.               x1               x2 .PARENT. #> 11   11 9.26569520132867 1.87836337049004        6 #>  #> # 2025-05-19 12:44:31 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>                  x1                x2 #> 11 9.26569520132867 1.878363370490038 #> 6  9.12606399995485 0.423063351400879 #> 2  7.21608519554138 2.151546925306320 #> # 2025-05-19 12:44:31 UTC: Stopped because there is not enough budget left to race more than the minimum (3). #> # You may either increase the budget or set 'minNbSurvival' to a lower value. #> # Iteration: 6 #> # nbIterations: 6 #> # experimentsUsed: 89 #> # timeUsed: 0 #> # remainingBudget: 7 #> # currentBudget: 7 #> # number of elites: 3 #> # nbConfigurations: 3 #> # Total CPU user time: 1.452, CPU sys time: 0.011, Wall-clock time: 1.463 #> # 2025-05-19 12:44:31 UTC: Starting post-selection: #> # Configurations selected: 11, 6, 2, 1. #> # Pending instances: 1, 1, 1, 4. #> # 2025-05-19 12:44:32 UTC: seed: 2011091433 #> # Configurations: 4 #> # Available experiments: 7 #> # minSurvival: 1 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded. #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |.|          5|          4|         11|    0.7360248612|          0|00:00:00|   NA|  NA|    NA| #> |.|          3|          4|         11|    0.7360248612|          0|00:00:00|+1.00|1.00|0.0000| #> |.|          1|          4|         11|    0.7360248612|          0|00:00:00|+1.00|1.00|0.0000| #> |.|          4|          4|         11|    0.7360248612|          0|00:00:00|+1.00|1.00|0.0000| #> |x|          6|          4|         11|    0.7360248612|          1|00:00:00|+1.00|1.00|0.0000| #> |x|          7|          4|         11|    0.7360248612|          2|00:00:00|+1.00|1.00|0.0000| #> |x|          8|          4|         11|    0.7360248612|          3|00:00:00|+1.00|1.00|0.0000| #> |.|          2|          4|         11|    0.7360248612|          3|00:00:00|+1.00|1.00|0.0000| #> |-|          9|          1|         11|    0.7360248612|          7|00:00:00|   NA|  NA|    NA| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best-so-far configuration:          11    mean value:     0.7360248612 #> Description of the best-so-far configuration: #>    .ID.               x1               x2 .PARENT. #> 11   11 9.26569520132867 1.87836337049004        6 #>  #> # 2025-05-19 12:44:32 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>                  x1               x2 #> 11 9.26569520132867 1.87836337049004 #> # Total CPU user time: 1.758, CPU sys time: 0.025, Wall-clock time: 1.783 #>          x1       x2 configuration  x_domain         y #>       <num>    <num>         <int>    <list>     <num> #> 1: 9.265695 1.878363            11 <list[2]> 0.7360249  # best scoring configuration instance$result #>          x1       x2 configuration  x_domain         y #>       <num>    <num>         <int>    <list>     <num> #> 1: 9.265695 1.878363            11 <list[2]> 0.7360249  # all evaluations as.data.table(instance$archive) #>             x1         x2           y  race  step instance configuration #>          <num>      <num>       <num> <int> <int>    <int>         <int> #>  1: -0.2839148  9.6515465  29.3891389     1     1        2             1 #>  2:  7.2160852  2.1515469  16.5451728     1     1        2             2 #>  3: -4.0339147  5.9015469  78.2914784     1     1        2             3 #>  4:  3.4660852 13.4015465 130.0850078     1     1        2             4 #>  5:  5.3410852  4.0265469  23.7231778     1     1        2             5 #>  6: -0.2839148  9.6515465  29.3891389     1     1       10             1 #>  7:  7.2160852  2.1515469  16.5451728     1     1       10             2 #>  8: -4.0339147  5.9015469  78.2914784     1     1       10             3 #>  9:  3.4660852 13.4015465 130.0850078     1     1       10             4 #> 10:  5.3410852  4.0265469  23.7231778     1     1       10             5 #> 11: -0.2839148  9.6515465  29.3891389     1     1        4             1 #> 12:  7.2160852  2.1515469  16.5451728     1     1        4             2 #> 13: -4.0339147  5.9015469  78.2914784     1     1        4             3 #> 14:  3.4660852 13.4015465 130.0850078     1     1        4             4 #> 15:  5.3410852  4.0265469  23.7231778     1     1        4             5 #> 16: -0.2839148  9.6515465  29.3891389     1     1        9             1 #> 17:  7.2160852  2.1515469  16.5451728     1     1        9             2 #> 18: -4.0339147  5.9015469  78.2914784     1     1        9             3 #> 19:  3.4660852 13.4015465 130.0850078     1     1        9             4 #> 20:  5.3410852  4.0265469  23.7231778     1     1        9             5 #> 21: -0.2839148  9.6515465  29.3891389     1     1        8             1 #> 22:  7.2160852  2.1515469  16.5451728     1     1        8             2 #> 23: -4.0339147  5.9015469  78.2914784     1     1        8             3 #> 24:  3.4660852 13.4015465 130.0850078     1     1        8             4 #> 25:  5.3410852  4.0265469  23.7231778     1     1        8             5 #> 26:  7.2160852  2.1515469  16.5451728     2     1        3             2 #> 27:  9.1260640  0.4230634   4.1046138     2     1        3             6 #> 28:  9.9814309  1.0175448   5.7167544     2     1        3             7 #> 29:  5.0076254  3.9627674  20.0471055     2     1        3             8 #> 30:  7.2773650  2.7089999  17.3365236     2     1        3             9 #> 31:  9.1260640  0.4230634   4.1046138     2     1        8             6 #> 32:  9.9814309  1.0175448   5.7167544     2     1        8             7 #> 33:  5.0076254  3.9627674  20.0471055     2     1        8             8 #> 34:  7.2773650  2.7089999  17.3365236     2     1        8             9 #> 35:  9.1260640  0.4230634   4.1046138     2     1        2             6 #> 36:  9.9814309  1.0175448   5.7167544     2     1        2             7 #> 37:  5.0076254  3.9627674  20.0471055     2     1        2             8 #> 38:  7.2773650  2.7089999  17.3365236     2     1        2             9 #> 39:  9.1260640  0.4230634   4.1046138     2     1       10             6 #> 40:  9.9814309  1.0175448   5.7167544     2     1       10             7 #> 41:  5.0076254  3.9627674  20.0471055     2     1       10             8 #> 42:  7.2773650  2.7089999  17.3365236     2     1       10             9 #> 43:  9.1260640  0.4230634   4.1046138     2     1        4             6 #> 44:  9.9814309  1.0175448   5.7167544     2     1        4             7 #> 45:  5.0076254  3.9627674  20.0471055     2     1        4             8 #> 46:  7.2773650  2.7089999  17.3365236     2     1        4             9 #> 47:  7.2160852  2.1515469  16.5451728     3     1        6             2 #> 48:  9.1260640  0.4230634   4.1046138     3     1        6             6 #> 49:  8.6697676  1.2913234   3.3920805     3     1        6            10 #> 50:  9.2656952  1.8783634   0.7360249     3     1        6            11 #> 51:  8.7304678  0.8102927   3.9234273     3     1        6            12 #> 52:  8.1051079  0.7415683   8.3283539     3     1        6            13 #> 53:  6.3181451  0.3029009  20.2336398     3     1        6            14 #> 54:  8.6697676  1.2913234   3.3920805     3     1       10            10 #> 55:  9.2656952  1.8783634   0.7360249     3     1       10            11 #> 56:  8.7304678  0.8102927   3.9234273     3     1       10            12 #> 57:  8.1051079  0.7415683   8.3283539     3     1       10            13 #> 58:  6.3181451  0.3029009  20.2336398     3     1       10            14 #> 59:  8.6697676  1.2913234   3.3920805     3     1        3            10 #> 60:  9.2656952  1.8783634   0.7360249     3     1        3            11 #> 61:  8.7304678  0.8102927   3.9234273     3     1        3            12 #> 62:  8.1051079  0.7415683   8.3283539     3     1        3            13 #> 63:  6.3181451  0.3029009  20.2336398     3     1        3            14 #> 64:  8.6697676  1.2913234   3.3920805     3     1        2            10 #> 65:  9.2656952  1.8783634   0.7360249     3     1        2            11 #> 66:  8.7304678  0.8102927   3.9234273     3     1        2            12 #> 67:  8.1051079  0.7415683   8.3283539     3     1        2            13 #> 68:  6.3181451  0.3029009  20.2336398     3     1        2            14 #> 69:  8.6697676  1.2913234   3.3920805     3     1        8            10 #> 70:  9.2656952  1.8783634   0.7360249     3     1        8            11 #> 71:  8.7304678  0.8102927   3.9234273     3     1        8            12 #> 72:  8.1051079  0.7415683   8.3283539     3     1        8            13 #> 73:  6.3181451  0.3029009  20.2336398     3     1        8            14 #> 74:  7.2160852  2.1515469  16.5451728     4     1        7             2 #> 75:  9.1260640  0.4230634   4.1046138     4     1        7             6 #> 76:  9.2656952  1.8783634   0.7360249     4     1        7            11 #> 77:  6.8101530  0.5622976  18.6479655     4     1        7            15 #> 78:  6.8101530  0.5622976  18.6479655     4     1        6            15 #> 79:  6.8101530  0.5622976  18.6479655     4     1        3            15 #> 80:  9.1260640  0.4230634   4.1046138     4     1        9             6 #> 81:  9.2656952  1.8783634   0.7360249     4     1        9            11 #> 82:  6.8101530  0.5622976  18.6479655     4     1        9            15 #> 83:  6.8101530  0.5622976  18.6479655     4     1        8            15 #> 84:  6.2504068  3.4957169  25.3407491     5     1        6            16 #> 85:  9.2656952  1.8783634   0.7360249     5     1        4            11 #> 86:  6.2504068  3.4957169  25.3407491     5     1        4            16 #> 87:  6.2504068  3.4957169  25.3407491     5     1        8            16 #> 88:  6.2504068  3.4957169  25.3407491     5     1        3            16 #> 89:  6.2504068  3.4957169  25.3407491     5     1       10            16 #> 90: -0.2839148  9.6515465  29.3891389     6     1        3             1 #> 91: -0.2839148  9.6515465  29.3891389     6     1        6             1 #> 92: -0.2839148  9.6515465  29.3891389     6     1        7             1 #> 93: -0.2839148  9.6515465  29.3891389     6     1        5             1 #> 94:  7.2160852  2.1515469  16.5451728     6     1        5             2 #> 95:  9.1260640  0.4230634   4.1046138     6     1        5             6 #> 96:  9.2656952  1.8783634   0.7360249     6     1        5            11 #>             x1         x2           y  race  step instance configuration #>               timestamp batch_nr #>                  <POSc>    <int> #>  1: 2025-05-19 12:44:30        1 #>  2: 2025-05-19 12:44:30        1 #>  3: 2025-05-19 12:44:30        1 #>  4: 2025-05-19 12:44:30        1 #>  5: 2025-05-19 12:44:30        1 #>  6: 2025-05-19 12:44:30        2 #>  7: 2025-05-19 12:44:30        2 #>  8: 2025-05-19 12:44:30        2 #>  9: 2025-05-19 12:44:30        2 #> 10: 2025-05-19 12:44:30        2 #> 11: 2025-05-19 12:44:30        3 #> 12: 2025-05-19 12:44:30        3 #> 13: 2025-05-19 12:44:30        3 #> 14: 2025-05-19 12:44:30        3 #> 15: 2025-05-19 12:44:30        3 #> 16: 2025-05-19 12:44:30        4 #> 17: 2025-05-19 12:44:30        4 #> 18: 2025-05-19 12:44:30        4 #> 19: 2025-05-19 12:44:30        4 #> 20: 2025-05-19 12:44:30        4 #> 21: 2025-05-19 12:44:30        5 #> 22: 2025-05-19 12:44:30        5 #> 23: 2025-05-19 12:44:30        5 #> 24: 2025-05-19 12:44:30        5 #> 25: 2025-05-19 12:44:30        5 #> 26: 2025-05-19 12:44:30        6 #> 27: 2025-05-19 12:44:30        6 #> 28: 2025-05-19 12:44:30        6 #> 29: 2025-05-19 12:44:30        6 #> 30: 2025-05-19 12:44:30        6 #> 31: 2025-05-19 12:44:30        7 #> 32: 2025-05-19 12:44:30        7 #> 33: 2025-05-19 12:44:30        7 #> 34: 2025-05-19 12:44:30        7 #> 35: 2025-05-19 12:44:30        8 #> 36: 2025-05-19 12:44:30        8 #> 37: 2025-05-19 12:44:30        8 #> 38: 2025-05-19 12:44:30        8 #> 39: 2025-05-19 12:44:30        9 #> 40: 2025-05-19 12:44:30        9 #> 41: 2025-05-19 12:44:30        9 #> 42: 2025-05-19 12:44:30        9 #> 43: 2025-05-19 12:44:30       10 #> 44: 2025-05-19 12:44:30       10 #> 45: 2025-05-19 12:44:30       10 #> 46: 2025-05-19 12:44:30       10 #> 47: 2025-05-19 12:44:30       11 #> 48: 2025-05-19 12:44:30       11 #> 49: 2025-05-19 12:44:30       11 #> 50: 2025-05-19 12:44:30       11 #> 51: 2025-05-19 12:44:30       11 #> 52: 2025-05-19 12:44:30       11 #> 53: 2025-05-19 12:44:30       11 #> 54: 2025-05-19 12:44:30       12 #> 55: 2025-05-19 12:44:30       12 #> 56: 2025-05-19 12:44:30       12 #> 57: 2025-05-19 12:44:30       12 #> 58: 2025-05-19 12:44:30       12 #> 59: 2025-05-19 12:44:30       13 #> 60: 2025-05-19 12:44:30       13 #> 61: 2025-05-19 12:44:30       13 #> 62: 2025-05-19 12:44:30       13 #> 63: 2025-05-19 12:44:30       13 #> 64: 2025-05-19 12:44:30       14 #> 65: 2025-05-19 12:44:30       14 #> 66: 2025-05-19 12:44:30       14 #> 67: 2025-05-19 12:44:30       14 #> 68: 2025-05-19 12:44:30       14 #> 69: 2025-05-19 12:44:30       15 #> 70: 2025-05-19 12:44:30       15 #> 71: 2025-05-19 12:44:30       15 #> 72: 2025-05-19 12:44:30       15 #> 73: 2025-05-19 12:44:30       15 #> 74: 2025-05-19 12:44:31       16 #> 75: 2025-05-19 12:44:31       16 #> 76: 2025-05-19 12:44:31       16 #> 77: 2025-05-19 12:44:31       16 #> 78: 2025-05-19 12:44:31       17 #> 79: 2025-05-19 12:44:31       18 #> 80: 2025-05-19 12:44:31       19 #> 81: 2025-05-19 12:44:31       19 #> 82: 2025-05-19 12:44:31       19 #> 83: 2025-05-19 12:44:31       20 #> 84: 2025-05-19 12:44:31       21 #> 85: 2025-05-19 12:44:31       22 #> 86: 2025-05-19 12:44:31       22 #> 87: 2025-05-19 12:44:31       23 #> 88: 2025-05-19 12:44:31       24 #> 89: 2025-05-19 12:44:31       25 #> 90: 2025-05-19 12:44:32       26 #> 91: 2025-05-19 12:44:32       27 #> 92: 2025-05-19 12:44:32       28 #> 93: 2025-05-19 12:44:32       29 #> 94: 2025-05-19 12:44:32       29 #> 95: 2025-05-19 12:44:32       29 #> 96: 2025-05-19 12:44:32       29 #>               timestamp batch_nr # }"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Local Search — mlr_optimizers_local_search","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"OptimizerBatchLocalSearch class implements simple Local Search. Local Search starts determining n_initial_points initial best points present Archive OptimInstance. fewer points n_initial_points present, additional initial_random_sample_size points sampled uniformly random evaluated best n_initial_points initial points determined. iteration, n_initial_points initial best points, neighbors_per_point neighbors generated local mutation. Local mutation generates neighbor sampling single parameter mutated proceeds follows: Double parameters (paradox::p_dbl()) mutated via Gaussian mutation (prior standardization [0, 1] retransformation mutation). Integer parameters (paradox::p_int()) undergo mutation rounded closest integer mutation. Categorical parameters (paradox::p_fct() paradox::p_lgl()) mutated via uniform mutation. Note parameters conditioned (.e., parents paradox::Condition, see dependencies search space) mutated.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"local_search\") opt(\"local_search\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"n_initial_points integer(1) Size set initial best points used starting points Local Search. Default 10. initial_random_sample_size integer(1) Number points sampled uniformly random best n_initial_points initial points determined, fewer points n_initial_points present Archive OptimInstance. Default 100. neighbors_per_point integer(1) Number neighboring points generate n_initial_points best starting points iteration. Default 100. mutation_sd numeric(1) Standard deviation used create neighbors mutation numeric parameters standardized [0, 1] scale. Default 0.1.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"archive","dir":"Reference","previous_headings":"","what":"Archive","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"Archive holds following additional column specific algorithm: .point_id (integer(1)) id (1, ..., n_initial_points) indicating n_initial_points best points evaluated point generated .","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchLocalSearch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"OptimizerBatchLocalSearch$new() OptimizerBatchLocalSearch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"","code":"OptimizerBatchLocalSearch$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"","code":"OptimizerBatchLocalSearch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_local_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Local Search — mlr_optimizers_local_search","text":"","code":"search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))  codomain = ps(y = p_dbl(tags = \"minimize\"))  objective_function = function(xs) {   list(y = as.numeric(xs)^2) }  objective = ObjectiveRFun$new(  fun = objective_function,  domain = domain,  codomain = codomain)  instance = OptimInstanceBatchSingleCrit$new(  objective = objective,  search_space = search_space,  terminator = trm(\"evals\", n_evals = 100))  # evaluate an initial sample of 10 points uniformly at random # choose the best 3 points as the initial points # for each of these points generate 10 neighbors # repeat this process optimizer = opt(\"local_search\",   n_initial_points = 3,   initial_random_sample_size = 10,   neighbors_per_point = 10)  # modifies the instance by reference optimizer$optimize(instance) #>               x  x_domain            y #>           <num>    <list>        <num> #> 1: 0.0004821201 <list[1]> 2.324398e-07  # returns best scoring evaluation instance$result #>               x  x_domain            y #>           <num>    <list>        <num> #> 1: 0.0004821201 <list[1]> 2.324398e-07  # allows access of data.table of full path of all evaluations as.data.table(instance$archive$data) #>                  x            y  x_domain           timestamp batch_nr #>              <num>        <num>    <list>              <POSc>    <int> #>   1: -0.2862196355 8.192168e-02 <list[1]> 2025-05-19 12:44:34        1 #>   2: -0.3226344651 1.040930e-01 <list[1]> 2025-05-19 12:44:34        1 #>   3: -0.8750307984 7.656789e-01 <list[1]> 2025-05-19 12:44:34        1 #>   4:  0.3489210065 1.217459e-01 <list[1]> 2025-05-19 12:44:34        1 #>   5:  0.3738443493 1.397596e-01 <list[1]> 2025-05-19 12:44:34        1 #>   6: -0.3918538294 1.535494e-01 <list[1]> 2025-05-19 12:44:34        1 #>   7:  0.2648870423 7.016515e-02 <list[1]> 2025-05-19 12:44:34        1 #>   8:  0.2479003915 6.145460e-02 <list[1]> 2025-05-19 12:44:34        1 #>   9: -0.2509884080 6.299518e-02 <list[1]> 2025-05-19 12:44:34        1 #>  10:  0.3780645211 1.429328e-01 <list[1]> 2025-05-19 12:44:34        1 #>  11:  0.3072822449 9.442238e-02 <list[1]> 2025-05-19 12:44:34        2 #>  12:  0.1141403980 1.302803e-02 <list[1]> 2025-05-19 12:44:34        2 #>  13:  0.1334439998 1.780730e-02 <list[1]> 2025-05-19 12:44:34        2 #>  14:  0.1739072585 3.024373e-02 <list[1]> 2025-05-19 12:44:34        2 #>  15:  0.2511082088 6.305533e-02 <list[1]> 2025-05-19 12:44:34        2 #>  16:  0.3361524122 1.129984e-01 <list[1]> 2025-05-19 12:44:34        2 #>  17:  0.5959234137 3.551247e-01 <list[1]> 2025-05-19 12:44:34        2 #>  18:  0.5372080472 2.885925e-01 <list[1]> 2025-05-19 12:44:34        2 #>  19:  0.3925868772 1.541245e-01 <list[1]> 2025-05-19 12:44:34        2 #>  20:  0.3481740847 1.212252e-01 <list[1]> 2025-05-19 12:44:34        2 #>  21: -0.3872758412 1.499826e-01 <list[1]> 2025-05-19 12:44:34        2 #>  22: -0.0536161852 2.874695e-03 <list[1]> 2025-05-19 12:44:34        2 #>  23: -0.3953065711 1.562673e-01 <list[1]> 2025-05-19 12:44:34        2 #>  24: -0.4179312247 1.746665e-01 <list[1]> 2025-05-19 12:44:34        2 #>  25: -0.3219496145 1.036516e-01 <list[1]> 2025-05-19 12:44:34        2 #>  26: -0.4718802959 2.226710e-01 <list[1]> 2025-05-19 12:44:34        2 #>  27: -0.4145701989 1.718684e-01 <list[1]> 2025-05-19 12:44:34        2 #>  28: -0.1652955353 2.732261e-02 <list[1]> 2025-05-19 12:44:34        2 #>  29: -0.2256128982 5.090118e-02 <list[1]> 2025-05-19 12:44:34        2 #>  30: -0.5136306058 2.638164e-01 <list[1]> 2025-05-19 12:44:34        2 #>  31:  0.1630922373 2.659908e-02 <list[1]> 2025-05-19 12:44:34        2 #>  32:  0.1563171708 2.443506e-02 <list[1]> 2025-05-19 12:44:34        2 #>  33:  0.3592767182 1.290798e-01 <list[1]> 2025-05-19 12:44:34        2 #>  34: -0.0234891051 5.517381e-04 <list[1]> 2025-05-19 12:44:34        2 #>  35:  0.1228512936 1.509244e-02 <list[1]> 2025-05-19 12:44:34        2 #>  36:  0.3526240933 1.243438e-01 <list[1]> 2025-05-19 12:44:34        2 #>  37:  0.4864711487 2.366542e-01 <list[1]> 2025-05-19 12:44:34        2 #>  38:  0.3667525786 1.345075e-01 <list[1]> 2025-05-19 12:44:34        2 #>  39:  0.5788993683 3.351245e-01 <list[1]> 2025-05-19 12:44:34        2 #>  40:  0.2681552970 7.190726e-02 <list[1]> 2025-05-19 12:44:34        2 #>  41:  0.3071735548 9.435559e-02 <list[1]> 2025-05-19 12:44:34        3 #>  42:  0.0219546074 4.820048e-04 <list[1]> 2025-05-19 12:44:34        3 #>  43:  0.1261531417 1.591462e-02 <list[1]> 2025-05-19 12:44:34        3 #>  44:  0.1438712223 2.069893e-02 <list[1]> 2025-05-19 12:44:34        3 #>  45: -0.0381724032 1.457132e-03 <list[1]> 2025-05-19 12:44:34        3 #>  46:  0.1080890091 1.168323e-02 <list[1]> 2025-05-19 12:44:34        3 #>  47:  0.4263554169 1.817789e-01 <list[1]> 2025-05-19 12:44:34        3 #>  48:  0.2469102932 6.096469e-02 <list[1]> 2025-05-19 12:44:34        3 #>  49:  0.0486310550 2.364980e-03 <list[1]> 2025-05-19 12:44:34        3 #>  50:  0.0669627984 4.484016e-03 <list[1]> 2025-05-19 12:44:34        3 #>  51: -0.2422548326 5.868740e-02 <list[1]> 2025-05-19 12:44:34        3 #>  52: -0.1607017926 2.582507e-02 <list[1]> 2025-05-19 12:44:34        3 #>  53: -0.0625999786 3.918757e-03 <list[1]> 2025-05-19 12:44:34        3 #>  54: -0.2160076878 4.665932e-02 <list[1]> 2025-05-19 12:44:34        3 #>  55: -0.1310252016 1.716760e-02 <list[1]> 2025-05-19 12:44:34        3 #>  56: -0.2740800894 7.511990e-02 <list[1]> 2025-05-19 12:44:34        3 #>  57:  0.1169455658 1.367627e-02 <list[1]> 2025-05-19 12:44:34        3 #>  58: -0.2757560981 7.604143e-02 <list[1]> 2025-05-19 12:44:34        3 #>  59: -0.3298046924 1.087711e-01 <list[1]> 2025-05-19 12:44:34        3 #>  60: -0.2214927204 4.905903e-02 <list[1]> 2025-05-19 12:44:34        3 #>  61:  0.0732903803 5.371480e-03 <list[1]> 2025-05-19 12:44:34        3 #>  62: -0.0564548654 3.187152e-03 <list[1]> 2025-05-19 12:44:34        3 #>  63:  0.0004821201 2.324398e-07 <list[1]> 2025-05-19 12:44:34        3 #>  64:  0.0362206655 1.311937e-03 <list[1]> 2025-05-19 12:44:34        3 #>  65:  0.1368125157 1.871766e-02 <list[1]> 2025-05-19 12:44:34        3 #>  66:  0.1799713753 3.238970e-02 <list[1]> 2025-05-19 12:44:34        3 #>  67: -0.0920765680 8.478094e-03 <list[1]> 2025-05-19 12:44:34        3 #>  68: -0.1798117442 3.233226e-02 <list[1]> 2025-05-19 12:44:34        3 #>  69:  0.1774386618 3.148448e-02 <list[1]> 2025-05-19 12:44:34        3 #>  70:  0.0812111811 6.595256e-03 <list[1]> 2025-05-19 12:44:34        3 #>  71: -0.1109745619 1.231535e-02 <list[1]> 2025-05-19 12:44:34        4 #>  72: -0.3459158753 1.196578e-01 <list[1]> 2025-05-19 12:44:34        4 #>  73:  0.3044846879 9.271093e-02 <list[1]> 2025-05-19 12:44:34        4 #>  74:  0.0507094478 2.571448e-03 <list[1]> 2025-05-19 12:44:34        4 #>  75: -0.2681684435 7.191431e-02 <list[1]> 2025-05-19 12:44:34        4 #>  76:  0.2839277029 8.061494e-02 <list[1]> 2025-05-19 12:44:34        4 #>  77:  0.1224252806 1.498795e-02 <list[1]> 2025-05-19 12:44:34        4 #>  78:  0.3467935124 1.202657e-01 <list[1]> 2025-05-19 12:44:34        4 #>  79: -0.0532497042 2.835531e-03 <list[1]> 2025-05-19 12:44:34        4 #>  80:  0.2447980760 5.992610e-02 <list[1]> 2025-05-19 12:44:34        4 #>  81:  0.1039801204 1.081187e-02 <list[1]> 2025-05-19 12:44:34        4 #>  82: -0.1399248057 1.957895e-02 <list[1]> 2025-05-19 12:44:34        4 #>  83:  0.0613406337 3.762673e-03 <list[1]> 2025-05-19 12:44:34        4 #>  84:  0.0381579495 1.456029e-03 <list[1]> 2025-05-19 12:44:34        4 #>  85: -0.0432787770 1.873053e-03 <list[1]> 2025-05-19 12:44:34        4 #>  86: -0.2302800388 5.302890e-02 <list[1]> 2025-05-19 12:44:34        4 #>  87:  0.0473066501 2.237919e-03 <list[1]> 2025-05-19 12:44:34        4 #>  88: -0.2115517296 4.475413e-02 <list[1]> 2025-05-19 12:44:34        4 #>  89:  0.1149008029 1.320219e-02 <list[1]> 2025-05-19 12:44:34        4 #>  90:  0.0248885281 6.194388e-04 <list[1]> 2025-05-19 12:44:34        4 #>  91: -0.0016913609 2.860702e-06 <list[1]> 2025-05-19 12:44:34        4 #>  92: -0.0054919988 3.016205e-05 <list[1]> 2025-05-19 12:44:34        4 #>  93:  0.0358900935 1.288099e-03 <list[1]> 2025-05-19 12:44:34        4 #>  94:  0.4406226191 1.941483e-01 <list[1]> 2025-05-19 12:44:34        4 #>  95: -0.1011783299 1.023705e-02 <list[1]> 2025-05-19 12:44:34        4 #>  96: -0.0185930256 3.457006e-04 <list[1]> 2025-05-19 12:44:34        4 #>  97:  0.0282251899 7.966613e-04 <list[1]> 2025-05-19 12:44:34        4 #>  98: -0.0390807001 1.527301e-03 <list[1]> 2025-05-19 12:44:34        4 #>  99: -0.0083025163 6.893178e-05 <list[1]> 2025-05-19 12:44:34        4 #> 100:  0.1810357219 3.277393e-02 <list[1]> 2025-05-19 12:44:34        4 #>                  x            y  x_domain           timestamp batch_nr #>      .point_id #>          <int> #>   1:        NA #>   2:        NA #>   3:        NA #>   4:        NA #>   5:        NA #>   6:        NA #>   7:        NA #>   8:        NA #>   9:        NA #>  10:        NA #>  11:         1 #>  12:         1 #>  13:         1 #>  14:         1 #>  15:         1 #>  16:         1 #>  17:         1 #>  18:         1 #>  19:         1 #>  20:         1 #>  21:         2 #>  22:         2 #>  23:         2 #>  24:         2 #>  25:         2 #>  26:         2 #>  27:         2 #>  28:         2 #>  29:         2 #>  30:         2 #>  31:         3 #>  32:         3 #>  33:         3 #>  34:         3 #>  35:         3 #>  36:         3 #>  37:         3 #>  38:         3 #>  39:         3 #>  40:         3 #>  41:         1 #>  42:         1 #>  43:         1 #>  44:         1 #>  45:         1 #>  46:         1 #>  47:         1 #>  48:         1 #>  49:         1 #>  50:         1 #>  51:         2 #>  52:         2 #>  53:         2 #>  54:         2 #>  55:         2 #>  56:         2 #>  57:         2 #>  58:         2 #>  59:         2 #>  60:         2 #>  61:         3 #>  62:         3 #>  63:         3 #>  64:         3 #>  65:         3 #>  66:         3 #>  67:         3 #>  68:         3 #>  69:         3 #>  70:         3 #>  71:         1 #>  72:         1 #>  73:         1 #>  74:         1 #>  75:         1 #>  76:         1 #>  77:         1 #>  78:         1 #>  79:         1 #>  80:         1 #>  81:         2 #>  82:         2 #>  83:         2 #>  84:         2 #>  85:         2 #>  86:         2 #>  87:         2 #>  88:         2 #>  89:         2 #>  90:         2 #>  91:         3 #>  92:         3 #>  93:         3 #>  94:         3 #>  95:         3 #>  96:         3 #>  97:         3 #>  98:         3 #>  99:         3 #> 100:         3 #>      .point_id"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"OptimizerBatchNLoptr class implements non-linear optimization. Calls nloptr::nloptr() package nloptr.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"Johnson, G S (2020). “NLopt nonlinear-optimization package.” https://github.com/stevengj/nlopt.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"algorithm character(1) eval_g_ineq function() xtol_rel numeric(1) xtol_abs numeric(1) ftol_rel numeric(1) ftol_abs numeric(1) start_values character(1) Create random start values based center search space? latter case, center parameters trafo applied. approximate_eval_grad_f logical(1) gradients numerically approximated via finite differences (nloptr::nl.grad). required certain algorithms. Note function evaluations required numerical gradient approximation logged usual treated differently regular function evaluations , e.g., Terminators. meaning control parameters, see nloptr::nloptr() nloptr::nloptr.print.options(). termination conditions stopval, maxtime maxeval nloptr::nloptr() deactivated replaced Terminator subclasses. x function value tolerance termination conditions (xtol_rel = 10^-4, xtol_abs = rep(0.0, length(x0)), ftol_rel = 0.0 ftol_abs = 0.0) still available implemented package defaults. deactivate conditions, set -1.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchNLoptr","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"OptimizerBatchNLoptr$new() OptimizerBatchNLoptr$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"","code":"OptimizerBatchNLoptr$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"","code":"OptimizerBatchNLoptr$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_nloptr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Non-linear Optimization — mlr_optimizers_nloptr","text":"","code":"# \\donttest{ if (requireNamespace(\"nloptr\")) {    search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))    codomain = ps(y = p_dbl(tags = \"minimize\"))    objective_function = function(xs) {     list(y = as.numeric(xs)^2)   }    objective = ObjectiveRFun$new(     fun = objective_function,     domain = domain,     codomain = codomain)     # We use the internal termination criterion xtol_rel   terminator = trm(\"none\")   instance = OptimInstanceBatchSingleCrit$new(     objective = objective,     search_space = search_space,     terminator = terminator)     optimizer = opt(\"nloptr\", algorithm = \"NLOPT_LN_BOBYQA\")    # Modifies the instance by reference   optimizer$optimize(instance)    # Returns best scoring evaluation   instance$result    # Allows access of data.table of full path of all evaluations   as.data.table(instance$archive) } #>               x           y           timestamp batch_nr  x_domain_x #>           <num>       <num>              <POSc>    <int>       <num> #>  1:  0.04727466 0.002234893 2025-05-19 12:44:35        1  0.04727466 #>  2:  0.04727466 0.002234893 2025-05-19 12:44:35        2  0.04727466 #>  3:  0.04727466 0.002234893 2025-05-19 12:44:35        3  0.04727466 #>  4:  0.54727466 0.299509549 2025-05-19 12:44:35        4  0.54727466 #>  5: -0.45272534 0.204960237 2025-05-19 12:44:35        5 -0.45272534 #>  6:  0.00000000 0.000000000 2025-05-19 12:44:35        6  0.00000000 #>  7:  0.05000000 0.002500000 2025-05-19 12:44:35        7  0.05000000 #>  8: -0.00500000 0.000025000 2025-05-19 12:44:35        8 -0.00500000 #>  9:  0.00050000 0.000000250 2025-05-19 12:44:35        9  0.00050000 #> 10: -0.00050000 0.000000250 2025-05-19 12:44:35       10 -0.00050000 #> 11:  0.00000000 0.000000000 2025-05-19 12:44:35       11  0.00000000 # }"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization via Random Search — mlr_optimizers_random_search","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"OptimizerBatchRandomSearch class implements simple Random Search. order support general termination criteria parallelization, evaluate points batch-fashion size batch_size. Larger batches mean can parallelize , smaller batches imply fine-grained checking termination criteria.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"Bergstra J, Bengio Y (2012). “Random Search Hyper-Parameter Optimization.” Journal Machine Learning Research, 13(10), 281–305. https://jmlr.csail.mit.edu/papers/v13/bergstra12a.html.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"Optimizer can instantiated via dictionary mlr_optimizers associated sugar function opt():","code":"mlr_optimizers$get(\"random_search\") opt(\"random_search\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"batch_size integer(1) Maximum number points try batch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"progress-bars","dir":"Reference","previous_headings":"","what":"Progress Bars","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"$optimize() supports progress bars via package progressr combined Terminator. Simply wrap function progressr::with_progress() enable . recommend use package progress backend; enable progressr::handlers(\"progress\").","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"bbotk::Optimizer -> bbotk::OptimizerBatch -> OptimizerBatchRandomSearch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"bbotk::Optimizer$format() bbotk::Optimizer$help() bbotk::Optimizer$print() bbotk::OptimizerBatch$optimize()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"OptimizerBatchRandomSearch$new() OptimizerBatchRandomSearch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"","code":"OptimizerBatchRandomSearch$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"","code":"OptimizerBatchRandomSearch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_optimizers_random_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization via Random Search — mlr_optimizers_random_search","text":"","code":"search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))  codomain = ps(y = p_dbl(tags = \"minimize\"))  objective_function = function(xs) {   list(y = as.numeric(xs)^2) }  objective = ObjectiveRFun$new(  fun = objective_function,  domain = domain,  codomain = codomain)  instance = OptimInstanceBatchSingleCrit$new(  objective = objective,  search_space = search_space,  terminator = trm(\"evals\", n_evals = 10))   optimizer = opt(\"random_search\")  # modifies the instance by reference optimizer$optimize(instance) #>             x  x_domain          y #>         <num>    <list>      <num> #> 1: 0.01732109 <list[1]> 0.00030002  # returns best scoring evaluation instance$result #>             x  x_domain          y #>         <num>    <list>      <num> #> 1: 0.01732109 <list[1]> 0.00030002  # allows access of data.table of full path of all evaluations as.data.table(instance$archive$data) #>               x           y  x_domain           timestamp batch_nr #>           <num>       <num>    <list>              <POSc>    <int> #>  1:  0.08088632 0.006542596 <list[1]> 2025-05-19 12:44:36        1 #>  2:  0.25353401 0.064279492 <list[1]> 2025-05-19 12:44:36        2 #>  3:  0.89142133 0.794631994 <list[1]> 2025-05-19 12:44:36        3 #>  4: -0.30020786 0.090124760 <list[1]> 2025-05-19 12:44:36        4 #>  5:  0.33042004 0.109177406 <list[1]> 2025-05-19 12:44:36        5 #>  6:  0.90841513 0.825218046 <list[1]> 2025-05-19 12:44:36        6 #>  7: -0.31388190 0.098521845 <list[1]> 2025-05-19 12:44:36        7 #>  8:  0.01732109 0.000300020 <list[1]> 2025-05-19 12:44:36        8 #>  9: -0.10746871 0.011549523 <list[1]> 2025-05-19 12:44:36        9 #> 10: -0.42470099 0.180370932 <list[1]> 2025-05-19 12:44:36       10"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary of Terminators — mlr_terminators","title":"Dictionary of Terminators — mlr_terminators","text":"simple mlr3misc::Dictionary storing objects class Terminator. terminator associated help page, see mlr_terminators_[id]. dictionary can get populated additional terminators add-packages. convenient way retrieve construct terminator, see trm()/trms().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary of Terminators — mlr_terminators","text":"R6::R6Class object inheriting mlr3misc::Dictionary.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Dictionary of Terminators — mlr_terminators","text":"See mlr3misc::Dictionary.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Dictionary of Terminators — mlr_terminators","text":".data.table(dict, ..., objects = FALSE)mlr3misc::Dictionary -> data.table::data.table() Returns data.table::data.table() fields \"key\", \"label\", \"properties\" \"unit\" columns. objects set TRUE, constructed objects returned list column named object.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dictionary of Terminators — mlr_terminators","text":"","code":"as.data.table(mlr_terminators) #> Key: <key> #>                       key                  label             properties #>                    <char>                 <char>                 <list> #> 1:             clock_time             Clock Time single-crit,multi-crit #> 2:                  combo            Combination single-crit,multi-crit #> 3:                  evals   Number of Evaluation single-crit,multi-crit #> 4:                   none                   None single-crit,multi-crit #> 5:           perf_reached      Performance Level            single-crit #> 6:               run_time               Run Time single-crit,multi-crit #> 7:             stagnation             Stagnation            single-crit #> 8:       stagnation_batch       Stagnation Batch            single-crit #> 9: stagnation_hypervolume Stagnation Hypervolume             multi-crit #>           unit #>         <char> #> 1:     seconds #> 2:     percent #> 3: evaluations #> 4:     percent #> 5:     percent #> 6:     seconds #> 7:     percent #> 8:     percent #> 9:     percent mlr_terminators$get(\"evals\") #>  #> ── <TerminatorEvals> - Number of Evaluation ──────────────────────────────────── #> • Parameters: n_evals=100, k=0 #> • Terminators: trm(\"evals\", n_evals = 10) #>  #> ── <TerminatorEvals> - Number of Evaluation ──────────────────────────────────── #> • Parameters: n_evals=10, k=0 #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Clock Time Terminator — mlr_terminators_clock_time","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"Class terminate optimization fixed time point reached (reported Sys.time()).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"clock_time\") trm(\"clock_time\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"stop_time POSIXct(1) Terminator stops point time.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"bbotk::Terminator -> TerminatorClockTime","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"TerminatorClockTime$new() TerminatorClockTime$is_terminated() TerminatorClockTime$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"","code":"TerminatorClockTime$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"","code":"TerminatorClockTime$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"","code":"TerminatorClockTime$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_clock_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clock Time Terminator — mlr_terminators_clock_time","text":"","code":"stop_time = as.POSIXct(\"2030-01-01 00:00:00\") trm(\"clock_time\", stop_time = stop_time) #>  #> ── <TerminatorClockTime> - Clock Time ────────────────────────────────────────── #> • Parameters: stop_time=<POSIXct> #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Terminators — mlr_terminators_combo","title":"Combine Terminators — mlr_terminators_combo","text":"class takes multiple Terminators terminates soon one included terminators positive.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Combine Terminators — mlr_terminators_combo","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"combo\") trm(\"combo\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Combine Terminators — mlr_terminators_combo","text":"logical(1) Terminate iff included terminator positive? (). Default TRUE.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Combine Terminators — mlr_terminators_combo","text":"bbotk::Terminator -> TerminatorCombo","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Combine Terminators — mlr_terminators_combo","text":"terminators (list()) List objects class Terminator.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Combine Terminators — mlr_terminators_combo","text":"bbotk::Terminator$format() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Combine Terminators — mlr_terminators_combo","text":"TerminatorCombo$new() TerminatorCombo$is_terminated() TerminatorCombo$print() TerminatorCombo$remaining_time() TerminatorCombo$status_long() TerminatorCombo$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Combine Terminators — mlr_terminators_combo","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Terminators — mlr_terminators_combo","text":"","code":"TerminatorCombo$new(terminators = list(TerminatorNone$new()))"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Terminators — mlr_terminators_combo","text":"terminators (list()) List objects class Terminator.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Combine Terminators — mlr_terminators_combo","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Terminators — mlr_terminators_combo","text":"","code":"TerminatorCombo$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Terminators — mlr_terminators_combo","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Combine Terminators — mlr_terminators_combo","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Combine Terminators — mlr_terminators_combo","text":"Printer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Terminators — mlr_terminators_combo","text":"","code":"TerminatorCombo$print(...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Terminators — mlr_terminators_combo","text":"... (ignored).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"method-remaining-time-","dir":"Reference","previous_headings":"","what":"Method remaining_time()","title":"Combine Terminators — mlr_terminators_combo","text":"Returns remaining runtime seconds. = TRUE, remaining runtime determined time-based terminator shortest time remaining. non-time-based terminators used = FALSE, remaining runtime always Inf.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Terminators — mlr_terminators_combo","text":"","code":"TerminatorCombo$remaining_time(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Terminators — mlr_terminators_combo","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Combine Terminators — mlr_terminators_combo","text":"integer(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"method-status-long-","dir":"Reference","previous_headings":"","what":"Method status_long()","title":"Combine Terminators — mlr_terminators_combo","text":"Returns max_steps current_steps terminator.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Terminators — mlr_terminators_combo","text":"","code":"TerminatorCombo$status_long(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Terminators — mlr_terminators_combo","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Combine Terminators — mlr_terminators_combo","text":"data.table::data.table.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Combine Terminators — mlr_terminators_combo","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Terminators — mlr_terminators_combo","text":"","code":"TerminatorCombo$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Terminators — mlr_terminators_combo","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_combo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Terminators — mlr_terminators_combo","text":"","code":"trm(\"combo\",   list(trm(\"clock_time\", stop_time = Sys.time() + 60),     trm(\"evals\", n_evals = 10)), any = FALSE ) #>  #> ── <TerminatorCombo> - Combination ───────────────────────────────────────────── #> • Parameters: any=FALSE #> • Terminators: <TerminatorClockTime> and <TerminatorEvals> #> • Terminators: <TerminatorClockTime> and <TerminatorEvals>"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Terminator that stops after a number of evaluations — mlr_terminators_evals","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"Class terminate optimization depending number evaluations. evaluation defined one resampling parameter value. total number evaluations \\(B\\) defined $$    B = \\mathtt{n\\_evals} + \\mathtt{k} * D $$ \\(D\\) dimension search space.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"evals\") trm(\"evals\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"n_evals integer(1) See formula . Default 100. k integer(1) See formula . Default 0.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"bbotk::Terminator -> TerminatorEvals","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"TerminatorEvals$new() TerminatorEvals$is_terminated() TerminatorEvals$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"","code":"TerminatorEvals$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"","code":"TerminatorEvals$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"","code":"TerminatorEvals$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_evals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Terminator that stops after a number of evaluations — mlr_terminators_evals","text":"","code":"TerminatorEvals$new() #>  #> ── <TerminatorEvals> - Number of Evaluation ──────────────────────────────────── #> • Parameters: n_evals=100, k=0 #> • Terminators:  # 5 evaluations in total trm(\"evals\", n_evals = 5) #>  #> ── <TerminatorEvals> - Number of Evaluation ──────────────────────────────────── #> • Parameters: n_evals=5, k=0 #> • Terminators:  # 3 * [dimension of search space] evaluations in total trm(\"evals\", n_evals = 0, k = 3) #>  #> ── <TerminatorEvals> - Number of Evaluation ──────────────────────────────────── #> • Parameters: n_evals=0, k=3 #> • Terminators:  # (3 * [dimension of search space] + 1) evaluations in total trm(\"evals\", n_evals = 1, k = 3) #>  #> ── <TerminatorEvals> - Number of Evaluation ──────────────────────────────────── #> • Parameters: n_evals=1, k=3 #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":null,"dir":"Reference","previous_headings":"","what":"None Terminator — mlr_terminators_none","title":"None Terminator — mlr_terminators_none","text":"Mainly useful optimization algorithms stopping inherently controlled algorithm (e.g. OptimizerBatchGridSearch).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"None Terminator — mlr_terminators_none","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"none\") trm(\"none\")"},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"None Terminator — mlr_terminators_none","text":"bbotk::Terminator -> TerminatorNone","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"None Terminator — mlr_terminators_none","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"None Terminator — mlr_terminators_none","text":"TerminatorNone$new() TerminatorNone$is_terminated() TerminatorNone$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"None Terminator — mlr_terminators_none","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"None Terminator — mlr_terminators_none","text":"","code":"TerminatorNone$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"None Terminator — mlr_terminators_none","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"None Terminator — mlr_terminators_none","text":"","code":"TerminatorNone$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"None Terminator — mlr_terminators_none","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"None Terminator — mlr_terminators_none","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"None Terminator — mlr_terminators_none","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"None Terminator — mlr_terminators_none","text":"","code":"TerminatorNone$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_none.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"None Terminator — mlr_terminators_none","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":null,"dir":"Reference","previous_headings":"","what":"Performance Level Terminator — mlr_terminators_perf_reached","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"Class terminate optimization performance level hit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"perf_reached\") trm(\"perf_reached\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"level numeric(1) Performance level needs reached. Default 0. Terminates performance exceeds (respective measure maximized) falls (respective measure minimized) value.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"bbotk::Terminator -> TerminatorPerfReached","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"TerminatorPerfReached$new() TerminatorPerfReached$is_terminated() TerminatorPerfReached$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"","code":"TerminatorPerfReached$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"","code":"TerminatorPerfReached$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"","code":"TerminatorPerfReached$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_perf_reached.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performance Level Terminator — mlr_terminators_perf_reached","text":"","code":"TerminatorPerfReached$new() #>  #> ── <TerminatorPerfReached> - Performance Level ───────────────────────────────── #> • Parameters: level=0.1 #> • Terminators: trm(\"perf_reached\") #>  #> ── <TerminatorPerfReached> - Performance Level ───────────────────────────────── #> • Parameters: level=0.1 #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Time Terminator — mlr_terminators_run_time","title":"Run Time Terminator — mlr_terminators_run_time","text":"Class terminate optimization optimization process took number seconds clock.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run Time Terminator — mlr_terminators_run_time","text":"terminator works archive$start_time set. usually done Optimizer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Run Time Terminator — mlr_terminators_run_time","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"run_time\") trm(\"run_time\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Run Time Terminator — mlr_terminators_run_time","text":"secs numeric(1) Maximum allowed time, seconds, default 100.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Run Time Terminator — mlr_terminators_run_time","text":"bbotk::Terminator -> TerminatorRunTime","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Run Time Terminator — mlr_terminators_run_time","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Run Time Terminator — mlr_terminators_run_time","text":"TerminatorRunTime$new() TerminatorRunTime$is_terminated() TerminatorRunTime$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Run Time Terminator — mlr_terminators_run_time","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Time Terminator — mlr_terminators_run_time","text":"","code":"TerminatorRunTime$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Run Time Terminator — mlr_terminators_run_time","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Time Terminator — mlr_terminators_run_time","text":"","code":"TerminatorRunTime$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Time Terminator — mlr_terminators_run_time","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Run Time Terminator — mlr_terminators_run_time","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Run Time Terminator — mlr_terminators_run_time","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Time Terminator — mlr_terminators_run_time","text":"","code":"TerminatorRunTime$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Time Terminator — mlr_terminators_run_time","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_run_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Time Terminator — mlr_terminators_run_time","text":"","code":"trm(\"run_time\", secs = 1800) #>  #> ── <TerminatorRunTime> - Run Time ────────────────────────────────────────────── #> • Parameters: secs=1800 #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":null,"dir":"Reference","previous_headings":"","what":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"Class terminate optimization performance stagnates, .e. improve threshold last iters iterations.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"stagnation\") trm(\"stagnation\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"iters integer(1) Number iterations evaluate performance improvement , default 10. threshold numeric(1) improvement less threshold, optimization stopped, default 0.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"bbotk::Terminator -> TerminatorStagnation","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"TerminatorStagnation$new() TerminatorStagnation$is_terminated() TerminatorStagnation$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"","code":"TerminatorStagnation$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"","code":"TerminatorStagnation$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"","code":"TerminatorStagnation$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation","text":"","code":"TerminatorStagnation$new() #>  #> ── <TerminatorStagnation> - Stagnation ───────────────────────────────────────── #> • Parameters: iters=10, threshold=0 #> • Terminators: trm(\"stagnation\", iters = 5, threshold = 1e-5) #>  #> ── <TerminatorStagnation> - Stagnation ───────────────────────────────────────── #> • Parameters: iters=5, threshold=1e-05 #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"Class terminate optimization performance stagnates, .e. improve threshold last n batches.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"stagnation_batch\") trm(\"stagnation_batch\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"n integer(1) Number batches evaluate performance improvement , default 1. threshold numeric(1) improvement less threshold, optimization stopped, default 0.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"bbotk::Terminator -> TerminatorStagnationBatch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"TerminatorStagnationBatch$new() TerminatorStagnationBatch$is_terminated() TerminatorStagnationBatch$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"","code":"TerminatorStagnationBatch$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"TRUE iff termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"","code":"TerminatorStagnationBatch$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"","code":"TerminatorStagnationBatch$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Terminator that stops when optimization does not improve — mlr_terminators_stagnation_batch","text":"","code":"TerminatorStagnationBatch$new() #>  #> ── <TerminatorStagnationBatch> - Stagnation Batch ────────────────────────────── #> • Parameters: n=1, threshold=0 #> • Terminators: trm(\"stagnation_batch\", n = 1, threshold = 1e-5) #>  #> ── <TerminatorStagnationBatch> - Stagnation Batch ────────────────────────────── #> • Parameters: n=1, threshold=1e-05 #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":null,"dir":"Reference","previous_headings":"","what":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"Class terminate optimization hypervolume stagnates, .e. improve threshold last iters iterations.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"Terminator can instantiated via dictionary mlr_terminators associated sugar function trm():","code":"mlr_terminators$get(\"stagnation_hypervolume\") trm(\"stagnation_hypervolume\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"iters integer(1) Number iterations evaluate performance improvement , default 10. threshold numeric(1) improvement less threshold, optimization stopped, default 0.","code":""},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"bbotk::Terminator -> TerminatorStagnationHypervolume","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"bbotk::Terminator$format() bbotk::Terminator$print() bbotk::Terminator$remaining_time() bbotk::Terminator$status()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"TerminatorStagnationHypervolume$new() TerminatorStagnationHypervolume$is_terminated() TerminatorStagnationHypervolume$clone()","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"Creates new instance R6 class.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"","code":"TerminatorStagnationHypervolume$new()"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"method-is-terminated-","dir":"Reference","previous_headings":"","what":"Method is_terminated()","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"TRUE termination criterion positive, FALSE otherwise.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"","code":"TerminatorStagnationHypervolume$is_terminated(archive)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"archive (Archive).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"logical(1).","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"objects class cloneable method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"","code":"TerminatorStagnationHypervolume$clone(deep = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"deep Whether make deep clone.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/mlr_terminators_stagnation_hypervolume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stagnation Hypervolume Terminator — mlr_terminators_stagnation_hypervolume","text":"","code":"TerminatorStagnation$new() #>  #> ── <TerminatorStagnation> - Stagnation ───────────────────────────────────────── #> • Parameters: iters=10, threshold=0 #> • Terminators: trm(\"stagnation\", iters = 5, threshold = 1e-5) #>  #> ── <TerminatorStagnation> - Stagnation ───────────────────────────────────────── #> • Parameters: iters=5, threshold=1e-05 #> • Terminators:"},{"path":"https://bbotk.mlr-org.com/dev/reference/nds_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Best points w.r.t. non dominated sorting with hypervolume contribution. — nds_selection","title":"Best points w.r.t. non dominated sorting with hypervolume contribution. — nds_selection","text":"Select best subset points non dominated sorting hypervolume contribution tie breaking. Works arbitrary dimension size two higher.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/nds_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Best points w.r.t. non dominated sorting with hypervolume contribution. — nds_selection","text":"","code":"nds_selection(points, n_select, ref_point = NULL, minimize = TRUE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/nds_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Best points w.r.t. non dominated sorting with hypervolume contribution. — nds_selection","text":"points (matrix()) Numeric matrix column corresponding point n_select (integer(1L)) Amount points select. ref_point (numeric()) Reference point hypervolume. minimize ('logical()') ranking based minimization? Can specified dimension . Default TRUE dimension.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/nds_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Best points w.r.t. non dominated sorting with hypervolume contribution. — nds_selection","text":"Vector indices selected points","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/oi.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Optimization Instance Construction — oi","title":"Syntactic Sugar for Optimization Instance Construction — oi","text":"Function construct OptimInstanceBatchSingleCrit OptimInstanceBatchMultiCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/oi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Optimization Instance Construction — oi","text":"","code":"oi(   objective,   search_space = NULL,   terminator,   callbacks = NULL,   check_values = TRUE,   keep_evals = \"all\" )"},{"path":"https://bbotk.mlr-org.com/dev/reference/oi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Optimization Instance Construction — oi","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. callbacks (list mlr3misc::Callback) List callbacks. check_values (logical(1)) points evaluation results checked validity? keep_evals (character(1)) Keep best evaluations archive?","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/oi_async.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar for Asynchronous Optimization Instance Construction — oi_async","title":"Syntactic Sugar for Asynchronous Optimization Instance Construction — oi_async","text":"Function construct OptimInstanceAsyncSingleCrit OptimInstanceAsyncMultiCrit.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/oi_async.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar for Asynchronous Optimization Instance Construction — oi_async","text":"","code":"oi_async(   objective,   search_space = NULL,   terminator,   check_values = FALSE,   callbacks = NULL,   rush = NULL )"},{"path":"https://bbotk.mlr-org.com/dev/reference/oi_async.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar for Asynchronous Optimization Instance Construction — oi_async","text":"objective (Objective) Objective function. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective. terminator Terminator Termination criterion. check_values (logical(1)) points evaluation results checked validity? callbacks (list mlr3misc::Callback) List callbacks. rush (Rush) rush instance supplied, tuning runs without batches.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/opt.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar Optimizer Construction — opt","title":"Syntactic Sugar Optimizer Construction — opt","text":"function complements mlr_optimizers functions spirit mlr_sugar mlr3.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/opt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar Optimizer Construction — opt","text":"","code":"opt(.key, ...)  opts(.keys, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/opt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar Optimizer Construction — opt","text":".key (character(1)) Key passed respective dictionary retrieve object. ... (named list()) Named arguments passed constructor, set parameters paradox::ParamSet, set public field. See mlr3misc::dictionary_sugar_get() details. .keys (character()) Keys passed respective dictionary retrieve multiple objects.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/opt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar Optimizer Construction — opt","text":"Optimizer opt(). list Optimizer opts().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/opt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar Optimizer Construction — opt","text":"","code":"opt(\"random_search\", batch_size = 10) #>  #> ── <OptimizerBatchRandomSearch> - Random Search ──────────────────────────────── #> • Parameters: batch_size=10 #> • Parameter classes: <ParamLgl>, <ParamInt>, <ParamDbl>, and <ParamFct> #> • Properties: dependencies, single-crit, and multi-crit #> • Packages: bbotk"},{"path":"https://bbotk.mlr-org.com/dev/reference/optimize_async_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Asynchronous Optimization — optimize_async_default","title":"Default Asynchronous Optimization — optimize_async_default","text":"Used internally OptimizerAsync.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/optimize_async_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Asynchronous Optimization — optimize_async_default","text":"","code":"optimize_async_default(instance, optimizer, design = NULL, n_workers = NULL)"},{"path":"https://bbotk.mlr-org.com/dev/reference/optimize_async_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Asynchronous Optimization — optimize_async_default","text":"instance OptimInstanceAsync. optimizer OptimizerAsync. design data.table::data.table() (Initial) design send queue. n_workers Number workers started. Defaults number workers set rush::rush_plan().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/optimize_batch_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Batch Optimization Function — optimize_batch_default","title":"Default Batch Optimization Function — optimize_batch_default","text":"Used internally OptimizerBatch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/optimize_batch_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Batch Optimization Function — optimize_batch_default","text":"","code":"optimize_batch_default(instance, optimizer)"},{"path":"https://bbotk.mlr-org.com/dev/reference/optimize_batch_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Batch Optimization Function — optimize_batch_default","text":"instance OptimInstance optimizer OptimizerBatch","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/optimize_batch_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Batch Optimization Function — optimize_batch_default","text":"data.table::data.table","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. mlr3misc clbk, clbks, mlr_callbacks","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/search_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Get start values for optimizers — search_start","title":"Get start values for optimizers — search_start","text":"Returns named numeric vector start values optimizers.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/search_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get start values for optimizers — search_start","text":"","code":"search_start(search_space, type = \"random\")"},{"path":"https://bbotk.mlr-org.com/dev/reference/search_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get start values for optimizers — search_start","text":"search_space paradox::ParamSet. type (character(1))random start values center search space?","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/search_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get start values for optimizers — search_start","text":"named 'numeric()'","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/shrink_ps.html","id":null,"dir":"Reference","previous_headings":"","what":"Shrink a ParamSet towards a point. — shrink_ps","title":"Shrink a ParamSet towards a point. — shrink_ps","text":"Shrinks paradox::ParamSet towards point. Boundaries numeric values shrinked interval around point half previous length, discrete variables, random (currently chosen) level dropped. Note paradox::p_lgl()s value shrinked around set default value instead dropping level. Also, tag shrinked added. Note returned paradox::ParamSet lost original defaults, may become infeasible. paradox::ParamSet trafo, x expected contain transformed values.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/shrink_ps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shrink a ParamSet towards a point. — shrink_ps","text":"","code":"shrink_ps(param_set, x, check.feasible = FALSE)"},{"path":"https://bbotk.mlr-org.com/dev/reference/shrink_ps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shrink a ParamSet towards a point. — shrink_ps","text":"param_set (paradox::ParamSet) paradox::ParamSet shrinked. x (data.table::data.table)data.table::data.table one row containing point shrink around. check.feasible (logical(1)) feasibility parameters checked? feasibility checked, invalid values present, shrinking done. Must turned case paradox::ParamSet trafo. Default FALSE.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/shrink_ps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shrink a ParamSet towards a point. — shrink_ps","text":"paradox::ParamSet","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/shrink_ps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shrink a ParamSet towards a point. — shrink_ps","text":"","code":"library(paradox) library(data.table) param_set = ps(   x = p_dbl(lower = 0, upper = 10),   x2 = p_int(lower = -10, upper = 10),   x3 = p_fct(levels = c(\"a\", \"b\", \"c\")),   x4 = p_lgl() ) x = data.table(x1 = 5, x2 = 0, x3 = \"b\", x4 = FALSE) shrink_ps(param_set, x = x) #> <ParamSet(4)> #>        id    class lower upper nlevels        default  value #>    <char>   <char> <num> <num>   <num>         <list> <list> #> 1:      x ParamDbl     0    10     Inf <NoDefault[0]> [NULL] #> 2:     x2 ParamInt    -5     5      11 <NoDefault[0]> [NULL] #> 3:     x3 ParamFct    NA    NA       2 <NoDefault[0]> [NULL] #> 4:     x4 ParamLgl    NA    NA       2          FALSE [NULL]"},{"path":"https://bbotk.mlr-org.com/dev/reference/terminated_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Termination Error — terminated_error","title":"Termination Error — terminated_error","text":"Error class termination.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/terminated_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Termination Error — terminated_error","text":"","code":"terminated_error(optim_instance)"},{"path":"https://bbotk.mlr-org.com/dev/reference/terminated_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Termination Error — terminated_error","text":"optim_instance OptimInstance OptimInstance terminated.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/trafo_xs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the transformed x-values — trafo_xs","title":"Calculate the transformed x-values — trafo_xs","text":"Transforms given list() list transformed x values.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/trafo_xs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the transformed x-values — trafo_xs","text":"","code":"trafo_xs(xs, search_space)"},{"path":"https://bbotk.mlr-org.com/dev/reference/trafo_xs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the transformed x-values — trafo_xs","text":"xs (list())  List x-values. search_space paradox::ParamSet Search space.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/transform_xdt_to_xss.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the transformed x-values — transform_xdt_to_xss","title":"Calculates the transformed x-values — transform_xdt_to_xss","text":"Transforms given data.table() list transformed x values. trafo defined just convert data.table() list. Mainly internal usage.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/transform_xdt_to_xss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the transformed x-values — transform_xdt_to_xss","text":"","code":"transform_xdt_to_xss(xdt, search_space)"},{"path":"https://bbotk.mlr-org.com/dev/reference/transform_xdt_to_xss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the transformed x-values — transform_xdt_to_xss","text":"xdt (data.table::data.table()) Set untransformed points / points search space. One point per row, e.g. data.table(x1 = c(1, 3), x2 = c(2, 4)). Column names match ids search_space. However, xdt can contain additional columns. search_space (paradox::ParamSet) Specifies search space Optimizer. paradox::ParamSet describes either subset domain Objective describes set parameters together trafo function transforms values search space values domain. Depending context, value defaults domain objective.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/transform_xdt_to_xss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the transformed x-values — transform_xdt_to_xss","text":"list().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/trm.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntactic Sugar Terminator Construction — trm","title":"Syntactic Sugar Terminator Construction — trm","text":"function complements mlr_terminators functions spirit mlr_sugar mlr3.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/trm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntactic Sugar Terminator Construction — trm","text":"","code":"trm(.key, ...)  trms(.keys, ...)"},{"path":"https://bbotk.mlr-org.com/dev/reference/trm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntactic Sugar Terminator Construction — trm","text":".key (character(1)) Key passed respective dictionary retrieve object. ... (named list()) Named arguments passed constructor, set parameters paradox::ParamSet, set public field. See mlr3misc::dictionary_sugar_get() details. .keys (character()) Keys passed respective dictionary retrieve multiple objects.","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/trm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntactic Sugar Terminator Construction — trm","text":"Terminator trm(). list Terminator trms().","code":""},{"path":"https://bbotk.mlr-org.com/dev/reference/trm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntactic Sugar Terminator Construction — trm","text":"","code":"trm(\"evals\", n_evals = 10) #>  #> ── <TerminatorEvals> - Number of Evaluation ──────────────────────────────────── #> • Parameters: n_evals=10, k=0 #> • Terminators:"},{"path":[]},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-150","dir":"Changelog","previous_headings":"","what":"bbotk 1.5.0","title":"bbotk 1.5.0","text":"CRAN release: 2024-12-17 compatibility: irace 4.1.0 compatibility: rush 0.2.0 refactor: Replace Codomain$maximization_to_minimization $direction field. feat: Save ArchiveAsync data.table ArchiveAsyncFrozen.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-141","dir":"Changelog","previous_headings":"","what":"bbotk 1.4.1","title":"bbotk 1.4.1","text":"CRAN release: 2024-11-27 compatibility: irace 4.0.0","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-140","dir":"Changelog","previous_headings":"","what":"bbotk 1.4.0","title":"bbotk 1.4.0","text":"CRAN release: 2024-11-26 feat: Add OptimizerBatchChain runs multiple optimizers sequentially. refactor: pass extra $assign_result().","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-130","dir":"Changelog","previous_headings":"","what":"bbotk 1.3.0","title":"bbotk 1.3.0","text":"CRAN release: 2024-11-07 feat: Add new stage on_result_begin CallbackAsyncTuning CallbackBatchTuning. refactor: Rename stage on_result on_result_end CallbackAsyncTuning CallbackBatchTuning. docs: Extend CallbackAsyncTuning CallbackBatchTuning documentation.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-120","dir":"Changelog","previous_headings":"","what":"bbotk 1.2.0","title":"bbotk 1.2.0","text":"CRAN release: 2024-10-25 feat: ContextBatch ContextAsync result_extra field now access additional results passed instance. refactor: Additional information passed extra OptimInstance$assign_result().","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-111","dir":"Changelog","previous_headings":"","what":"bbotk 1.1.1","title":"bbotk 1.1.1","text":"CRAN release: 2024-10-15 feat: optimizers passes additional information OptimInstance$assign_result() method.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-110","dir":"Changelog","previous_headings":"","what":"bbotk 1.1.0","title":"bbotk 1.1.0","text":"CRAN release: 2024-09-09 docs: Move vignette mlr3book. feat: Add hypervolume stagnation terminator trm(\"stagnation_hypervolume\"). feat Add local search optimizer opt(\"local_search\"). refactor: Remove unused fields callbacks. fix: Add \"on_optimization_end_batch\" stage CallbackBatch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-101","dir":"Changelog","previous_headings":"","what":"bbotk 1.0.1","title":"bbotk 1.0.1","text":"CRAN release: 2024-07-24 refactor: extra columns results.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-100","dir":"Changelog","previous_headings":"","what":"bbotk 1.0.0","title":"bbotk 1.0.0","text":"CRAN release: 2024-06-28 feat: Introduce asynchronous optimization OptimizerAsync OptimInstanceAsync classes. BREAKING CHANGE: Optimizer class OptimizerBatch now. BREAKING CHANGE: OptimInstance class subclasses OptimInstanceBatch* now. BREAKING CHANGE: CallbackOptimization class CallbackBatch now. BREAKING CHANGE: ContextOptimization class ContextBatch now. BREAKING CHANGE: Remove ArchiveBest class keep_evals parameter OptimInstance.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-080","dir":"Changelog","previous_headings":"","what":"bbotk 0.8.0","title":"bbotk 0.8.0","text":"CRAN release: 2024-02-29 fix: OptimizerIrace failed logical parameters dependencies. refactor: Optimize runtime archive$best() method add ties method. compatibility: Work new paradox version 1.0.0","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-073","dir":"Changelog","previous_headings":"","what":"bbotk 0.7.3","title":"bbotk 0.7.3","text":"CRAN release: 2023-11-13 fix: OptimInstance$print() errored search space empty.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-072","dir":"Changelog","previous_headings":"","what":"bbotk 0.7.2","title":"bbotk 0.7.2","text":"CRAN release: 2022-12-08 fix: Standalone Tuner FSelector rejected ContextBatch.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-071","dir":"Changelog","previous_headings":"","what":"bbotk 0.7.1","title":"bbotk 0.7.1","text":"CRAN release: 2022-11-30 feat: Data unrelated specific point evaluation can written Archive$data_extra.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-070","dir":"Changelog","previous_headings":"","what":"bbotk 0.7.0","title":"bbotk 0.7.0","text":"CRAN release: 2022-11-05 fix: Terminator$format(with_params = TRUE) printed empty list parameter set. refactor: OptimizerIrace automatically added instances parameter Objective$constants. now , instances parameter can also set manually. BREAKING CHANGE: branin(xs) now branin(x1, x2, noise) branin_wu(x1, x2, fidelity). feat: Add ObjectiveRFunMany can evaluate list configurations user supplied function. fix: configurations missing parameter, ObjectiveRFunDt$eval_many() create column NA missing parameter. refactor: default digits OptimizerIrace 15 now avoid rounding errors. refactor: bounds double parameters processed 4 decimal places OptimizerIrace. default, bounds double parameters represented 15 decimal places now. digits parameter OptimizerIrace also changes number decimal places bounds now.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-060","dir":"Changelog","previous_headings":"","what":"bbotk 0.6.0","title":"bbotk 0.6.0","text":"CRAN release: 2022-10-25 fix: OptimizerIrace work parameters multiple dependencies. feat: Add new callback backups archive disk mlr_callbacks. feat: Create custom callbacks callback_batch() function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-054","dir":"Changelog","previous_headings":"","what":"bbotk 0.5.4","title":"bbotk 0.5.4","text":"CRAN release: 2022-08-25 feat: Add OptimizerFocusSearch performs focusing random search.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-053","dir":"Changelog","previous_headings":"","what":"bbotk 0.5.3","title":"bbotk 0.5.3","text":"CRAN release: 2022-05-04 feat: Optimizer Terminator objects field $id now.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-052","dir":"Changelog","previous_headings":"","what":"bbotk 0.5.2","title":"bbotk 0.5.2","text":"CRAN release: 2022-04-04 refactor: $print() method OptimInstance omits unnecessary columns now. fix: $clear() method OptimInstance raised error. fix: $clear() method Archive missed reset $start_time field. feat: Optimizer Terminator objects optional field $label now. feat: .data.table() functions objects class Dictionary extended additional columns. feat: Add .data.table.DictionaryTerminator() function.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-051","dir":"Changelog","previous_headings":"","what":"bbotk 0.5.1","title":"bbotk 0.5.1","text":"CRAN release: 2022-02-25 fix: return $.status() method TerminatorRunTime TerminatorClockTime consistent unit. return seconds now . fix: number evaluations recorded 0 log messages search space empty. feat: Add .data.table.DictionaryOptimizer() function. feat: New $help() method opens manual page Optimizer.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-050","dir":"Changelog","previous_headings":"","what":"bbotk 0.5.0","title":"bbotk 0.5.0","text":"CRAN release: 2022-01-19 feat: Add $nds_selection() method Archive. feat: New Codomain class allows extra parameters. refactor: Objective values automatically named. now , unnamed returns ObjectiveRFun named. fix: OptimInstance, Archive Objective objects cloned properly. refactor: fields $param_classes, $properties $packages Optimizer objects read-now. feat: branin() function exported now.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-040","dir":"Changelog","previous_headings":"","what":"bbotk 0.4.0","title":"bbotk 0.4.0","text":"CRAN release: 2021-09-13 feat: search space domain can now empty. feat: budget TerminatorEvals can now changed depending dimension search space parameter k. feat: Add bb_optimize() function. feat: Add OptimizerIrace calls irace::irace irace package.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-032","dir":"Changelog","previous_headings":"","what":"bbotk 0.3.2","title":"bbotk 0.3.2","text":"CRAN release: 2021-03-18 refactor: Internal changes.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-031","dir":"Changelog","previous_headings":"","what":"bbotk 0.3.1","title":"bbotk 0.3.1","text":"CRAN release: 2021-03-12 feat: Add $clear() method OptimInstance reset instance. refactor: Prettier $print() methods. feat: Assertions overlapping reserved names domain codomain.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-030","dir":"Changelog","previous_headings":"","what":"bbotk 0.3.0","title":"bbotk 0.3.0","text":"CRAN release: 2021-01-23 feat: check points results can now disables check_values flag OptimInstance, OptimInstanceSingleCrit, OptimInstanceMultiCrit, ObjectiveRFun ObjectiveRFunDt. refactor: data.table within Archive can now accessed $data. refactor: m parameter Archive$best() renamed batch. feat: New ArchiveBest class stores best scoring evaluation instead evaluations refactor: runtime reduced ObjectiveRFunDt used domain without trafo. fix: Add support ParamUty OptimizerDesignPoints. feat: start points OptimizerCmaes OptimizerNloptr can now randomly created center search space. feat: $optimize() method supports progress bars via package progressr.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-022","dir":"Changelog","previous_headings":"","what":"bbotk 0.2.2","title":"bbotk 0.2.2","text":"CRAN release: 2020-10-08 refactor: Remove dependency orphaned package bibtex. feat: Add OptimizerCmaes calls adagio::pureCMAES adagio package.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-021","dir":"Changelog","previous_headings":"","what":"bbotk 0.2.1","title":"bbotk 0.2.1","text":"CRAN release: 2020-09-05 refactor: Compact -memory representation R6 objects save space saving mlr3 objects via saveRDS(), serialize() etc. refactor: Warning error messages upstream package Optimizer installed.","code":""},{"path":"https://bbotk.mlr-org.com/dev/news/index.html","id":"bbotk-02","dir":"Changelog","previous_headings":"","what":"bbotk 0.2","title":"bbotk 0.2","text":"First version Black-Box Optimization Toolkit","code":""}]
