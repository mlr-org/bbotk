% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TerminatorCombo.R
\name{mlr_terminators_combo}
\alias{mlr_terminators_combo}
\alias{TerminatorCombo}
\title{Combine Terminators}
\description{
This class takes multiple \link{Terminator}s and terminates as soon as one or all
of the included terminators are positive.
}
\section{Dictionary}{

This \link{Terminator} can be instantiated via the
\link[mlr3misc:Dictionary]{dictionary} \link{mlr_terminators} or with the associated
sugar function \code{\link[=trm]{trm()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{mlr_terminators$get("combo")
trm("combo")
}\if{html}{\out{</div>}}
}

\section{Parameters}{

\describe{
\item{\code{any}}{\code{logical(1)}\cr
Terminate iff any included terminator is positive? (not all).
Default is \code{TRUE}.}
}
}

\examples{
trm("combo",
  list(trm("clock_time", stop_time = Sys.time() + 60),
    trm("evals", n_evals = 10)), any = FALSE
)
}
\seealso{
Other Terminator: 
\code{\link{Terminator}},
\code{\link{mlr_terminators_clock_time}},
\code{\link{mlr_terminators_evals}},
\code{\link{mlr_terminators_none}},
\code{\link{mlr_terminators_perf_reached}},
\code{\link{mlr_terminators_run_time}},
\code{\link{mlr_terminators_stagnation_batch}},
\code{\link{mlr_terminators_stagnation}},
\code{\link{mlr_terminators}}
}
\concept{Terminator}
\section{Super class}{
\code{\link[bbotk:Terminator]{bbotk::Terminator}} -> \code{TerminatorCombo}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{terminators}}{(\code{list()})\cr
List of objects of class \link{Terminator}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TerminatorCombo-new}{\code{TerminatorCombo$new()}}
\item \href{#method-TerminatorCombo-is_terminated}{\code{TerminatorCombo$is_terminated()}}
\item \href{#method-TerminatorCombo-print}{\code{TerminatorCombo$print()}}
\item \href{#method-TerminatorCombo-remaining_time}{\code{TerminatorCombo$remaining_time()}}
\item \href{#method-TerminatorCombo-status_long}{\code{TerminatorCombo$status_long()}}
\item \href{#method-TerminatorCombo-clone}{\code{TerminatorCombo$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="Terminator" data-id="format"><a href='../../bbotk/html/Terminator.html#method-Terminator-format'><code>bbotk::Terminator$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="Terminator" data-id="status"><a href='../../bbotk/html/Terminator.html#method-Terminator-status'><code>bbotk::Terminator$status()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TerminatorCombo-new"></a>}}
\if{latex}{\out{\hypertarget{method-TerminatorCombo-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TerminatorCombo$new(terminators = list(TerminatorNone$new()))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{terminators}}{(\code{list()})\cr
List of objects of class \link{Terminator}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TerminatorCombo-is_terminated"></a>}}
\if{latex}{\out{\hypertarget{method-TerminatorCombo-is_terminated}{}}}
\subsection{Method \code{is_terminated()}}{
Is \code{TRUE} iff the termination criterion is positive, and \code{FALSE}
otherwise.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TerminatorCombo$is_terminated(archive)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{archive}}{(\link{Archive}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{logical(1)}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TerminatorCombo-print"></a>}}
\if{latex}{\out{\hypertarget{method-TerminatorCombo-print}{}}}
\subsection{Method \code{print()}}{
Printer.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TerminatorCombo$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(ignored).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TerminatorCombo-remaining_time"></a>}}
\if{latex}{\out{\hypertarget{method-TerminatorCombo-remaining_time}{}}}
\subsection{Method \code{remaining_time()}}{
Returns the remaining runtime in seconds. If \code{any = TRUE}, the remaining
runtime is determined by the time-based terminator with the shortest time
remaining. If non-time-based terminators are used and \code{any = FALSE},
the the remaining runtime is always \code{Inf}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TerminatorCombo$remaining_time(archive)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{archive}}{(\link{Archive}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{integer(1)}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TerminatorCombo-status_long"></a>}}
\if{latex}{\out{\hypertarget{method-TerminatorCombo-status_long}{}}}
\subsection{Method \code{status_long()}}{
Returns \code{max_steps} and \code{current_steps} for each terminator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TerminatorCombo$status_long(archive)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{archive}}{(\link{Archive}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link[data.table:data.table]{data.table::data.table}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TerminatorCombo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TerminatorCombo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TerminatorCombo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
