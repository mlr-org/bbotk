% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TerminatorPerfReached.R
\name{mlr_terminators_perf_reached}
\alias{mlr_terminators_perf_reached}
\alias{TerminatorPerfReached}
\title{Terminator that stops when a performance level has been reached}
\arguments{
\item{instance}{(\link{Instance}).}
}
\value{
\code{logical(1)}.
}
\description{
Class to terminate the optimization after a performance level has been hit.

Creates a new instance of this \link[R6:R6Class]{R6} class.

Is \code{TRUE} iff the termination criterion is positive, and \code{FALSE} otherwise.
}
\section{Dictionary}{

This \link{Terminator} can be instantiated via the
\link[mlr3misc:Dictionary]{dictionary} \link{mlr_terminators} or with the associated
sugar function \code{\link[=term]{term()}}:\preformatted{mlr_terminators$get("perf_reached")
term("perf_reached")
}
}

\section{Parameters}{

\itemize{
\item \code{level} (\code{numeric(1)})\cr
Performance level that needs to be reached, default is 0.
Terminates if the performance exceeds (respective measure has to be maximized) or
falls below (respective measure has to be minimized) this value.
}
}

\examples{
TerminatorPerfReached$new()
term("perf_reached")
}
\seealso{
Other Terminator: 
\code{\link{Terminator}},
\code{\link{mlr_terminators_clock_time}},
\code{\link{mlr_terminators_combo}},
\code{\link{mlr_terminators_evals}},
\code{\link{mlr_terminators_model_time}},
\code{\link{mlr_terminators_none}},
\code{\link{mlr_terminators_stagnation}},
\code{\link{mlr_terminators}}
}
\concept{Terminator}
