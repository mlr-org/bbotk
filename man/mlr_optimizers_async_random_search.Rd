% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OptimizerAsyncRandomSearch.R
\name{mlr_optimizers_async_random_search}
\alias{mlr_optimizers_async_random_search}
\alias{OptimizerAsyncRandomSearch}
\title{Asynchronous Optimization via Random Search}
\source{
Bergstra J, Bengio Y (2012).
\dQuote{Random Search for Hyper-Parameter Optimization.}
\emph{Journal of Machine Learning Research}, \bold{13}(10), 281--305.
\url{https://jmlr.csail.mit.edu/papers/v13/bergstra12a.html}.
}
\description{
\code{OptimizerAsyncRandomSearch} class that implements a simple Random Search.
}
\section{Dictionary}{

This \link{Optimizer} can be instantiated via the \link[mlr3misc:Dictionary]{dictionary}
\link{mlr_optimizers} or with the associated sugar function \code{\link[=opt]{opt()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{mlr_optimizers$get("async_random_search")
opt("async_random_search")
}\if{html}{\out{</div>}}
}

\section{Progress Bars}{

\verb{$optimize()} supports progress bars via the package \CRANpkg{progressr}
combined with a \link{Terminator}. Simply wrap the function in
\code{progressr::with_progress()} to enable them. We recommend to use package
\CRANpkg{progress} as backend; enable with \code{progressr::handlers("progress")}.
}

\examples{
search_space = domain = ps(x = p_dbl(lower = -1, upper = 1))

codomain = ps(y = p_dbl(tags = "minimize"))

objective_function = function(xs) {
  list(y = as.numeric(xs)^2)
}

objective = ObjectiveRFun$new(
 fun = objective_function,
 domain = domain,
 codomain = codomain)

instance = OptimInstanceSingleCrit$new(
 objective = objective,
 search_space = search_space,
 terminator = trm("evals", n_evals = 10))


optimizer = opt("async_random_search")

# modifies the instance by reference
optimizer$optimize(instance)

# returns best scoring evaluation
instance$result

# allows access of data.table of full path of all evaluations
as.data.table(instance$archive$data)
}
\section{Super class}{
\code{\link[bbotk:OptimizerAsync]{bbotk::OptimizerAsync}} -> \code{OptimizerAsyncRandomSearch}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OptimizerAsyncRandomSearch-new}{\code{OptimizerAsyncRandomSearch$new()}}
\item \href{#method-OptimizerAsyncRandomSearch-optimize}{\code{OptimizerAsyncRandomSearch$optimize()}}
\item \href{#method-OptimizerAsyncRandomSearch-clone}{\code{OptimizerAsyncRandomSearch$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="OptimizerAsync" data-id="format"><a href='../../bbotk/html/OptimizerAsync.html#method-OptimizerAsync-format'><code>bbotk::OptimizerAsync$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="OptimizerAsync" data-id="help"><a href='../../bbotk/html/OptimizerAsync.html#method-OptimizerAsync-help'><code>bbotk::OptimizerAsync$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="bbotk" data-topic="OptimizerAsync" data-id="print"><a href='../../bbotk/html/OptimizerAsync.html#method-OptimizerAsync-print'><code>bbotk::OptimizerAsync$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OptimizerAsyncRandomSearch-new"></a>}}
\if{latex}{\out{\hypertarget{method-OptimizerAsyncRandomSearch-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OptimizerAsyncRandomSearch$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OptimizerAsyncRandomSearch-optimize"></a>}}
\if{latex}{\out{\hypertarget{method-OptimizerAsyncRandomSearch-optimize}{}}}
\subsection{Method \code{optimize()}}{
Starts the asynchronous optimization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OptimizerAsyncRandomSearch$optimize(inst)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inst}}{(\link{OptimInstance}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link[data.table:data.table]{data.table::data.table}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OptimizerAsyncRandomSearch-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OptimizerAsyncRandomSearch-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OptimizerAsyncRandomSearch$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
