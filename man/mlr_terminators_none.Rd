% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TerminatorNone.R
\name{mlr_terminators_none}
\alias{mlr_terminators_none}
\alias{TerminatorNone}
\title{Terminator that never stops.}
\arguments{
\item{instance}{(\link{Instance}).}
}
\value{
\code{logical(1)}.
}
\description{
Mainly useful for optimization algorithms where the stopping is inherently
controlled by the algorithm itself (e.g. \link[mlr3tuning:TunerGridSearch]{mlr3tuning::TunerGridSearch}).

Creates a new instance of this \link[R6:R6Class]{R6} class.

Is \code{TRUE} iff the termination criterion is positive, and \code{FALSE} otherwise.
}
\section{Dictionary}{

This \link{Terminator} can be instantiated via the
\link[mlr3misc:Dictionary]{dictionary} \link{mlr_terminators} or with the associated
sugar function \code{\link[=term]{term()}}:\preformatted{mlr_terminators$get("none")
term("none")
}
}

\seealso{
Other Terminator: 
\code{\link{Terminator}},
\code{\link{mlr_terminators_clock_time}},
\code{\link{mlr_terminators_combo}},
\code{\link{mlr_terminators_evals}},
\code{\link{mlr_terminators_model_time}},
\code{\link{mlr_terminators_perf_reached}},
\code{\link{mlr_terminators_stagnation}},
\code{\link{mlr_terminators}}
}
\concept{Terminator}
